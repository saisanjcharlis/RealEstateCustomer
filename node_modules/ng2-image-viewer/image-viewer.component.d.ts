import { AfterViewInit, EventEmitter, OnChanges, OnInit, Renderer2, SimpleChanges } from '@angular/core';
/**
 * @author Breno Prata - 22/12/2017
 */
export declare class ImageViewerComponent implements OnChanges, OnInit, AfterViewInit {
    private renderer;
    BASE_64_IMAGE: string;
    BASE_64_PNG: string;
    ROTACAO_PADRAO_GRAUS: number;
    idContainer: any;
    images: any[];
    rotate: boolean;
    download: boolean;
    fullscreen: boolean;
    resetZoom: boolean;
    loadOnInit: boolean;
    showOptions: boolean;
    zoomInButton: boolean;
    zoomOutButton: boolean;
    showPDFOnlyOption: boolean;
    primaryColor: string;
    buttonsColor: string;
    buttonsHover: string;
    defaultDownloadName: string;
    rotateRightTooltipLabel: string;
    rotateLeftTooltipLabel: string;
    resetZoomTooltipLabel: string;
    fullscreenTooltipLabel: string;
    zoomInTooltipLabel: string;
    zoomOutTooltipLabel: string;
    downloadTooltipLabel: string;
    showPDFOnlyLabel: string;
    openInNewTabTooltipLabel: string;
    enableTooltip: boolean;
    onNext: EventEmitter<{}>;
    onPrevious: EventEmitter<{}>;
    viewer: any;
    wrapper: any;
    curSpan: any;
    viewerFullscreen: any;
    totalImagens: number;
    indexImagemAtual: number;
    rotacaoImagemAtual: number;
    stringDownloadImagem: string;
    isImagemVertical: boolean;
    showOnlyPDF: boolean;
    zoomPercent: number;
    constructor(renderer: Renderer2);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    private inicializarCores();
    ngOnChanges(changes: SimpleChanges): void;
    zoomIn(): void;
    zoomOut(): void;
    primaryColorChange(changes: SimpleChanges): void;
    buttonsColorChange(changes: SimpleChanges): void;
    defaultDownloadNameChange(changes: SimpleChanges): void;
    imagesChange(changes: SimpleChanges): void;
    isImagensPresentes(): boolean;
    inicializarImageViewer(): void;
    showImage(): void;
    carregarViewerPDF(): void;
    injetarIframe(widthIframe: number, heightIframe: number): void;
    getTamanhoIframe(): {
        widthIframe: number;
        heightIframe: number;
    };
    esconderBotoesImageViewer(): void;
    isPDF(): any;
    isURlImagem(): any;
    prepararTrocaImagem(): void;
    limparCacheElementos(): void;
    proximaImagem(): void;
    imagemAnterior(): void;
    rotacionarDireita(): void;
    rotacionarEsquerda(): void;
    resetarZoom(): number;
    atualizarRotacao(isAnimacao?: boolean): void;
    getScale(): number;
    isImagemSobrepondoNaVertical(): boolean;
    carregarImagem(novaRotacao: string, scale: string, isAnimacao?: boolean): void;
    retirarAnimacao(componente: string): void;
    adicionarRotacao(componente: string, novaRotacao: string, scale: string): void;
    adicionarAnimacao(componente: string): void;
    mostrarFullscreen(): void;
    converterPDFBase64ParaBlob(): string;
    private getImagemAtual();
    base64ToArrayBuffer(data: any): Uint8Array;
    showPDFOnly(): void;
    setStyleClass(nomeClasse: string, nomeStyle: string, cor: string): void;
    atualizarCorHoverIn(event: MouseEvent): void;
    atualizarCorHoverOut(event: MouseEvent): void;
    getIdIframe(): string;
}
