!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/common"),require("@angular/core"),require("mapbox-gl"),require("@turf/bbox"),require("@turf/helpers"),require("rxjs"),require("rxjs/operators"),require("@mapbox/mapbox-gl-geocoder"),require("supercluster")):"function"==typeof define&&define.amd?define("ngx-mapbox-gl",["exports","@angular/common","@angular/core","mapbox-gl","@turf/bbox","@turf/helpers","rxjs","rxjs/operators","@mapbox/mapbox-gl-geocoder","supercluster"],e):e((t=t||self)["ngx-mapbox-gl"]={},t.ng.common,t.ng.core,t.MapboxGl,t.bbox,t.helpers,t.rxjs,t.rxjs.operators,t.MapboxGeocoder,t.Supercluster)}(this,function(t,e,n,r,o,i,s,a,u,p){"use strict";o=o&&o.hasOwnProperty("default")?o["default"]:o,p=p&&p.hasOwnProperty("default")?p["default"]:p;var c=function(){return(c=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var o in e=arguments[n])Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o]);return t}).apply(this,arguments)};function h(t,e,n,r){return new(n||(n=Promise))(function(o,i){function s(t){try{u(r.next(t))}catch(e){i(e)}}function a(t){try{u(r["throw"](t))}catch(e){i(e)}}function u(t){t.done?o(t.value):new n(function(e){e(t.value)}).then(s,a)}u((r=r.apply(t,e||[])).next())})}function m(t,e){var n,r,o,i,s={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:a(0),"throw":a(1),"return":a(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function a(i){return function(a){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(o=2&i[0]?r["return"]:i[0]?r["throw"]||((o=r["return"])&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!(o=(o=s.trys).length>0&&o[o.length-1])&&(6===i[0]||2===i[0])){s=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){s.label=i[1];break}if(6===i[0]&&s.label<o[1]){s.label=o[1],o=i;break}if(o&&s.label<o[2]){s.label=o[2],s.ops.push(i);break}o[2]&&s.ops.pop(),s.trys.pop();continue}i=e.call(t,s)}catch(a){i=[6,a],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,a])}}}function l(t){var e="function"==typeof Symbol&&t[Symbol.iterator],n=0;return e?e.call(t):{next:function(){return t&&n>=t.length&&(t=void 0),{value:t&&t[n++],done:!t}}}}var d=new n.InjectionToken("MapboxApiKey"),f=function(){return function(){}}(),g=function(){function t(t,e,n){this.zone=t,this.MAPBOX_API_KEY=e,this.MglResizeEventEmitter=n,this.mapCreated=new s.AsyncSubject,this.mapLoaded=new s.AsyncSubject,this.layerIdsToRemove=[],this.sourceIdsToRemove=[],this.markersToRemove=[],this.popupsToRemove=[],this.imageIdsToRemove=[],this.subscription=new s.Subscription,this.mapCreated$=this.mapCreated.asObservable(),this.mapLoaded$=this.mapLoaded.asObservable()}return t.prototype.setup=function(t){var e=this;this.zone.onStable.pipe(a.first()).subscribe(function(){e.assign(r,"accessToken",t.accessToken||e.MAPBOX_API_KEY),t.customMapboxApiUrl&&e.assign(r,"config.API_URL",t.customMapboxApiUrl),e.createMap(t.mapOptions),e.hookEvents(t.mapEvents),e.mapEvents=t.mapEvents,e.mapCreated.next(undefined),e.mapCreated.complete()})},t.prototype.destroyMap=function(){this.mapInstance&&(this.subscription.unsubscribe(),this.mapInstance.remove())},t.prototype.updateMinZoom=function(t){var e=this;return this.zone.runOutsideAngular(function(){e.mapInstance.setMinZoom(t)})},t.prototype.updateMaxZoom=function(t){var e=this;return this.zone.runOutsideAngular(function(){e.mapInstance.setMaxZoom(t)})},t.prototype.updateScrollZoom=function(t){var e=this;return this.zone.runOutsideAngular(function(){t?e.mapInstance.scrollZoom.enable():e.mapInstance.scrollZoom.disable()})},t.prototype.updateDragRotate=function(t){var e=this;return this.zone.runOutsideAngular(function(){t?e.mapInstance.dragRotate.enable():e.mapInstance.dragRotate.disable()})},t.prototype.updateTouchZoomRotate=function(t){var e=this;return this.zone.runOutsideAngular(function(){t?e.mapInstance.touchZoomRotate.enable():e.mapInstance.touchZoomRotate.disable()})},t.prototype.updateDoubleClickZoom=function(t){var e=this;return this.zone.runOutsideAngular(function(){t?e.mapInstance.doubleClickZoom.enable():e.mapInstance.doubleClickZoom.disable()})},t.prototype.updateKeyboard=function(t){var e=this;return this.zone.runOutsideAngular(function(){t?e.mapInstance.keyboard.enable():e.mapInstance.keyboard.disable()})},t.prototype.updateDragPan=function(t){var e=this;return this.zone.runOutsideAngular(function(){t?e.mapInstance.dragPan.enable():e.mapInstance.dragPan.disable()})},t.prototype.updateBoxZoom=function(t){var e=this;return this.zone.runOutsideAngular(function(){t?e.mapInstance.boxZoom.enable():e.mapInstance.boxZoom.disable()})},t.prototype.updateStyle=function(t){var e=this;return this.zone.runOutsideAngular(function(){e.mapInstance.setStyle(t)})},t.prototype.updateMaxBounds=function(t){var e=this;return this.zone.runOutsideAngular(function(){e.mapInstance.setMaxBounds(t)})},t.prototype.changeCanvasCursor=function(t){this.mapInstance.getCanvasContainer().style.cursor=t},t.prototype.queryRenderedFeatures=function(t,e){return this.mapInstance.queryRenderedFeatures(t,e)},t.prototype.panTo=function(t,e){var n=this;return this.zone.runOutsideAngular(function(){n.mapInstance.panTo(t,e)})},t.prototype.move=function(t,e,n,r,o,i){var s=this;return this.zone.runOutsideAngular(function(){s.mapInstance[t](c({},e,{zoom:n||s.mapInstance.getZoom(),center:r||s.mapInstance.getCenter(),bearing:o||s.mapInstance.getBearing(),pitch:i||s.mapInstance.getPitch()}))})},t.prototype.addLayer=function(t,e,n){var r=this;this.zone.runOutsideAngular(function(){Object.keys(t.layerOptions).forEach(function(e){var n=e;t.layerOptions[n]===undefined&&delete t.layerOptions[n]}),r.mapInstance.addLayer(t.layerOptions,n),e&&(t.layerEvents.click.observers.length&&r.mapInstance.on("click",t.layerOptions.id,function(e){r.zone.run(function(){t.layerEvents.click.emit(e)})}),t.layerEvents.mouseEnter.observers.length&&r.mapInstance.on("mouseenter",t.layerOptions.id,function(e){r.zone.run(function(){t.layerEvents.mouseEnter.emit(e)})}),t.layerEvents.mouseLeave.observers.length&&r.mapInstance.on("mouseleave",t.layerOptions.id,function(e){r.zone.run(function(){t.layerEvents.mouseLeave.emit(e)})}),t.layerEvents.mouseMove.observers.length&&r.mapInstance.on("mousemove",t.layerOptions.id,function(e){r.zone.run(function(){t.layerEvents.mouseMove.emit(e)})}))})},t.prototype.removeLayer=function(t){this.layerIdsToRemove.push(t)},t.prototype.addMarker=function(t){var e=this,n={offset:t.markersOptions.offset,anchor:t.markersOptions.anchor,draggable:!!t.markersOptions.draggable};t.markersOptions.element.childNodes.length>0&&(n.element=t.markersOptions.element);var o=new r.Marker(n);t.markersEvents.dragStart.observers.length&&o.on("dragstart",function(n){return e.zone.run(function(){return t.markersEvents.dragStart.emit(n.target)})}),t.markersEvents.drag.observers.length&&o.on("drag",function(n){return e.zone.run(function(){return t.markersEvents.drag.emit(n.target)})}),t.markersEvents.dragEnd.observers.length&&o.on("dragend",function(n){return e.zone.run(function(){return t.markersEvents.dragEnd.emit(n.target)})});var i=t.markersOptions.feature?t.markersOptions.feature.geometry.coordinates:t.markersOptions.lngLat;return o.setLngLat(i),this.zone.runOutsideAngular(function(){return o.addTo(e.mapInstance),o})},t.prototype.removeMarker=function(t){this.markersToRemove.push(t)},t.prototype.createPopup=function(t,e){var n=this;return this.zone.runOutsideAngular(function(){Object.keys(t.popupOptions).forEach(function(e){return t.popupOptions[e]===undefined&&delete t.popupOptions[e]});var o=new r.Popup(t.popupOptions);return o.setDOMContent(e),t.popupEvents.close.observers.length&&o.on("close",function(){n.zone.run(function(){t.popupEvents.close.emit()})}),t.popupEvents.open.observers.length&&o.on("open",function(){n.zone.run(function(){t.popupEvents.open.emit()})}),o})},t.prototype.addPopupToMap=function(t,e,n){var r=this;return void 0===n&&(n=!1),this.zone.runOutsideAngular(function(){n&&t._listeners&&delete t._listeners.open,t.setLngLat(e),t.addTo(r.mapInstance)})},t.prototype.addPopupToMarker=function(t,e){return this.zone.runOutsideAngular(function(){t.setPopup(e)})},t.prototype.removePopupFromMap=function(t,e){void 0===e&&(e=!1),e&&t._listeners&&delete t._listeners.close,this.popupsToRemove.push(t)},t.prototype.removePopupFromMarker=function(t){return this.zone.runOutsideAngular(function(){t.setPopup(undefined)})},t.prototype.addControl=function(t,e){var n=this;return this.zone.runOutsideAngular(function(){n.mapInstance.addControl(t,e)})},t.prototype.removeControl=function(t){var e=this;return this.zone.runOutsideAngular(function(){e.mapInstance.removeControl(t)})},t.prototype.loadAndAddImage=function(t,e,n){return h(this,void 0,void 0,function(){var r=this;return m(this,function(o){return[2,this.zone.runOutsideAngular(function(){return new Promise(function(o,i){r.mapInstance.loadImage(e,function(e,s){e?i(e):(r.addImage(t,s,n),o())})})})]})})},t.prototype.addImage=function(t,e,n){var r=this;return this.zone.runOutsideAngular(function(){r.mapInstance.addImage(t,e,n)})},t.prototype.removeImage=function(t){this.imageIdsToRemove.push(t)},t.prototype.addSource=function(t,e){var n=this;return this.zone.runOutsideAngular(function(){Object.keys(e).forEach(function(t){return e[t]===undefined&&delete e[t]}),n.mapInstance.addSource(t,e)})},t.prototype.getSource=function(t){return this.mapInstance.getSource(t)},t.prototype.removeSource=function(t){this.sourceIdsToRemove.push(t)},t.prototype.setAllLayerPaintProperty=function(t,e){var n=this;return this.zone.runOutsideAngular(function(){Object.keys(e).forEach(function(r){n.mapInstance.setPaintProperty(t,r,e[r])})})},t.prototype.setAllLayerLayoutProperty=function(t,e){var n=this;return this.zone.runOutsideAngular(function(){Object.keys(e).forEach(function(r){n.mapInstance.setLayoutProperty(t,r,e[r])})})},t.prototype.setLayerFilter=function(t,e){var n=this;return this.zone.runOutsideAngular(function(){n.mapInstance.setFilter(t,e)})},t.prototype.setLayerBefore=function(t,e){var n=this;return this.zone.runOutsideAngular(function(){n.mapInstance.moveLayer(t,e)})},t.prototype.setLayerZoomRange=function(t,e,n){var r=this;return this.zone.runOutsideAngular(function(){r.mapInstance.setLayerZoomRange(t,e||0,n||20)})},t.prototype.fitBounds=function(t,e){var n=this;return this.zone.runOutsideAngular(function(){n.mapInstance.fitBounds(t,e)})},t.prototype.fitScreenCoordinates=function(t,e,n){var r=this;return this.zone.runOutsideAngular(function(){r.mapInstance.fitScreenCoordinates(t[0],t[1],e,n)})},t.prototype.getCurrentViewportBbox=function(){var t=this.mapInstance.getCanvas(),e=parseInt(t.style.width,10),n=parseInt(t.style.height,10),r=this.mapInstance.unproject([0,0]).toArray(),s=this.mapInstance.unproject([e,0]).toArray(),a=this.mapInstance.unproject([e,n]).toArray(),u=this.mapInstance.unproject([0,n]).toArray();return o(i.polygon([[r,s,a,u,r]]))},t.prototype.applyChanges=function(){var t=this;this.zone.runOutsideAngular(function(){t.removeLayers(),t.removeSources(),t.removeMarkers(),t.removePopups(),t.removeImages()})},t.prototype.createMap=function(t){var e=this;n.NgZone.assertNotInAngularZone(),Object.keys(t).forEach(function(e){var n=e;t[n]===undefined&&delete t[n]}),this.mapInstance=new r.Map(t),window&&/msie\s|trident\/|edge\//i.test(window.navigator.userAgent)&&this.mapInstance.setStyle(t.style);var o=this.zone.onMicrotaskEmpty.subscribe(function(){return e.applyChanges()});if(this.MglResizeEventEmitter){var i=this.MglResizeEventEmitter.resizeEvent.subscribe(function(){e.mapInstance.resize()});this.subscription.add(i)}this.subscription.add(o)},t.prototype.removeLayers=function(){var t,e;try{for(var n=l(this.layerIdsToRemove),r=n.next();!r.done;r=n.next()){var o=r.value;this.mapInstance.removeLayer(o)}}catch(i){t={error:i}}finally{try{r&&!r.done&&(e=n["return"])&&e.call(n)}finally{if(t)throw t.error}}this.layerIdsToRemove=[]},t.prototype.removeSources=function(){var t,e;try{for(var n=l(this.sourceIdsToRemove),r=n.next();!r.done;r=n.next()){var o=r.value;this.mapInstance.removeSource(o)}}catch(i){t={error:i}}finally{try{r&&!r.done&&(e=n["return"])&&e.call(n)}finally{if(t)throw t.error}}this.sourceIdsToRemove=[]},t.prototype.removeMarkers=function(){var t,e;try{for(var n=l(this.markersToRemove),r=n.next();!r.done;r=n.next()){r.value.remove()}}catch(o){t={error:o}}finally{try{r&&!r.done&&(e=n["return"])&&e.call(n)}finally{if(t)throw t.error}}this.markersToRemove=[]},t.prototype.removePopups=function(){var t,e;try{for(var n=l(this.popupsToRemove),r=n.next();!r.done;r=n.next()){r.value.remove()}}catch(o){t={error:o}}finally{try{r&&!r.done&&(e=n["return"])&&e.call(n)}finally{if(t)throw t.error}}this.popupsToRemove=[]},t.prototype.removeImages=function(){var t,e;try{for(var n=l(this.imageIdsToRemove),r=n.next();!r.done;r=n.next()){var o=r.value;this.mapInstance.removeImage(o)}}catch(i){t={error:i}}finally{try{r&&!r.done&&(e=n["return"])&&e.call(n)}finally{if(t)throw t.error}}this.imageIdsToRemove=[]},t.prototype.hookEvents=function(t){var e=this;this.mapInstance.on("load",function(){e.mapLoaded.next(undefined),e.mapLoaded.complete(),e.zone.run(function(){return t.load.emit(e.mapInstance)})}),t.resize.observers.length&&this.mapInstance.on("resize",function(){return e.zone.run(function(){return t.resize.emit()})}),t.remove.observers.length&&this.mapInstance.on("remove",function(){return e.zone.run(function(){return t.remove.emit()})}),t.mouseDown.observers.length&&this.mapInstance.on("mousedown",function(n){return e.zone.run(function(){return t.mouseDown.emit(n)})}),t.mouseUp.observers.length&&this.mapInstance.on("mouseup",function(n){return e.zone.run(function(){return t.mouseUp.emit(n)})}),t.mouseMove.observers.length&&this.mapInstance.on("mousemove",function(n){return e.zone.run(function(){return t.mouseMove.emit(n)})}),t.click.observers.length&&this.mapInstance.on("click",function(n){return e.zone.run(function(){return t.click.emit(n)})}),t.dblClick.observers.length&&this.mapInstance.on("dblclick",function(n){return e.zone.run(function(){return t.dblClick.emit(n)})}),t.mouseEnter.observers.length&&this.mapInstance.on("mouseenter",function(n){return e.zone.run(function(){return t.mouseEnter.emit(n)})}),t.mouseLeave.observers.length&&this.mapInstance.on("mouseleave",function(n){return e.zone.run(function(){return t.mouseLeave.emit(n)})}),t.mouseOver.observers.length&&this.mapInstance.on("mouseover",function(n){return e.zone.run(function(){return t.mouseOver.emit(n)})}),t.mouseOut.observers.length&&this.mapInstance.on("mouseout",function(n){return e.zone.run(function(){return t.mouseOut.emit(n)})}),t.contextMenu.observers.length&&this.mapInstance.on("contextmenu",function(n){return e.zone.run(function(){return t.contextMenu.emit(n)})}),t.touchStart.observers.length&&this.mapInstance.on("touchstart",function(n){return e.zone.run(function(){return t.touchStart.emit(n)})}),t.touchEnd.observers.length&&this.mapInstance.on("touchend",function(n){return e.zone.run(function(){return t.touchEnd.emit(n)})}),t.touchMove.observers.length&&this.mapInstance.on("touchmove",function(n){return e.zone.run(function(){return t.touchMove.emit(n)})}),t.touchCancel.observers.length&&this.mapInstance.on("touchcancel",function(n){return e.zone.run(function(){return t.touchCancel.emit(n)})}),t.wheel.observers.length&&this.mapInstance.on("wheel",function(n){return e.zone.run(function(){return t.wheel.emit(n)})}),t.moveStart.observers.length&&this.mapInstance.on("movestart",function(n){return e.zone.run(function(){return t.moveStart.emit(n)})}),t.move.observers.length&&this.mapInstance.on("move",function(n){return e.zone.run(function(){return t.move.emit(n)})}),t.moveEnd.observers.length&&this.mapInstance.on("moveend",function(n){return e.zone.run(function(){return t.moveEnd.emit(n)})}),t.dragStart.observers.length&&this.mapInstance.on("dragstart",function(n){return e.zone.run(function(){return t.dragStart.emit(n)})}),t.drag.observers.length&&this.mapInstance.on("drag",function(n){return e.zone.run(function(){return t.drag.emit(n)})}),t.dragEnd.observers.length&&this.mapInstance.on("dragend",function(n){return e.zone.run(function(){return t.dragEnd.emit(n)})}),t.zoomStart.observers.length&&this.mapInstance.on("zoomstart",function(n){return e.zone.run(function(){return t.zoomStart.emit(n)})}),t.zoomEvt.observers.length&&this.mapInstance.on("zoom",function(n){return e.zone.run(function(){return t.zoomEvt.emit(n)})}),t.zoomEnd.observers.length&&this.mapInstance.on("zoomend",function(n){return e.zone.run(function(){return t.zoomEnd.emit(n)})}),t.rotateStart.observers.length&&this.mapInstance.on("rotatestart",function(n){return e.zone.run(function(){return t.rotateStart.emit(n)})}),t.rotate.observers.length&&this.mapInstance.on("rotate",function(n){return e.zone.run(function(){return t.rotate.emit(n)})}),t.rotateEnd.observers.length&&this.mapInstance.on("rotateend",function(n){return e.zone.run(function(){return t.rotateEnd.emit(n)})}),t.pitchStart.observers.length&&this.mapInstance.on("pitchstart",function(n){return e.zone.run(function(){return t.pitchStart.emit(n)})}),t.pitchEvt.observers.length&&this.mapInstance.on("pitch",function(n){return e.zone.run(function(){return t.pitchEvt.emit(n)})}),t.pitchEnd.observers.length&&this.mapInstance.on("pitchend",function(n){return e.zone.run(function(){return t.pitchEnd.emit(n)})}),t.boxZoomStart.observers.length&&this.mapInstance.on("boxzoomstart",function(n){return e.zone.run(function(){return t.boxZoomStart.emit(n)})}),t.boxZoomEnd.observers.length&&this.mapInstance.on("boxzoomend",function(n){return e.zone.run(function(){return t.boxZoomEnd.emit(n)})}),t.boxZoomCancel.observers.length&&this.mapInstance.on("boxzoomcancel",function(n){return e.zone.run(function(){return t.boxZoomCancel.emit(n)})}),t.webGlContextLost.observers.length&&this.mapInstance.on("webglcontextlost",function(){return e.zone.run(function(){return t.webGlContextLost.emit()})}),t.webGlContextRestored.observers.length&&this.mapInstance.on("webglcontextrestored",function(){return e.zone.run(function(){return t.webGlContextRestored.emit()})}),t.render.observers.length&&this.mapInstance.on("render",function(){return e.zone.run(function(){return t.render.emit()})}),t.error.observers.length&&this.mapInstance.on("error",function(n){return e.zone.run(function(){return t.error.emit(n)})}),t.data.observers.length&&this.mapInstance.on("data",function(n){return e.zone.run(function(){return t.data.emit(n)})}),t.styleData.observers.length&&this.mapInstance.on("styledata",function(n){return e.zone.run(function(){return t.styleData.emit(n)})}),t.sourceData.observers.length&&this.mapInstance.on("sourcedata",function(n){return e.zone.run(function(){return t.sourceData.emit(n)})}),t.dataLoading.observers.length&&this.mapInstance.on("dataloading",function(n){return e.zone.run(function(){return t.dataLoading.emit(n)})}),t.styleDataLoading.observers.length&&this.mapInstance.on("styledataloading",function(n){return e.zone.run(function(){return t.styleDataLoading.emit(n)})}),t.sourceDataLoading.observers.length&&this.mapInstance.on("sourcedataloading",function(n){return e.zone.run(function(){return t.sourceDataLoading.emit(n)})}),t.styleImageMissing.observers.length&&this.mapInstance.on("styleimagemissing",function(n){return e.zone.run(function(){return t.styleImageMissing.emit(n)})}),t.idle.observers.length&&this.mapInstance.on("idle",function(){return e.zone.run(function(){return t.idle.emit()})})},t.prototype.assign=function(t,e,n){if("string"==typeof e&&(e=e.split(".")),e.length>1){var r=e.shift();this.assign(t[r]="[object Object]"===Object.prototype.toString.call(t[r])?t[r]:{},e,n)}else t[e[0]]=n},t.decorators=[{type:n.Injectable}],t.ctorParameters=function(){return[{type:n.NgZone},{type:String,decorators:[{type:n.Optional},{type:n.Inject,args:[d]}]},{type:f,decorators:[{type:n.Optional}]}]},t}(),y=function(){function t(t){this.container=t}return t.prototype.onAdd=function(){return this.container},t.prototype.onRemove=function(){return this.container.parentNode.removeChild(this.container)},t.prototype.getDefaultPosition=function(){return"top-right"},t}(),v=function(){function t(t){this.MapService=t}return t.prototype.ngAfterContentInit=function(){var t=this;this.content.nativeElement.childNodes.length&&(this.control=new y(this.content.nativeElement),this.MapService.mapCreated$.subscribe(function(){t.MapService.addControl(t.control,t.position)}))},t.prototype.ngOnDestroy=function(){this.control&&this.MapService.removeControl(this.control)},t.decorators=[{type:n.Component,args:[{selector:"mgl-control",template:'<div class="mapboxgl-ctrl" #content><ng-content></ng-content></div>',changeDetection:n.ChangeDetectionStrategy.OnPush}]}],t.ctorParameters=function(){return[{type:g}]},t.propDecorators={position:[{type:n.Input}],content:[{type:n.ViewChild,args:["content"]}]},t}(),b=function(){function t(t,e){this.MapService=t,this.ControlComponent=e}return t.prototype.ngAfterContentInit=function(){var t=this;this.MapService.mapCreated$.subscribe(function(){if(t.ControlComponent.control)throw new Error("Another control is already set for this control");var e={};t.compact!==undefined&&(e.compact=t.compact),t.customAttribution!==undefined&&(e.customAttribution=t.customAttribution),t.ControlComponent.control=new r.AttributionControl(e),t.MapService.addControl(t.ControlComponent.control,t.ControlComponent.position)})},t.decorators=[{type:n.Directive,args:[{selector:"[mglAttribution]"}]}],t.ctorParameters=function(){return[{type:g},{type:v,decorators:[{type:n.Host}]}]},t.propDecorators={compact:[{type:n.Input}],customAttribution:[{type:n.Input}]},t}(),I=function(){function t(t,e){this.MapService=t,this.ControlComponent=e}return t.prototype.ngAfterContentInit=function(){var t=this;this.MapService.mapCreated$.subscribe(function(){if(t.ControlComponent.control)throw new Error("Another control is already set for this control");var e={};t.container!==undefined&&(e.container=t.container),t.ControlComponent.control=new r.FullscreenControl(e),t.MapService.addControl(t.ControlComponent.control,t.ControlComponent.position)})},t.decorators=[{type:n.Directive,args:[{selector:"[mglFullscreen]"}]}],t.ctorParameters=function(){return[{type:g},{type:v,decorators:[{type:n.Host}]}]},t.propDecorators={container:[{type:n.Input}]},t}(),C=new n.InjectionToken("MapboxApiKey"),S=function(){function t(t,e,r,o){this.MapService=t,this.zone=e,this.ControlComponent=r,this.MAPBOX_GEOCODER_API_KEY=o,this.clear=new n.EventEmitter,this.loading=new n.EventEmitter,this.results=new n.EventEmitter,this.result=new n.EventEmitter,this.error=new n.EventEmitter}return t.prototype.ngAfterContentInit=function(){var t=this;this.MapService.mapCreated$.subscribe(function(){if(t.ControlComponent.control)throw new Error("Another control is already set for this control");var e={proximity:t.proximity,country:t.country,placeholder:t.placeholder,zoom:t.zoom,bbox:t.bbox,types:t.types,flyTo:t.flyTo,minLength:t.minLength,limit:t.limit,language:t.language,filter:t.filter,localGeocoder:t.localGeocoder,accessToken:t.accessToken||t.MAPBOX_GEOCODER_API_KEY};Object.keys(e).forEach(function(t){var n=t;e[n]===undefined&&delete e[n]}),t.geocoder=new u(e),t.hookEvents(t),t.addControl()}),this.searchInput&&this.MapService.mapLoaded$.subscribe(function(){t.geocoder.query(t.searchInput)})},t.prototype.ngOnChanges=function(t){this.geocoder&&(t.proximity&&!t.proximity.isFirstChange()&&this.geocoder.setProximity(t.proximity.currentValue),t.searchInput&&this.geocoder.query(this.searchInput))},t.prototype.addControl=function(){this.ControlComponent.control=this.geocoder,this.MapService.addControl(this.ControlComponent.control,this.ControlComponent.position)},t.prototype.hookEvents=function(t){var e=this;t.results.observers.length&&this.geocoder.on("results",function(n){return e.zone.run(function(){return t.results.emit(n)})}),t.result.observers.length&&this.geocoder.on("result",function(n){e.lastResultId!==n.result.id&&(e.lastResultId=n.result.id,e.zone.run(function(){return t.result.emit(n)}))}),t.error.observers.length&&this.geocoder.on("error",function(n){return e.zone.run(function(){return t.error.emit(n)})}),t.loading.observers.length&&this.geocoder.on("loading",function(n){return e.zone.run(function(){return t.loading.emit(n)})}),t.clear.observers.length&&this.geocoder.on("clear",function(){return e.zone.run(function(){return t.clear.emit()})})},t.decorators=[{type:n.Directive,args:[{selector:"[mglGeocoder]"}]}],t.ctorParameters=function(){return[{type:g},{type:n.NgZone},{type:v,decorators:[{type:n.Host}]},{type:String,decorators:[{type:n.Optional},{type:n.Inject,args:[C]}]}]},t.propDecorators={country:[{type:n.Input}],placeholder:[{type:n.Input}],zoom:[{type:n.Input}],bbox:[{type:n.Input}],types:[{type:n.Input}],flyTo:[{type:n.Input}],minLength:[{type:n.Input}],limit:[{type:n.Input}],language:[{type:n.Input}],accessToken:[{type:n.Input}],filter:[{type:n.Input}],localGeocoder:[{type:n.Input}],proximity:[{type:n.Input}],searchInput:[{type:n.Input}],clear:[{type:n.Output}],loading:[{type:n.Output}],results:[{type:n.Output}],result:[{type:n.Output}],error:[{type:n.Output}]},t}(),E=function(){function t(t,e){this.MapService=t,this.ControlComponent=e}return t.prototype.ngAfterContentInit=function(){var t=this;this.MapService.mapCreated$.subscribe(function(){if(t.ControlComponent.control)throw new Error("Another control is already set for this control");var e={positionOptions:t.positionOptions,fitBoundsOptions:t.fitBoundsOptions,trackUserLocation:t.trackUserLocation,showUserLocation:t.showUserLocation};Object.keys(e).forEach(function(t){var n=t;e[n]===undefined&&delete e[n]}),t.ControlComponent.control=new r.GeolocateControl(e),t.MapService.addControl(t.ControlComponent.control,t.ControlComponent.position)})},t.decorators=[{type:n.Directive,args:[{selector:"[mglGeolocate]"}]}],t.ctorParameters=function(){return[{type:g},{type:v,decorators:[{type:n.Host}]}]},t.propDecorators={positionOptions:[{type:n.Input}],fitBoundsOptions:[{type:n.Input}],trackUserLocation:[{type:n.Input}],showUserLocation:[{type:n.Input}]},t}(),O=function(){function t(t,e){this.MapService=t,this.ControlComponent=e}return t.prototype.ngAfterContentInit=function(){var t=this;this.MapService.mapCreated$.subscribe(function(){if(t.ControlComponent.control)throw new Error("Another control is already set for this control");var e={};t.showCompass!==undefined&&(e.showCompass=t.showCompass),t.showZoom!==undefined&&(e.showZoom=t.showZoom),t.ControlComponent.control=new r.NavigationControl(e),t.MapService.addControl(t.ControlComponent.control,t.ControlComponent.position)})},t.decorators=[{type:n.Directive,args:[{selector:"[mglNavigation]"}]}],t.ctorParameters=function(){return[{type:g},{type:v,decorators:[{type:n.Host}]}]},t.propDecorators={showCompass:[{type:n.Input}],showZoom:[{type:n.Input}]},t}(),M=function(){function t(t,e){this.MapService=t,this.ControlComponent=e}return t.prototype.ngOnChanges=function(t){t.unit&&!t.unit.isFirstChange()&&this.ControlComponent.control.setUnit(t.unit.currentValue)},t.prototype.ngAfterContentInit=function(){var t=this;this.MapService.mapCreated$.subscribe(function(){if(t.ControlComponent.control)throw new Error("Another control is already set for this control");var e={};t.maxWidth!==undefined&&(e.maxWidth=t.maxWidth),t.unit!==undefined&&(e.unit=t.unit),t.ControlComponent.control=new r.ScaleControl(e),t.MapService.addControl(t.ControlComponent.control,t.ControlComponent.position)})},t.decorators=[{type:n.Directive,args:[{selector:"[mglScale]"}]}],t.ctorParameters=function(){return[{type:g},{type:v,decorators:[{type:n.Host}]}]},t.propDecorators={maxWidth:[{type:n.Input}],unit:[{type:n.Input}]},t}(),z=function(){function t(t){this.MapService=t,this.click=new n.EventEmitter,this.mouseEnter=new n.EventEmitter,this.mouseLeave=new n.EventEmitter,this.mouseMove=new n.EventEmitter,this.layerAdded=!1}return t.prototype.ngOnInit=function(){var t=this;this.sub=this.MapService.mapLoaded$.pipe(a.switchMap(function(){return s.fromEvent(t.MapService.mapInstance,"styledata").pipe(a.mapTo(!1),a.filter(function(){return!t.MapService.mapInstance.getLayer(t.id)}),a.startWith(!0))})).subscribe(function(e){return t.init(e)})},t.prototype.ngOnChanges=function(t){this.layerAdded&&(t.paint&&!t.paint.isFirstChange()&&this.MapService.setAllLayerPaintProperty(this.id,t.paint.currentValue),t.layout&&!t.layout.isFirstChange()&&this.MapService.setAllLayerLayoutProperty(this.id,t.layout.currentValue),t.filter&&!t.filter.isFirstChange()&&this.MapService.setLayerFilter(this.id,t.filter.currentValue),t.before&&!t.before.isFirstChange()&&this.MapService.setLayerBefore(this.id,t.before.currentValue),(t.minzoom&&!t.minzoom.isFirstChange()||t.maxzoom&&!t.maxzoom.isFirstChange())&&this.MapService.setLayerZoomRange(this.id,this.minzoom,this.maxzoom))},t.prototype.ngOnDestroy=function(){this.layerAdded&&this.MapService.removeLayer(this.id),this.sub&&this.sub.unsubscribe()},t.prototype.init=function(t){var e={layerOptions:{id:this.id,type:this.type,source:this.source,metadata:this.metadata,"source-layer":this.sourceLayer,minzoom:this.minzoom,maxzoom:this.maxzoom,filter:this.filter,layout:this.layout,paint:this.paint},layerEvents:{click:this.click,mouseEnter:this.mouseEnter,mouseLeave:this.mouseLeave,mouseMove:this.mouseMove}};this.MapService.addLayer(e,t,this.before),this.layerAdded=!0},t.decorators=[{type:n.Component,args:[{selector:"mgl-layer",template:""}]}],t.ctorParameters=function(){return[{type:g}]},t.propDecorators={id:[{type:n.Input}],source:[{type:n.Input}],type:[{type:n.Input}],metadata:[{type:n.Input}],sourceLayer:[{type:n.Input}],filter:[{type:n.Input}],layout:[{type:n.Input}],paint:[{type:n.Input}],before:[{type:n.Input}],minzoom:[{type:n.Input}],maxzoom:[{type:n.Input}],click:[{type:n.Output}],mouseEnter:[{type:n.Output}],mouseLeave:[{type:n.Output}],mouseMove:[{type:n.Output}]},t}(),w=function(){function t(t){this.MapService=t,this.dragStart=new n.EventEmitter,this.drag=new n.EventEmitter,this.dragEnd=new n.EventEmitter}return t.prototype.ngOnInit=function(){if(this.feature&&this.lngLat)throw new Error("feature and lngLat input are mutually exclusive")},t.prototype.ngOnChanges=function(t){t.lngLat&&!t.lngLat.isFirstChange()&&this.markerInstance.setLngLat(this.lngLat),t.feature&&!t.feature.isFirstChange()&&this.markerInstance.setLngLat(this.feature.geometry.coordinates),t.draggable&&!t.draggable.isFirstChange()&&this.markerInstance.setDraggable(!!this.draggable),t.popupShown&&!t.popupShown.isFirstChange()&&(t.popupShown.currentValue?this.markerInstance.getPopup().addTo(this.MapService.mapInstance):this.markerInstance.getPopup().remove())},t.prototype.ngAfterViewInit=function(){var t=this;this.MapService.mapCreated$.subscribe(function(){t.markerInstance=t.MapService.addMarker({markersOptions:{offset:t.offset,anchor:t.anchor,draggable:!!t.draggable,element:t.content.nativeElement,feature:t.feature,lngLat:t.lngLat},markersEvents:{dragStart:t.dragStart,drag:t.drag,dragEnd:t.dragEnd}})})},t.prototype.ngOnDestroy=function(){this.MapService.removeMarker(this.markerInstance),this.markerInstance=undefined},t.prototype.togglePopup=function(){this.markerInstance.togglePopup()},t.prototype.updateCoordinates=function(t){this.markerInstance.setLngLat(t)},t.decorators=[{type:n.Component,args:[{selector:"mgl-marker",template:'<div [class]="className" #content><ng-content></ng-content></div>',encapsulation:n.ViewEncapsulation.None,changeDetection:n.ChangeDetectionStrategy.OnPush,styles:["\n    .mapboxgl-marker {\n      line-height: 0;\n    }\n  "]}]}],t.ctorParameters=function(){return[{type:g}]},t.propDecorators={offset:[{type:n.Input}],anchor:[{type:n.Input}],feature:[{type:n.Input}],lngLat:[{type:n.Input}],draggable:[{type:n.Input}],popupShown:[{type:n.Input}],className:[{type:n.Input}],dragStart:[{type:n.Output}],drag:[{type:n.Output}],dragEnd:[{type:n.Output}],content:[{type:n.ViewChild,args:["content"]}]},t}(),x=function(){function t(t,e){this.MapService=t,this.zone=e,this.updateFeatureData=new s.Subject,this.sub=new s.Subscription,this.sourceAdded=!1,this.featureIdCounter=0}return t.prototype.ngOnInit=function(){var t=this;this.data||(this.data={type:"FeatureCollection",features:[]}),this.MapService.mapLoaded$.subscribe(function(){t.init();var e=s.fromEvent(t.MapService.mapInstance,"styledata").pipe(a.filter(function(){return!t.MapService.mapInstance.getSource(t.id)})).subscribe(function(){t.init()});t.sub.add(e)})},t.prototype.ngOnChanges=function(t){this.sourceAdded&&((t.maxzoom&&!t.maxzoom.isFirstChange()||t.minzoom&&!t.minzoom.isFirstChange()||t.buffer&&!t.buffer.isFirstChange()||t.tolerance&&!t.tolerance.isFirstChange()||t.cluster&&!t.cluster.isFirstChange()||t.clusterRadius&&!t.clusterRadius.isFirstChange()||t.clusterMaxZoom&&!t.clusterMaxZoom.isFirstChange()||t.clusterProperties&&!t.clusterProperties.isFirstChange())&&(this.ngOnDestroy(),this.ngOnInit()),t.data&&!t.data.isFirstChange()&&this.MapService.getSource(this.id).setData(this.data))},t.prototype.ngOnDestroy=function(){this.sub.unsubscribe(),this.sourceAdded&&this.MapService.removeSource(this.id)},t.prototype.getClusterExpansionZoom=function(t){return h(this,void 0,void 0,function(){var e,n=this;return m(this,function(r){return e=this.MapService.getSource(this.id),[2,this.zone.run(function(){return h(n,void 0,void 0,function(){return m(this,function(n){return[2,new Promise(function(n,r){e.getClusterExpansionZoom(t,function(t,e){t?r(t):n(e)})})]})})})]})})},t.prototype.getClusterChildren=function(t){return h(this,void 0,void 0,function(){var e,n=this;return m(this,function(r){return e=this.MapService.getSource(this.id),[2,this.zone.run(function(){return h(n,void 0,void 0,function(){return m(this,function(n){return[2,new Promise(function(n,r){e.getClusterChildren(t,function(t,e){t?r(t):n(e)})})]})})})]})})},t.prototype.getClusterLeaves=function(t,e,n){return h(this,void 0,void 0,function(){var r,o=this;return m(this,function(i){return r=this.MapService.getSource(this.id),[2,this.zone.run(function(){return h(o,void 0,void 0,function(){return m(this,function(o){return[2,new Promise(function(o,i){r.getClusterLeaves(t,e,n,function(t,e){t?i(t):o(e)})})]})})})]})})},t.prototype._addFeature=function(t){this.data.features.push(t),this.updateFeatureData.next()},t.prototype._removeFeature=function(t){var e=this.data,n=e.features.indexOf(t);n>-1&&e.features.splice(n,1),this.updateFeatureData.next()},t.prototype._getNewFeatureId=function(){return++this.featureIdCounter},t.prototype.init=function(){var t=this;this.MapService.addSource(this.id,{type:"geojson",data:this.data,maxzoom:this.maxzoom,minzoom:this.minzoom,buffer:this.buffer,tolerance:this.tolerance,cluster:this.cluster,clusterRadius:this.clusterRadius,clusterMaxZoom:this.clusterMaxZoom,clusterProperties:this.clusterProperties});var e=this.updateFeatureData.pipe(a.debounceTime(0)).subscribe(function(){t.MapService.getSource(t.id).setData(t.data)});this.sub.add(e),this.sourceAdded=!0},t.decorators=[{type:n.Component,args:[{selector:"mgl-geojson-source",template:"",changeDetection:n.ChangeDetectionStrategy.OnPush}]}],t.ctorParameters=function(){return[{type:g},{type:n.NgZone}]},t.propDecorators={id:[{type:n.Input}],data:[{type:n.Input}],minzoom:[{type:n.Input}],maxzoom:[{type:n.Input}],buffer:[{type:n.Input}],tolerance:[{type:n.Input}],cluster:[{type:n.Input}],clusterRadius:[{type:n.Input}],clusterMaxZoom:[{type:n.Input}],clusterProperties:[{type:n.Input}]},t}(),k=function(){function t(t){this.GeoJSONSourceComponent=t,this.type="Feature"}return t.prototype.ngOnInit=function(){this.id||(this.id=this.GeoJSONSourceComponent._getNewFeatureId()),this.feature={type:this.type,geometry:this.geometry,properties:this.properties?this.properties:{}},this.feature.id=this.id,this.GeoJSONSourceComponent._addFeature(this.feature)},t.prototype.ngOnDestroy=function(){this.GeoJSONSourceComponent._removeFeature(this.feature)},t.prototype.updateCoordinates=function(t){this.feature.geometry.coordinates=t,this.GeoJSONSourceComponent.updateFeatureData.next()},t.decorators=[{type:n.Component,args:[{selector:"mgl-feature",template:"",changeDetection:n.ChangeDetectionStrategy.OnPush}]}],t.ctorParameters=function(){return[{type:x,decorators:[{type:n.Inject,args:[n.forwardRef(function(){return x})]}]}]},t.propDecorators={id:[{type:n.Input}],geometry:[{type:n.Input}],properties:[{type:n.Input}]},t}(),P=function(){function t(t,e,r,o){this.MapService=t,this.NgZone=e,this.FeatureComponent=r,this.MarkerComponent=o,this.dragStart=new n.EventEmitter,this.dragEnd=new n.EventEmitter,this.drag=new n.EventEmitter,this.destroyed$=new s.ReplaySubject(1)}return t.prototype.ngOnInit=function(){var t,e,n;if(this.MarkerComponent){console.warn("[ngx-mapbox-gl] mglDraggable on Marker is deprecated, use draggable input instead");var r=this.MarkerComponent.content.nativeElement;1===r.children.length&&(r=r.children[0]),t=s.fromEvent(r,"mouseenter"),e=s.fromEvent(r,"mouseleave"),n=this.MarkerComponent.updateCoordinates.bind(this.MarkerComponent)}else{if(!this.FeatureComponent||!this.layer)throw new Error("mglDraggable can only be used on Feature (with a layer as input) or Marker");if(t=this.layer.mouseEnter,e=this.layer.mouseLeave,n=this.FeatureComponent.updateCoordinates.bind(this.FeatureComponent),"Point"!==this.FeatureComponent.geometry.type)throw new Error("mglDraggable only support point feature")}this.handleDraggable(t,e,n)},t.prototype.ngOnDestroy=function(){this.destroyed$.next(undefined),this.destroyed$.complete()},t.prototype.handleDraggable=function(t,e,n){var r=this,o=!1,i=!1;this.MapService.mapCreated$.subscribe(function(){var u=s.fromEvent(r.MapService.mapInstance,"mouseup"),p=t.pipe(a.takeUntil(r.destroyed$),a.filter(function(){return!o}),a.filter(function(t){return r.filterFeature(t)}),a.tap(function(){i=!0,r.MapService.changeCanvasCursor("move"),r.MapService.updateDragPan(!1)}),a.switchMap(function(){return s.fromEvent(r.MapService.mapInstance,"mousedown").pipe(a.takeUntil(e))})),c=p.pipe(a.switchMap(function(){return s.fromEvent(r.MapService.mapInstance,"mousemove").pipe(a.takeUntil(u))})),h=p.pipe(a.switchMap(function(){return u.pipe(a.take(1))}));p.subscribe(function(t){o=!0,r.dragStart.observers.length&&r.NgZone.run(function(){return r.dragStart.emit(t)})}),c.subscribe(function(t){n([t.lngLat.lng,t.lngLat.lat]),r.drag.observers.length&&r.NgZone.run(function(){return r.drag.emit(t)})}),h.subscribe(function(t){o=!1,r.dragEnd.observers.length&&r.NgZone.run(function(){return r.dragEnd.emit(t)}),i||(r.MapService.changeCanvasCursor(""),r.MapService.updateDragPan(!0))}),e.pipe(a.takeUntil(r.destroyed$),a.tap(function(){return i=!1}),a.filter(function(){return!o})).subscribe(function(){r.MapService.changeCanvasCursor(""),r.MapService.updateDragPan(!0)})})},t.prototype.filterFeature=function(t){if(this.FeatureComponent&&this.layer&&!this.MapService.queryRenderedFeatures(t.point,{layers:[this.layer.id],filter:["all",["==","$type","Point"],["==","$id",this.FeatureComponent.id]]})[0])return!1;return!0},t.decorators=[{type:n.Directive,args:[{selector:"[mglDraggable]"}]}],t.ctorParameters=function(){return[{type:g},{type:n.NgZone},{type:k,decorators:[{type:n.Optional},{type:n.Host}]},{type:w,decorators:[{type:n.Optional},{type:n.Host}]}]},t.propDecorators={layer:[{type:n.Input,args:["mglDraggable"]}],dragStart:[{type:n.Output}],dragEnd:[{type:n.Output}],drag:[{type:n.Output}]},t}(),D=function(){function t(t,e){this.MapService=t,this.zone=e,this.error=new n.EventEmitter,this.loaded=new n.EventEmitter,this.isAdded=!1,this.isAdding=!1}return t.prototype.ngOnInit=function(){var t=this;this.sub=this.MapService.mapLoaded$.pipe(a.switchMap(function(){return s.fromEvent(t.MapService.mapInstance,"styledata").pipe(a.startWith(undefined),a.filter(function(){return!t.isAdding&&!t.MapService.mapInstance.hasImage(t.id)}))})).subscribe(function(){return t.init()})},t.prototype.ngOnChanges=function(t){(t.data&&!t.data.isFirstChange()||t.options&&!t.options.isFirstChange()||t.url&&!t.url.isFirstChange())&&(this.ngOnDestroy(),this.ngOnInit())},t.prototype.ngOnDestroy=function(){this.isAdded&&this.MapService.removeImage(this.id),this.sub&&this.sub.unsubscribe()},t.prototype.init=function(){return h(this,void 0,void 0,function(){var t,e=this;return m(this,function(n){switch(n.label){case 0:return this.isAdding=!0,this.data?(this.MapService.addImage(this.id,this.data,this.options),this.isAdded=!0,this.isAdding=!1,[3,5]):[3,1];case 1:if(!this.url)return[3,5];n.label=2;case 2:return n.trys.push([2,4,,5]),[4,this.MapService.loadAndAddImage(this.id,this.url,this.options)];case 3:return n.sent(),this.isAdded=!0,this.isAdding=!1,this.zone.run(function(){e.loaded.emit()}),[3,5];case 4:return t=n.sent(),this.zone.run(function(){e.error.emit(t)}),[3,5];case 5:return[2]}})})},t.decorators=[{type:n.Component,args:[{selector:"mgl-image",template:""}]}],t.ctorParameters=function(){return[{type:g},{type:n.NgZone}]},t.propDecorators={id:[{type:n.Input}],data:[{type:n.Input}],options:[{type:n.Input}],url:[{type:n.Input}],error:[{type:n.Output}],loaded:[{type:n.Output}]},t}(),A=function(){function t(t){this.MapService=t,this.movingMethod="flyTo",this.resize=new n.EventEmitter,this.remove=new n.EventEmitter,this.mouseDown=new n.EventEmitter,this.mouseUp=new n.EventEmitter,this.mouseMove=new n.EventEmitter,this.click=new n.EventEmitter,this.dblClick=new n.EventEmitter,this.mouseEnter=new n.EventEmitter,this.mouseLeave=new n.EventEmitter,this.mouseOver=new n.EventEmitter,this.mouseOut=new n.EventEmitter,this.contextMenu=new n.EventEmitter,this.touchStart=new n.EventEmitter,this.touchEnd=new n.EventEmitter,this.touchMove=new n.EventEmitter,this.touchCancel=new n.EventEmitter,this.wheel=new n.EventEmitter,this.moveStart=new n.EventEmitter,this.move=new n.EventEmitter,this.moveEnd=new n.EventEmitter,this.dragStart=new n.EventEmitter,this.drag=new n.EventEmitter,this.dragEnd=new n.EventEmitter,this.zoomStart=new n.EventEmitter,this.zoomEvt=new n.EventEmitter,this.zoomEnd=new n.EventEmitter,this.rotateStart=new n.EventEmitter,this.rotate=new n.EventEmitter,this.rotateEnd=new n.EventEmitter,this.pitchStart=new n.EventEmitter,this.pitchEvt=new n.EventEmitter,this.pitchEnd=new n.EventEmitter,this.boxZoomStart=new n.EventEmitter,this.boxZoomEnd=new n.EventEmitter,this.boxZoomCancel=new n.EventEmitter,this.webGlContextLost=new n.EventEmitter,this.webGlContextRestored=new n.EventEmitter,this.load=new n.EventEmitter,this.idle=new n.EventEmitter,this.render=new n.EventEmitter,this.error=new n.EventEmitter,this.data=new n.EventEmitter,this.styleData=new n.EventEmitter,this.sourceData=new n.EventEmitter,this.dataLoading=new n.EventEmitter,this.styleDataLoading=new n.EventEmitter,this.sourceDataLoading=new n.EventEmitter,this.styleImageMissing=new n.EventEmitter}return Object.defineProperty(t.prototype,"mapInstance",{get:function(){return this.MapService.mapInstance},enumerable:!0,configurable:!0}),t.prototype.ngAfterViewInit=function(){this.MapService.setup({accessToken:this.accessToken,customMapboxApiUrl:this.customMapboxApiUrl,mapOptions:{container:this.mapContainer.nativeElement,minZoom:this.minZoom,maxZoom:this.maxZoom,style:this.style,hash:this.hash,interactive:this.interactive,bearingSnap:this.bearingSnap,pitchWithRotate:this.pitchWithRotate,classes:this.classes,attributionControl:this.attributionControl,logoPosition:this.logoPosition,failIfMajorPerformanceCaveat:this.failIfMajorPerformanceCaveat,preserveDrawingBuffer:this.preserveDrawingBuffer,refreshExpiredTiles:this.refreshExpiredTiles,maxBounds:this.maxBounds,scrollZoom:this.scrollZoom,boxZoom:this.boxZoom,dragRotate:this.dragRotate,dragPan:this.dragPan,keyboard:this.keyboard,doubleClickZoom:this.doubleClickZoom,touchZoomRotate:this.touchZoomRotate,trackResize:this.trackResize,center:this.center,zoom:this.zoom,bearing:this.bearing,pitch:this.pitch,renderWorldCopies:this.renderWorldCopies,maxTileCacheSize:this.maxTileCacheSize,localIdeographFontFamily:this.localIdeographFontFamily,transformRequest:this.transformRequest,bounds:this.bounds?this.bounds:this.fitBounds,fitBoundsOptions:this.fitBoundsOptions,antialias:this.antialias},mapEvents:this}),this.cursorStyle&&this.MapService.changeCanvasCursor(this.cursorStyle)},t.prototype.ngOnDestroy=function(){this.MapService.destroyMap()},t.prototype.ngOnChanges=function(t){return h(this,void 0,void 0,function(){return m(this,function(e){switch(e.label){case 0:return[4,this.MapService.mapCreated$.toPromise()];case 1:return e.sent(),t.cursorStyle&&!t.cursorStyle.isFirstChange()&&this.MapService.changeCanvasCursor(t.cursorStyle.currentValue),t.minZoom&&!t.minZoom.isFirstChange()&&this.MapService.updateMinZoom(t.minZoom.currentValue),t.maxZoom&&!t.maxZoom.isFirstChange()&&this.MapService.updateMaxZoom(t.maxZoom.currentValue),t.scrollZoom&&!t.scrollZoom.isFirstChange()&&this.MapService.updateScrollZoom(t.scrollZoom.currentValue),t.dragRotate&&!t.dragRotate.isFirstChange()&&this.MapService.updateDragRotate(t.dragRotate.currentValue),t.touchZoomRotate&&!t.touchZoomRotate.isFirstChange()&&this.MapService.updateTouchZoomRotate(t.touchZoomRotate.currentValue),t.doubleClickZoom&&!t.doubleClickZoom.isFirstChange()&&this.MapService.updateDoubleClickZoom(t.doubleClickZoom.currentValue),t.keyboard&&!t.keyboard.isFirstChange()&&this.MapService.updateKeyboard(t.keyboard.currentValue),t.dragPan&&!t.dragPan.isFirstChange()&&this.MapService.updateDragPan(t.dragPan.currentValue),t.boxZoom&&!t.boxZoom.isFirstChange()&&this.MapService.updateBoxZoom(t.boxZoom.currentValue),t.style&&!t.style.isFirstChange()&&this.MapService.updateStyle(t.style.currentValue),t.maxBounds&&!t.maxBounds.isFirstChange()&&this.MapService.updateMaxBounds(t.maxBounds.currentValue),t.fitBounds&&t.fitBounds.currentValue&&!t.fitBounds.isFirstChange()&&this.MapService.fitBounds(t.fitBounds.currentValue,this.fitBoundsOptions),t.fitScreenCoordinates&&t.fitScreenCoordinates.currentValue&&((this.center||this.zoom||this.pitch||this.fitBounds)&&t.fitScreenCoordinates.isFirstChange()&&console.warn("[ngx-mapbox-gl] center / zoom / pitch / fitBounds inputs are being overridden by fitScreenCoordinates input"),this.MapService.fitScreenCoordinates(t.fitScreenCoordinates.currentValue,this.bearing?this.bearing[0]:0,this.movingOptions)),!this.centerWithPanTo||!t.center||t.center.isFirstChange()||t.zoom||t.bearing||t.pitch?(t.center&&!t.center.isFirstChange()||t.zoom&&!t.zoom.isFirstChange()||t.bearing&&!t.bearing.isFirstChange()&&!t.fitScreenCoordinates||t.pitch&&!t.pitch.isFirstChange())&&this.MapService.move(this.movingMethod,this.movingOptions,t.zoom&&this.zoom?this.zoom[0]:undefined,t.center?this.center:undefined,t.bearing&&this.bearing?this.bearing[0]:undefined,t.pitch&&this.pitch?this.pitch[0]:undefined):this.MapService.panTo(this.center,this.panToOptions),[2]}})})},t.decorators=[{type:n.Component,args:[{selector:"mgl-map",template:"<div #container></div>",providers:[g],changeDetection:n.ChangeDetectionStrategy.OnPush,styles:["\n  :host {\n    display: block;\n  }\n  div {\n    height: 100%;\n    width: 100%;\n  }\n  "]}]}],t.ctorParameters=function(){return[{type:g}]},t.propDecorators={accessToken:[{type:n.Input}],customMapboxApiUrl:[{type:n.Input}],hash:[{type:n.Input}],refreshExpiredTiles:[{type:n.Input}],failIfMajorPerformanceCaveat:[{type:n.Input}],classes:[{type:n.Input}],bearingSnap:[{type:n.Input}],interactive:[{type:n.Input}],pitchWithRotate:[{type:n.Input}],attributionControl:[{type:n.Input}],logoPosition:[{type:n.Input}],maxTileCacheSize:[{type:n.Input}],localIdeographFontFamily:[{type:n.Input}],preserveDrawingBuffer:[{type:n.Input}],renderWorldCopies:[{type:n.Input}],trackResize:[{type:n.Input}],transformRequest:[{type:n.Input}],bounds:[{type:n.Input}],antialias:[{type:n.Input}],minZoom:[{type:n.Input}],maxZoom:[{type:n.Input}],scrollZoom:[{type:n.Input}],dragRotate:[{type:n.Input}],touchZoomRotate:[{type:n.Input}],doubleClickZoom:[{type:n.Input}],keyboard:[{type:n.Input}],dragPan:[{type:n.Input}],boxZoom:[{type:n.Input}],style:[{type:n.Input}],center:[{type:n.Input}],maxBounds:[{type:n.Input}],zoom:[{type:n.Input}],bearing:[{type:n.Input}],pitch:[{type:n.Input}],fitBoundsOptions:[{type:n.Input}],movingMethod:[{type:n.Input}],movingOptions:[{type:n.Input}],fitBounds:[{type:n.Input}],fitScreenCoordinates:[{type:n.Input}],centerWithPanTo:[{type:n.Input}],panToOptions:[{type:n.Input}],cursorStyle:[{type:n.Input}],resize:[{type:n.Output}],remove:[{type:n.Output}],mouseDown:[{type:n.Output}],mouseUp:[{type:n.Output}],mouseMove:[{type:n.Output}],click:[{type:n.Output}],dblClick:[{type:n.Output}],mouseEnter:[{type:n.Output}],mouseLeave:[{type:n.Output}],mouseOver:[{type:n.Output}],mouseOut:[{type:n.Output}],contextMenu:[{type:n.Output}],touchStart:[{type:n.Output}],touchEnd:[{type:n.Output}],touchMove:[{type:n.Output}],touchCancel:[{type:n.Output}],wheel:[{type:n.Output}],moveStart:[{type:n.Output}],move:[{type:n.Output}],moveEnd:[{type:n.Output}],dragStart:[{type:n.Output}],drag:[{type:n.Output}],dragEnd:[{type:n.Output}],zoomStart:[{type:n.Output}],zoomEvt:[{type:n.Output}],zoomEnd:[{type:n.Output}],rotateStart:[{type:n.Output}],rotate:[{type:n.Output}],rotateEnd:[{type:n.Output}],pitchStart:[{type:n.Output}],pitchEvt:[{type:n.Output}],pitchEnd:[{type:n.Output}],boxZoomStart:[{type:n.Output}],boxZoomEnd:[{type:n.Output}],boxZoomCancel:[{type:n.Output}],webGlContextLost:[{type:n.Output}],webGlContextRestored:[{type:n.Output}],load:[{type:n.Output}],idle:[{type:n.Output}],render:[{type:n.Output}],error:[{type:n.Output}],data:[{type:n.Output}],styleData:[{type:n.Output}],sourceData:[{type:n.Output}],dataLoading:[{type:n.Output}],styleDataLoading:[{type:n.Output}],sourceDataLoading:[{type:n.Output}],styleImageMissing:[{type:n.Output}],mapContainer:[{type:n.ViewChild,args:["container"]}]},t}(),F=function(){function t(){}return t.decorators=[{type:n.Directive,args:[{selector:"ng-template[mglPoint]"}]}],t}(),L=function(){function t(){}return t.decorators=[{type:n.Directive,args:[{selector:"ng-template[mglClusterPoint]"}]}],t}(),Z=0,R=function(){function t(t,e,n){this.MapService=t,this.ChangeDetectorRef=e,this.zone=n,this.layerId="mgl-markers-for-clusters-"+Z++,this.sub=new s.Subscription}return t.prototype.ngAfterContentInit=function(){var t=this,e=this.MapService.mapCreated$.pipe(a.switchMap(function(){return s.fromEvent(t.MapService.mapInstance,"data").pipe(a.filter(function(e){return e.sourceId===t.source&&e.isSourceLoaded&&"metadata"!==e.sourceDataType}),a.take(1))}),a.switchMap(function(){return s.merge(s.fromEvent(t.MapService.mapInstance,"move"),s.fromEvent(t.MapService.mapInstance,"moveend")).pipe(a.startWith(undefined))})).subscribe(function(){t.zone.run(function(){t.updateCluster()})});this.sub.add(e)},t.prototype.ngOnDestroy=function(){this.sub.unsubscribe()},t.prototype.trackByClusterPoint=function(t,e){return e.id},t.prototype.updateCluster=function(){var t={layers:[this.layerId]};this.pointTpl||(t.filter=["==","cluster",!0]),this.clusterPoints=this.MapService.mapInstance.queryRenderedFeatures(t),this.ChangeDetectorRef.markForCheck()},t.decorators=[{type:n.Component,args:[{selector:"mgl-markers-for-clusters",template:'\n    <mgl-layer\n      [id]="layerId"\n      [source]="source"\n      type="circle"\n      [paint]="{\'circle-radius\': 0}"\n    ></mgl-layer>\n    <ng-container *ngFor="let feature of clusterPoints; trackBy: trackByClusterPoint">\n      <ng-container *ngIf="feature.properties.cluster">\n        <mgl-marker\n          [feature]="feature"\n        >\n          <ng-container *ngTemplateOutlet="clusterPointTpl; context: { $implicit: feature }"></ng-container>\n        </mgl-marker>\n      </ng-container>\n      <ng-container *ngIf="!feature.properties.cluster">\n        <mgl-marker\n          [feature]="feature"\n        >\n          <ng-container *ngTemplateOutlet="pointTpl; context: { $implicit: feature }"></ng-container>\n        </mgl-marker>\n      </ng-container>\n    </ng-container>\n  ',changeDetection:n.ChangeDetectionStrategy.OnPush,preserveWhitespaces:!1}]}],t.ctorParameters=function(){return[{type:g},{type:n.ChangeDetectorRef},{type:n.NgZone}]},t.propDecorators={source:[{type:n.Input}],pointTpl:[{type:n.ContentChild,args:[F,{read:n.TemplateRef}]}],clusterPointTpl:[{type:n.ContentChild,args:[L,{read:n.TemplateRef}]}]},t}(),T=function(){function t(t,e,r){var o=this;this.MapService=t,this.ChangeDetectorRef=e,this.zone=r,this.load=new n.EventEmitter,this.sub=new s.Subscription,this.getLeavesFn=function(t){return function(e,n){return o.supercluster.getLeaves(t.properties.cluster_id,e,n)}},this.getChildrenFn=function(t){return function(){return o.supercluster.getChildren(t.properties.cluster_id)}},this.getClusterExpansionZoomFn=function(t){return function(){return o.supercluster.getClusterExpansionZoom(t.properties.cluster_id)}}}return t.prototype.ngOnInit=function(){console.warn("[ngx-mapbox-gl] mgl-marker-cluster is deprecated, use mgl-markers-for-clusters instead");var t={radius:this.radius,maxZoom:this.maxZoom,minZoom:this.minZoom,extent:this.extent,nodeSize:this.nodeSize,log:this.log,reduce:this.reduce,map:this.map};Object.keys(t).forEach(function(e){var n=e;t[n]===undefined&&delete t[n]}),this.supercluster=new p(t),this.supercluster.load(this.data.features),this.load.emit(this.supercluster)},t.prototype.ngOnChanges=function(t){t.data&&!t.data.isFirstChange()&&(this.supercluster.load(this.data.features),this.updateCluster())},t.prototype.ngAfterContentInit=function(){var t=this;this.MapService.mapCreated$.subscribe(function(){var e=s.merge(s.fromEvent(t.MapService.mapInstance,"zoomChange"),s.fromEvent(t.MapService.mapInstance,"move")).pipe(a.startWith(undefined)).subscribe(function(){t.zone.run(function(){t.updateCluster()})});t.sub.add(e)})},t.prototype.ngOnDestroy=function(){this.sub.unsubscribe()},t.prototype.updateCluster=function(){var t=this.MapService.getCurrentViewportBbox(),e=Math.round(this.MapService.mapInstance.getZoom());this.clusterPoints=this.supercluster.getClusters(t,e),this.ChangeDetectorRef.markForCheck()},t.decorators=[{type:n.Component,args:[{selector:"mgl-marker-cluster",template:'\n    <ng-container *ngFor="let feature of clusterPoints">\n      <ng-container *ngIf="feature.properties.cluster; else point">\n        <mgl-marker\n          [feature]="feature"\n        >\n          <ng-container *ngTemplateOutlet="clusterPointTpl; context: {\n            $implicit: feature,\n            getLeavesFn: getLeavesFn(feature),\n            getChildrenFn: getChildrenFn(feature),\n            getClusterExpansionZoomFn: getClusterExpansionZoomFn(feature)\n          }"></ng-container>\n        </mgl-marker>\n      </ng-container>\n      <ng-template #point>\n        <mgl-marker\n          [feature]="feature"\n        >\n          <ng-container *ngTemplateOutlet="pointTpl; context: { $implicit: feature }"></ng-container>\n        </mgl-marker>\n      </ng-template>\n    </ng-container>\n  ',changeDetection:n.ChangeDetectionStrategy.OnPush,preserveWhitespaces:!1}]}],t.ctorParameters=function(){return[{type:g},{type:n.ChangeDetectorRef},{type:n.NgZone}]},t.propDecorators={radius:[{type:n.Input}],maxZoom:[{type:n.Input}],minZoom:[{type:n.Input}],extent:[{type:n.Input}],nodeSize:[{type:n.Input}],log:[{type:n.Input}],reduce:[{type:n.Input}],map:[{type:n.Input}],data:[{type:n.Input}],load:[{type:n.Output}],pointTpl:[{type:n.ContentChild,args:[F,{read:n.TemplateRef}]}],clusterPointTpl:[{type:n.ContentChild,args:[L,{read:n.TemplateRef}]}]},t}(),B=function(){function t(t){this.MapService=t,this.close=new n.EventEmitter,this.open=new n.EventEmitter}return t.prototype.ngOnInit=function(){if(this.lngLat&&this.marker||this.feature&&this.lngLat||this.feature&&this.marker)throw new Error("marker, lngLat, feature input are mutually exclusive")},t.prototype.ngOnChanges=function(t){if(t.lngLat&&!t.lngLat.isFirstChange()||t.feature&&!t.feature.isFirstChange()){var e=t.lngLat?this.lngLat:this.feature.geometry.coordinates;this.MapService.removePopupFromMap(this.popupInstance,!0);var n=this.createPopup();this.MapService.addPopupToMap(n,e,this.popupInstance.isOpen()),this.popupInstance=n}if(t.marker&&!t.marker.isFirstChange()){var r=t.marker.previousValue;r.markerInstance&&this.MapService.removePopupFromMarker(r.markerInstance),this.marker&&this.marker.markerInstance&&this.popupInstance&&this.MapService.addPopupToMarker(this.marker.markerInstance,this.popupInstance)}},t.prototype.ngAfterViewInit=function(){this.popupInstance=this.createPopup(),this.addPopup(this.popupInstance)},t.prototype.ngOnDestroy=function(){this.popupInstance&&(this.lngLat?this.MapService.removePopupFromMap(this.popupInstance):this.marker&&this.marker.markerInstance&&this.MapService.removePopupFromMarker(this.marker.markerInstance)),this.popupInstance=undefined},t.prototype.createPopup=function(){return this.MapService.createPopup({popupOptions:{closeButton:this.closeButton,closeOnClick:this.closeOnClick,anchor:this.anchor,offset:this.offset},popupEvents:{open:this.open,close:this.close}},this.content.nativeElement)},t.prototype.addPopup=function(t){var e=this;this.MapService.mapCreated$.subscribe(function(){if(e.lngLat||e.feature)e.MapService.addPopupToMap(t,e.lngLat?e.lngLat:e.feature.geometry.coordinates);else{if(!e.marker||!e.marker.markerInstance)throw new Error("mgl-popup need either lngLat/marker/feature to be set");e.MapService.addPopupToMarker(e.marker.markerInstance,t)}})},t.decorators=[{type:n.Component,args:[{selector:"mgl-popup",template:"<div #content><ng-content></ng-content></div>",changeDetection:n.ChangeDetectionStrategy.OnPush}]}],t.ctorParameters=function(){return[{type:g}]},t.propDecorators={closeButton:[{type:n.Input}],closeOnClick:[{type:n.Input}],anchor:[{type:n.Input}],offset:[{type:n.Input}],feature:[{type:n.Input}],lngLat:[{type:n.Input}],marker:[{type:n.Input}],close:[{type:n.Output}],open:[{type:n.Output}],content:[{type:n.ViewChild,args:["content"]}]},t}(),j=function(){function t(t){this.MapService=t,this.sourceAdded=!1,this.sub=new s.Subscription}return t.prototype.ngOnInit=function(){var t=this;this.MapService.mapLoaded$.subscribe(function(){t.init();var e=s.fromEvent(t.MapService.mapInstance,"styledata").pipe(a.filter(function(){return!t.MapService.mapInstance.getSource(t.id)})).subscribe(function(){t.init()});t.sub.add(e)})},t.prototype.ngOnChanges=function(t){this.sourceAdded&&(t.coordinates&&!t.coordinates.isFirstChange()||t.canvas&&!t.canvas.isFirstChange()||t.animate&&!t.animate.isFirstChange())&&(this.ngOnDestroy(),this.ngOnInit())},t.prototype.ngOnDestroy=function(){this.sub.unsubscribe(),this.sourceAdded&&this.MapService.removeSource(this.id)},t.prototype.init=function(){var t={type:"canvas",coordinates:this.coordinates,canvas:this.canvas,animate:this.animate};this.MapService.addSource(this.id,t),this.sourceAdded=!0},t.decorators=[{type:n.Component,args:[{selector:"mgl-canvas-source",template:"",changeDetection:n.ChangeDetectionStrategy.OnPush}]}],t.ctorParameters=function(){return[{type:g}]},t.propDecorators={id:[{type:n.Input}],coordinates:[{type:n.Input}],canvas:[{type:n.Input}],animate:[{type:n.Input}]},t}(),V=function(){function t(t){this.MapService=t}return t.prototype.ngOnInit=function(){var t=this;this.sub=this.MapService.mapLoaded$.subscribe(function(){return t.init()})},t.prototype.ngOnChanges=function(t){this.sourceId!==undefined&&this.MapService.getSource(this.sourceId).updateImage({url:t.url===undefined?undefined:this.url,coordinates:t.coordinates===undefined?undefined:this.coordinates})},t.prototype.ngOnDestroy=function(){this.sub!==undefined&&this.sub.unsubscribe(),this.sourceId!==undefined&&this.MapService.removeSource(this.sourceId)},t.prototype.init=function(){this.MapService.addSource(this.id,{type:"image",url:this.url,coordinates:this.coordinates}),this.sourceId=this.id},t.decorators=[{type:n.Component,args:[{selector:"mgl-image-source",template:"",changeDetection:n.ChangeDetectionStrategy.OnPush}]}],t.ctorParameters=function(){return[{type:g}]},t.propDecorators={id:[{type:n.Input}],url:[{type:n.Input}],coordinates:[{type:n.Input}]},t}(),$=function(){function t(t){this.MapService=t,this.type="raster",this.sourceAdded=!1,this.sub=new s.Subscription}return t.prototype.ngOnInit=function(){var t=this;this.MapService.mapLoaded$.subscribe(function(){t.init();var e=s.fromEvent(t.MapService.mapInstance,"styledata").pipe(a.filter(function(){return!t.MapService.mapInstance.getSource(t.id)})).subscribe(function(){t.init()});t.sub.add(e)})},t.prototype.ngOnChanges=function(t){this.sourceAdded&&(t.url&&!t.url.isFirstChange()||t.tiles&&!t.tiles.isFirstChange()||t.bounds&&!t.bounds.isFirstChange()||t.minzoom&&!t.minzoom.isFirstChange()||t.maxzoom&&!t.maxzoom.isFirstChange()||t.tileSize&&!t.tileSize.isFirstChange())&&(this.ngOnDestroy(),this.ngOnInit())},t.prototype.ngOnDestroy=function(){this.sub.unsubscribe(),this.sourceAdded&&this.MapService.removeSource(this.id)},t.prototype.init=function(){var t={type:this.type,url:this.url,tiles:this.tiles,bounds:this.bounds,minzoom:this.minzoom,maxzoom:this.maxzoom,tileSize:this.tileSize};this.MapService.addSource(this.id,t),this.sourceAdded=!0},t.decorators=[{type:n.Component,args:[{selector:"mgl-raster-source",template:"",changeDetection:n.ChangeDetectionStrategy.OnPush}]}],t.ctorParameters=function(){return[{type:g}]},t.propDecorators={id:[{type:n.Input}],url:[{type:n.Input}],tiles:[{type:n.Input}],bounds:[{type:n.Input}],minzoom:[{type:n.Input}],maxzoom:[{type:n.Input}],tileSize:[{type:n.Input}]},t}(),N=function(){function t(t){this.MapService=t,this.type="vector",this.sourceAdded=!1,this.sub=new s.Subscription}return t.prototype.ngOnInit=function(){var t=this;this.MapService.mapLoaded$.subscribe(function(){t.init();var e=s.fromEvent(t.MapService.mapInstance,"styledata").pipe(a.filter(function(){return!t.MapService.mapInstance.getSource(t.id)})).subscribe(function(){t.init()});t.sub.add(e)})},t.prototype.ngOnChanges=function(t){this.sourceAdded&&(t.url&&!t.url.isFirstChange()||t.tiles&&!t.tiles.isFirstChange()||t.minzoom&&!t.minzoom.isFirstChange()||t.maxzoom&&!t.maxzoom.isFirstChange())&&(this.ngOnDestroy(),this.ngOnInit())},t.prototype.ngOnDestroy=function(){this.sub.unsubscribe(),this.sourceAdded&&this.MapService.removeSource(this.id)},t.prototype.init=function(){this.MapService.addSource(this.id,{type:this.type,url:this.url,tiles:this.tiles,minzoom:this.minzoom,maxzoom:this.maxzoom}),this.sourceAdded=!0},t.decorators=[{type:n.Component,args:[{selector:"mgl-vector-source",template:"",changeDetection:n.ChangeDetectionStrategy.OnPush}]}],t.ctorParameters=function(){return[{type:g}]},t.propDecorators={id:[{type:n.Input}],url:[{type:n.Input}],tiles:[{type:n.Input}],minzoom:[{type:n.Input}],maxzoom:[{type:n.Input}]},t}(),_=function(){function t(t){this.MapService=t,this.sourceAdded=!1,this.sub=new s.Subscription}return t.prototype.ngOnInit=function(){var t=this;this.MapService.mapLoaded$.subscribe(function(){t.init();var e=s.fromEvent(t.MapService.mapInstance,"styledata").pipe(a.filter(function(){return!t.MapService.mapInstance.getSource(t.id)})).subscribe(function(){t.init()});t.sub.add(e)})},t.prototype.ngOnChanges=function(t){this.sourceAdded&&(t.urls&&!t.urls.isFirstChange()||t.coordinates&&!t.coordinates.isFirstChange())&&(this.ngOnDestroy(),this.ngOnInit())},t.prototype.ngOnDestroy=function(){this.sub.unsubscribe(),this.sourceAdded&&this.MapService.removeSource(this.id)},t.prototype.init=function(){this.MapService.addSource(this.id,{type:"video",urls:this.urls,coordinates:this.coordinates}),this.sourceAdded=!0},t.decorators=[{type:n.Component,args:[{selector:"mgl-video-source",template:"",changeDetection:n.ChangeDetectionStrategy.OnPush}]}],t.ctorParameters=function(){return[{type:g}]},t.propDecorators={id:[{type:n.Input}],urls:[{type:n.Input}],coordinates:[{type:n.Input}]},t}(),G=function(){function t(){}return t.withConfig=function(e){return{ngModule:t,providers:[{provide:d,useValue:e.accessToken},{provide:C,useValue:e.geocoderAccessToken||e.accessToken}]}},t.decorators=[{type:n.NgModule,args:[{imports:[e.CommonModule],declarations:[A,z,P,D,N,x,$,V,_,j,k,w,B,v,I,O,S,E,b,M,F,L,T,R],exports:[A,z,P,D,N,x,$,V,_,j,k,w,B,v,I,O,S,E,b,M,F,L,T,R]}]}],t}();t.ControlComponent=v,t.CustomControl=y,t.GeoJSONSourceComponent=x,t.MAPBOX_API_KEY=d,t.MAPBOX_GEOCODER_API_KEY=C,t.MapComponent=A,t.MapService=g,t.MglResizeEventEmitter=f,t.NgxMapboxGLModule=G,t.ɵa=S,t.ɵb=z,t.ɵc=P,t.ɵd=k,t.ɵe=w,t.ɵf=D,t.ɵg=N,t.ɵh=$,t.ɵi=V,t.ɵj=_,t.ɵk=j,t.ɵl=B,t.ɵm=I,t.ɵn=O,t.ɵo=E,t.ɵp=b,t.ɵq=M,t.ɵr=F,t.ɵs=L,t.ɵt=R,t.ɵu=T,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-mapbox-gl.umd.min.js.map