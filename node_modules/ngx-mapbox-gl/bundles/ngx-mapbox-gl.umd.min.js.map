{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-mapbox-gl/lib/map/map.service.ts","ng://ngx-mapbox-gl/lib/control/control.component.ts","ng://ngx-mapbox-gl/lib/control/attribution-control.directive.ts","ng://ngx-mapbox-gl/lib/control/fullscreen-control.directive.ts","ng://ngx-mapbox-gl/lib/control/geocoder-control.directive.ts","ng://ngx-mapbox-gl/lib/control/geolocate-control.directive.ts","ng://ngx-mapbox-gl/lib/control/navigation-control.directive.ts","ng://ngx-mapbox-gl/lib/control/scale-control.directive.ts","ng://ngx-mapbox-gl/lib/layer/layer.component.ts","ng://ngx-mapbox-gl/lib/marker/marker.component.ts","ng://ngx-mapbox-gl/lib/source/geojson/geojson-source.component.ts","ng://ngx-mapbox-gl/lib/source/geojson/feature.component.ts","ng://ngx-mapbox-gl/lib/draggable/draggable.directive.ts","ng://ngx-mapbox-gl/lib/image/image.component.ts","ng://ngx-mapbox-gl/lib/map/map.component.ts","ng://ngx-mapbox-gl/lib/markers-for-clusters/markers-for-clusters.component.ts","ng://ngx-mapbox-gl/lib/marker-cluster/marker-cluster.component.ts","ng://ngx-mapbox-gl/lib/popup/popup.component.ts","ng://ngx-mapbox-gl/lib/source/canvas-source.component.ts","ng://ngx-mapbox-gl/lib/source/image-source.component.ts","ng://ngx-mapbox-gl/lib/source/raster-source.component.ts","ng://ngx-mapbox-gl/lib/source/vector-source.component.ts","ng://ngx-mapbox-gl/lib/source/video-source.component.ts","ng://ngx-mapbox-gl/lib/ngx-mapbox-gl.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__values","o","m","MAPBOX_API_KEY","InjectionToken","MapService","zone","MglResizeEventEmitter","mapCreated","AsyncSubject","mapLoaded","layerIdsToRemove","sourceIdsToRemove","markersToRemove","popupsToRemove","imageIdsToRemove","subscription","Subscription","mapCreated$","asObservable","mapLoaded$","setup","options","_this","onStable","pipe","first","subscribe","MapboxGl","accessToken","customMapboxApiUrl","createMap","mapOptions","hookEvents","mapEvents","undefined","complete","destroyMap","mapInstance","unsubscribe","remove","updateMinZoom","minZoom","runOutsideAngular","setMinZoom","updateMaxZoom","maxZoom","setMaxZoom","updateScrollZoom","status","scrollZoom","enable","disable","updateDragRotate","dragRotate","updateTouchZoomRotate","touchZoomRotate","updateDoubleClickZoom","doubleClickZoom","updateKeyboard","keyboard","updateDragPan","dragPan","updateBoxZoom","boxZoom","updateStyle","style","setStyle","updateMaxBounds","maxBounds","setMaxBounds","changeCanvasCursor","cursor","getCanvasContainer","queryRenderedFeatures","pointOrBox","parameters","panTo","center","move","movingMethod","movingOptions","zoom","bearing","pitch","getZoom","getCenter","getBearing","getPitch","addLayer","layer","bindEvents","before","keys","layerOptions","forEach","key","tkey","layerEvents","click","observers","on","id","evt","run","emit","mouseEnter","mouseLeave","mouseMove","removeLayer","layerId","addMarker","marker","offset","markersOptions","anchor","draggable","element","childNodes","markerInstance","MapboxGl.Marker","markersEvents","dragStart","event","target","drag","dragEnd","lngLat","feature","setLngLat","addTo","removeMarker","createPopup","popup","popupOptions","popupInstance","MapboxGl.Popup","setDOMContent","popupEvents","close","open","addPopupToMap","skipOpenEvent","_listeners","addPopupToMarker","setPopup","removePopupFromMap","skipCloseEvent","removePopupFromMarker","addControl","control","position","removeControl","loadAndAddImage","imageId","url","loadImage","error","image","addImage","data","removeImage","addSource","sourceId","source","getSource","removeSource","setAllLayerPaintProperty","paint","setPaintProperty","setAllLayerLayoutProperty","layout","setLayoutProperty","setLayerFilter","filter","setFilter","setLayerBefore","beforeId","moveLayer","setLayerZoomRange","fitBounds","bounds","fitScreenCoordinates","points","getCurrentViewportBbox","canvas","getCanvas","w","parseInt","h","upLeft","unproject","toArray","upRight","downRight","downLeft","bbox","polygon","applyChanges","removeLayers","removeSources","removeMarkers","removePopups","removeImages","NgZone","assertNotInAngularZone","MapboxGl.Map","window","test","navigator","userAgent","subChanges","onMicrotaskEmpty","subResize","resizeEvent","resize","add","_b","tslib_1.__values","_c","events","load","mouseDown","mouseUp","dblClick","mouseOver","mouseOut","contextMenu","touchStart","touchEnd","touchMove","touchCancel","wheel","moveStart","moveEnd","zoomStart","zoomEvt","zoomEnd","rotateStart","rotate","rotateEnd","pitchStart","pitchEvt","pitchEnd","boxZoomStart","boxZoomEnd","boxZoomCancel","webGlContextLost","webGlContextRestored","render","styleData","sourceData","dataLoading","styleDataLoading","sourceDataLoading","styleImageMissing","idle","obj","prop","split","shift","toString","Injectable","Optional","type","Inject","args","decorators","CustomControl","container","onAdd","onRemove","removeChild","getDefaultPosition","ControlComponent","ngAfterContentInit","content","nativeElement","ngOnDestroy","Component","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","Input","ViewChild","AttributionControlDirective","Error","compact","customAttribution","AttributionControl","Directive","Host","FullscreenControlDirective","FullscreenControl","MAPBOX_GEOCODER_API_KEY","GeocoderControlDirective","clear","EventEmitter","loading","results","proximity","country","placeholder","types","flyTo","minLength","limit","language","localGeocoder","geocoder","MapboxGeocoder","searchInput","query","ngOnChanges","changes","isFirstChange","setProximity","currentValue","lastResultId","Output","GeolocateControlDirective","positionOptions","fitBoundsOptions","trackUserLocation","showUserLocation","GeolocateControl","NavigationControlDirective","showCompass","showZoom","NavigationControl","ScaleControlDirective","unit","setUnit","maxWidth","ScaleControl","LayerComponent","layerAdded","ngOnInit","sub","switchMap","fromEvent","mapTo","getLayer","startWith","init","minzoom","maxzoom","metadata","source-layer","sourceLayer","MarkerComponent","setDraggable","popupShown","getPopup","ngAfterViewInit","togglePopup","updateCoordinates","coordinates","encapsulation","ViewEncapsulation","None","GeoJSONSourceComponent","updateFeatureData","Subject","sourceAdded","featureIdCounter","features","buffer","tolerance","cluster","clusterRadius","clusterMaxZoom","clusterProperties","setData","getClusterExpansionZoom","clusterId","getClusterChildren","getClusterLeaves","_addFeature","_removeFeature","collection","index","indexOf","splice","_getNewFeatureId","debounceTime","FeatureComponent","geometry","properties","forwardRef","DraggableDirective","destroyed$","ReplaySubject","enter$","leave$","updateCoords","console","warn","markerElement","children","bind","handleDraggable","moving","inside","mouseUp$","dragStart$","takeUntil","filterFeature","tap","dragging$","dragEnd$","take","lng","lat","point","layers","ImageComponent","loaded","isAdded","isAdding","hasImage","_a","error_1","MapComponent","defineProperty","mapContainer","hash","interactive","bearingSnap","pitchWithRotate","classes","attributionControl","logoPosition","failIfMajorPerformanceCaveat","preserveDrawingBuffer","refreshExpiredTiles","trackResize","renderWorldCopies","maxTileCacheSize","localIdeographFontFamily","transformRequest","antialias","cursorStyle","toPromise","centerWithPanTo","panToOptions","providers","PointDirective","ClusterPointDirective","uniqId","MarkersForClustersComponent","ChangeDetectorRef","isSourceLoaded","sourceDataType","merge","updateCluster","trackByClusterPoint","_index","clusterPoint","params","pointTpl","clusterPoints","markForCheck","preserveWhitespaces","ContentChild","read","TemplateRef","MarkerClusterComponent","getLeavesFn","supercluster","getChildrenFn","getClusterExpansionZoomFn","radius","extent","nodeSize","log","reduce","map","Supercluster","currentZoom","Math","round","getClusters","PopupComponent","newlngLat","popupInstanceTmp","isOpen","previousMarker","previousValue","addPopup","closeButton","closeOnClick","CanvasSourceComponent","animate","ImageSourceComponent","updateImage","RasterSourceComponent","tiles","tileSize","VectorSourceComponent","VideoSourceComponent","urls","NgxMapboxGLModule","withConfig","config","ngModule","provide","useValue","geocoderAccessToken","NgModule","imports","CommonModule","declarations","exports"],"mappings":"wyBA6BO,IAAIA,EAAW,WAQlB,OAPAA,EAAWC,OAAOC,QAAU,SAAkBC,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,IAE9E,OAAON,IAEKU,MAAMC,KAAMP,YA4BzB,SAASQ,EAAUC,EAASC,EAAYC,EAAGC,GAC9C,OAAO,IAAKD,IAAMA,EAAIE,UAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,IAAW,MAAOG,GAAKL,EAAOK,IACpF,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,SAAEK,IAAW,MAAOG,GAAKL,EAAOK,IACvF,SAASF,EAAKI,GAAUA,EAAOC,KAAOT,EAAQQ,EAAOL,OAAS,IAAIN,EAAE,SAAUG,GAAWA,EAAQQ,EAAOL,SAAWO,KAAKR,EAAWK,GACnIH,GAAMN,EAAYA,EAAUN,MAAMG,EAASC,GAAc,KAAKS,UAI/D,SAASM,EAAYhB,EAASiB,GACjC,IAAsGC,EAAGC,EAAGhC,EAAGiC,EAA3GC,EAAI,CAAEC,MAAO,EAAGC,KAAM,WAAa,GAAW,EAAPpC,EAAE,GAAQ,MAAMA,EAAE,GAAI,OAAOA,EAAE,IAAOqC,KAAM,GAAIC,IAAK,IAChG,OAAOL,EAAI,CAAEV,KAAMgB,EAAK,GAAIC,QAASD,EAAK,GAAIE,SAAUF,EAAK,IAAwB,mBAAXG,SAA0BT,EAAES,OAAOC,UAAY,WAAa,OAAOhC,OAAUsB,EACvJ,SAASM,EAAKpC,GAAK,OAAO,SAAUyC,GAAK,OACzC,SAAcC,GACV,GAAId,EAAG,MAAM,IAAIe,UAAU,mCAC3B,KAAOZ,GAAG,IACN,GAAIH,EAAI,EAAGC,IAAMhC,EAAY,EAAR6C,EAAG,GAASb,EAAU,UAAIa,EAAG,GAAKb,EAAS,YAAOhC,EAAIgC,EAAU,YAAMhC,EAAES,KAAKuB,GAAI,GAAKA,EAAET,SAAWvB,EAAIA,EAAES,KAAKuB,EAAGa,EAAG,KAAKlB,KAAM,OAAO3B,EAE3J,OADIgC,EAAI,EAAGhC,IAAG6C,EAAK,CAAS,EAARA,EAAG,GAAQ7C,EAAEqB,QACzBwB,EAAG,IACP,KAAK,EAAG,KAAK,EAAG7C,EAAI6C,EAAI,MACxB,KAAK,EAAc,OAAXX,EAAEC,QAAgB,CAAEd,MAAOwB,EAAG,GAAIlB,MAAM,GAChD,KAAK,EAAGO,EAAEC,QAASH,EAAIa,EAAG,GAAIA,EAAK,CAAC,GAAI,SACxC,KAAK,EAAGA,EAAKX,EAAEI,IAAIS,MAAOb,EAAEG,KAAKU,MAAO,SACxC,QACI,KAAkB/C,GAAZA,EAAIkC,EAAEG,MAAYhC,OAAS,GAAKL,EAAEA,EAAEK,OAAS,MAAkB,IAAVwC,EAAG,IAAsB,IAAVA,EAAG,IAAW,CAAEX,EAAI,EAAG,SACjG,GAAc,IAAVW,EAAG,MAAc7C,GAAM6C,EAAG,GAAK7C,EAAE,IAAM6C,EAAG,GAAK7C,EAAE,IAAM,CAAEkC,EAAEC,MAAQU,EAAG,GAAI,MAC9E,GAAc,IAAVA,EAAG,IAAYX,EAAEC,MAAQnC,EAAE,GAAI,CAAEkC,EAAEC,MAAQnC,EAAE,GAAIA,EAAI6C,EAAI,MAC7D,GAAI7C,GAAKkC,EAAEC,MAAQnC,EAAE,GAAI,CAAEkC,EAAEC,MAAQnC,EAAE,GAAIkC,EAAEI,IAAIU,KAAKH,GAAK,MACvD7C,EAAE,IAAIkC,EAAEI,IAAIS,MAChBb,EAAEG,KAAKU,MAAO,SAEtBF,EAAKf,EAAKrB,KAAKI,EAASqB,GAC1B,MAAOV,GAAKqB,EAAK,CAAC,EAAGrB,GAAIQ,EAAI,EAAI,QAAWD,EAAI/B,EAAI,EACtD,GAAY,EAAR6C,EAAG,GAAQ,MAAMA,EAAG,GAAI,MAAO,CAAExB,MAAOwB,EAAG,GAAKA,EAAG,QAAK,EAAQlB,MAAM,GArB9BL,CAAK,CAACnB,EAAGyC,MA6BtD,SAASK,EAASC,GACrB,IAAIC,EAAsB,mBAAXT,QAAyBQ,EAAER,OAAOC,UAAWzC,EAAI,EAChE,OAAIiD,EAAUA,EAAE1C,KAAKyC,GACd,CACH3B,KAAM,WAEF,OADI2B,GAAKhD,GAAKgD,EAAE7C,SAAQ6C,OAAI,GACrB,CAAE7B,MAAO6B,GAAKA,EAAEhD,KAAMyB,MAAOuB,KCxGhD,IAAaE,EAAiB,IAAIC,EAAAA,eAAe,6BAIjD,OAFA,6BAyEE,SAAAC,EACUC,EAC6CH,EACxBI,GAFrB7C,KAAA4C,KAAAA,EAC6C5C,KAAAyC,eAAAA,EACxBzC,KAAA6C,sBAAAA,EAZvB7C,KAAA8C,WAAa,IAAIC,EAAAA,aACjB/C,KAAAgD,UAAY,IAAID,EAAAA,aAChB/C,KAAAiD,iBAA6B,GAC7BjD,KAAAkD,kBAA8B,GAC9BlD,KAAAmD,gBAAqC,GACrCnD,KAAAoD,eAAmC,GACnCpD,KAAAqD,iBAA6B,GAC7BrD,KAAAsD,aAAe,IAAIC,EAAAA,aAOzBvD,KAAKwD,YAAcxD,KAAK8C,WAAWW,eACnCzD,KAAK0D,WAAa1D,KAAKgD,UAAUS,eAwoBrC,OAroBEd,EAAA/C,UAAA+D,MAAA,SAAMC,GAAN,IAAAC,EAAA7D,KAEEA,KAAK4C,KAAKkB,SAASC,KAAKC,EAAAA,SAASC,UAAS,WAExCJ,EAAKzE,OAAO8E,EAAU,cAAeN,EAAQO,aAAeN,EAAKpB,gBAC7DmB,EAAQQ,oBACVP,EAAKzE,OAAO8E,EAAU,iBAAkBN,EAAQQ,oBAElDP,EAAKQ,UAAUT,EAAQU,YACvBT,EAAKU,WAAWX,EAAQY,WACxBX,EAAKW,UAAYZ,EAAQY,UACzBX,EAAKf,WAAWlC,KAAK6D,WACrBZ,EAAKf,WAAW4B,cAIpB/B,EAAA/C,UAAA+E,WAAA,WACM3E,KAAK4E,cACP5E,KAAKsD,aAAauB,cAClB7E,KAAK4E,YAAYE,WAIrBnC,EAAA/C,UAAAmF,cAAA,SAAcC,GAAd,IAAAnB,EAAA7D,KACE,OAAOA,KAAK4C,KAAKqC,kBAAiB,WAChCpB,EAAKe,YAAYM,WAAWF,MAIhCrC,EAAA/C,UAAAuF,cAAA,SAAcC,GAAd,IAAAvB,EAAA7D,KACE,OAAOA,KAAK4C,KAAKqC,kBAAiB,WAChCpB,EAAKe,YAAYS,WAAWD,MAIhCzC,EAAA/C,UAAA0F,iBAAA,SAAiBC,GAAjB,IAAA1B,EAAA7D,KACE,OAAOA,KAAK4C,KAAKqC,kBAAiB,WAChCM,EAAS1B,EAAKe,YAAYY,WAAWC,SAAW5B,EAAKe,YAAYY,WAAWE,aAIhF/C,EAAA/C,UAAA+F,iBAAA,SAAiBJ,GAAjB,IAAA1B,EAAA7D,KACE,OAAOA,KAAK4C,KAAKqC,kBAAiB,WAChCM,EAAS1B,EAAKe,YAAYgB,WAAWH,SAAW5B,EAAKe,YAAYgB,WAAWF,aAIhF/C,EAAA/C,UAAAiG,sBAAA,SAAsBN,GAAtB,IAAA1B,EAAA7D,KACE,OAAOA,KAAK4C,KAAKqC,kBAAiB,WAChCM,EAAS1B,EAAKe,YAAYkB,gBAAgBL,SAAW5B,EAAKe,YAAYkB,gBAAgBJ,aAI1F/C,EAAA/C,UAAAmG,sBAAA,SAAsBR,GAAtB,IAAA1B,EAAA7D,KACE,OAAOA,KAAK4C,KAAKqC,kBAAiB,WAChCM,EAAS1B,EAAKe,YAAYoB,gBAAgBP,SAAW5B,EAAKe,YAAYoB,gBAAgBN,aAI1F/C,EAAA/C,UAAAqG,eAAA,SAAeV,GAAf,IAAA1B,EAAA7D,KACE,OAAOA,KAAK4C,KAAKqC,kBAAiB,WAChCM,EAAS1B,EAAKe,YAAYsB,SAAST,SAAW5B,EAAKe,YAAYsB,SAASR,aAI5E/C,EAAA/C,UAAAuG,cAAA,SAAcZ,GAAd,IAAA1B,EAAA7D,KACE,OAAOA,KAAK4C,KAAKqC,kBAAiB,WAChCM,EAAS1B,EAAKe,YAAYwB,QAAQX,SAAW5B,EAAKe,YAAYwB,QAAQV,aAI1E/C,EAAA/C,UAAAyG,cAAA,SAAcd,GAAd,IAAA1B,EAAA7D,KACE,OAAOA,KAAK4C,KAAKqC,kBAAiB,WAChCM,EAAS1B,EAAKe,YAAY0B,QAAQb,SAAW5B,EAAKe,YAAY0B,QAAQZ,aAI1E/C,EAAA/C,UAAA2G,YAAA,SAAYC,GAAZ,IAAA3C,EAAA7D,KACE,OAAOA,KAAK4C,KAAKqC,kBAAiB,WAChCpB,EAAKe,YAAY6B,SAASD,MAI9B7D,EAAA/C,UAAA8G,gBAAA,SAAgBC,GAAhB,IAAA9C,EAAA7D,KACE,OAAOA,KAAK4C,KAAKqC,kBAAiB,WAChCpB,EAAKe,YAAYgC,aAAaD,MAIlChE,EAAA/C,UAAAiH,mBAAA,SAAmBC,GACF9G,KAAK4E,YAAYmC,qBACzBP,MAAMM,OAASA,GAGxBnE,EAAA/C,UAAAoH,sBAAA,SACEC,EACAC,GAEA,OAAOlH,KAAK4E,YAAYoC,sBAAsBC,EAAYC,IAG5DvE,EAAA/C,UAAAuH,MAAA,SAAMC,EAA6BxD,GAAnC,IAAAC,EAAA7D,KACE,OAAOA,KAAK4C,KAAKqC,kBAAiB,WAChCpB,EAAKe,YAAYuC,MAAMC,EAAQxD,MAInCjB,EAAA/C,UAAAyH,KAAA,SACEC,EACAC,EACAC,EACAJ,EACAK,EACAC,GANF,IAAA7D,EAAA7D,KAQE,OAAOA,KAAK4C,KAAKqC,kBAAiB,WAC1BpB,EAAKe,YAAY0C,GAAapI,EAAA,GAC/BqI,EAAa,CAChBC,KAAMA,GAAc3D,EAAKe,YAAY+C,UACrCP,OAAQA,GAAkBvD,EAAKe,YAAYgD,YAC3CH,QAASA,GAAoB5D,EAAKe,YAAYiD,aAC9CH,MAAOA,GAAgB7D,EAAKe,YAAYkD,iBAK9CnF,EAAA/C,UAAAmI,SAAA,SAASC,EAAmBC,EAAqBC,GAAjD,IAAArE,EAAA7D,KACEA,KAAK4C,KAAKqC,kBAAiB,WACzB9F,OAAOgJ,KAAKH,EAAMI,cACfC,QAAO,SAAEC,OACFC,EAAI,EACNP,EAAMI,aAAaG,KAAU9D,kBACxBuD,EAAMI,aAAaG,KAGhC1E,EAAKe,YAAYmD,SAASC,EAAMI,aAAcF,GAC1CD,IACED,EAAMQ,YAAYC,MAAMC,UAAUhJ,QACpCmE,EAAKe,YAAY+D,GAAG,QAASX,EAAMI,aAAaQ,GAAE,SAAGC,GACnDhF,EAAKjB,KAAKkG,IAAG,WACXd,EAAMQ,YAAYC,MAAMM,KAAKF,OAI/Bb,EAAMQ,YAAYQ,WAAWN,UAAUhJ,QACzCmE,EAAKe,YAAY+D,GAAG,aAAcX,EAAMI,aAAaQ,GAAE,SAAGC,GACxDhF,EAAKjB,KAAKkG,IAAG,WACXd,EAAMQ,YAAYQ,WAAWD,KAAKF,OAIpCb,EAAMQ,YAAYS,WAAWP,UAAUhJ,QACzCmE,EAAKe,YAAY+D,GAAG,aAAcX,EAAMI,aAAaQ,GAAE,SAAGC,GACxDhF,EAAKjB,KAAKkG,IAAG,WACXd,EAAMQ,YAAYS,WAAWF,KAAKF,OAIpCb,EAAMQ,YAAYU,UAAUR,UAAUhJ,QACxCmE,EAAKe,YAAY+D,GAAG,YAAaX,EAAMI,aAAaQ,GAAE,SAAGC,GACvDhF,EAAKjB,KAAKkG,IAAG,WACXd,EAAMQ,YAAYU,UAAUH,KAAKF,WAQ7ClG,EAAA/C,UAAAuJ,YAAA,SAAYC,GACVpJ,KAAKiD,iBAAiBZ,KAAK+G,IAG7BzG,EAAA/C,UAAAyJ,UAAA,SAAUC,GAAV,IAAAzF,EAAA7D,KACQ4D,EAAkC,CACtC2F,OAAQD,EAAOE,eAAeD,OAC9BE,OAAQH,EAAOE,eAAeC,OAC9BC,YAAaJ,EAAOE,eAAeE,WAEjCJ,EAAOE,eAAeG,QAAQC,WAAWlK,OAAS,IACpDkE,EAAQ+F,QAAUL,EAAOE,eAAeG,aAEpCE,EAAiB,IAAIC,EAAAA,OAAgBlG,GACvC0F,EAAOS,cAAcC,UAAUtB,UAAUhJ,QAC3CmK,EAAelB,GAAG,YAAW,SAAGsB,GAC9B,OAAApG,EAAKjB,KAAKkG,IAAG,WAAO,OAAAQ,EAAOS,cAAcC,UAAUjB,KAAKkB,EAAMC,YAG9DZ,EAAOS,cAAcI,KAAKzB,UAAUhJ,QACtCmK,EAAelB,GAAG,OAAM,SAAGsB,GACzB,OAAApG,EAAKjB,KAAKkG,IAAG,WAAO,OAAAQ,EAAOS,cAAcI,KAAKpB,KAAKkB,EAAMC,YAGzDZ,EAAOS,cAAcK,QAAQ1B,UAAUhJ,QACzCmK,EAAelB,GAAG,UAAS,SAAGsB,GAC5B,OAAApG,EAAKjB,KAAKkG,IAAG,WAAO,OAAAQ,EAAOS,cAAcK,QAAQrB,KAAKkB,EAAMC,gBAG1DG,EAA8Bf,EAAOE,eAAec,QACtChB,EAAOE,eAAec,QAAgB,SAAa,YACrEhB,EAAOE,eAAqB,OAE9B,OADAK,EAAeU,UAAUF,GAClBrK,KAAK4C,KAAKqC,kBAAiB,WAEhC,OADA4E,EAAeW,MAAM3G,EAAKe,aACnBiF,KAIXlH,EAAA/C,UAAA6K,aAAA,SAAanB,GACXtJ,KAAKmD,gBAAgBd,KAAKiH,IAG5B3G,EAAA/C,UAAA8K,YAAA,SAAYC,EAAmBhB,GAA/B,IAAA9F,EAAA7D,KACE,OAAOA,KAAK4C,KAAKqC,kBAAiB,WAChC9F,OAAOgJ,KAAKwC,EAAMC,cACfvC,QAAO,SAAEC,GACR,OAAMqC,EAAkB,aAAErC,KAAS7D,kBAA0BkG,EAAkB,aAAErC,SAC/EuC,EAAgB,IAAIC,EAAAA,MAAeH,EAAMC,cAgB/C,OAfAC,EAAcE,cAAcpB,GACxBgB,EAAMK,YAAYC,MAAMvC,UAAUhJ,QACpCmL,EAAclC,GAAG,QAAO,WACtB9E,EAAKjB,KAAKkG,IAAG,WACX6B,EAAMK,YAAYC,MAAMlC,WAI1B4B,EAAMK,YAAYE,KAAKxC,UAAUhJ,QACnCmL,EAAclC,GAAG,OAAM,WACrB9E,EAAKjB,KAAKkG,IAAG,WACX6B,EAAMK,YAAYE,KAAKnC,WAItB8B,KAIXlI,EAAA/C,UAAAuL,cAAA,SAAcR,EAAuBN,EAA6Be,GAAlE,IAAAvH,EAAA7D,KACE,YADgE,IAAAoL,IAAAA,GAAA,GACzDpL,KAAK4C,KAAKqC,kBAAiB,WAC5BmG,GAAiB,EAAaC,mBACzB,EAAaA,WAAiB,KAEvCV,EAAMJ,UAAUF,GAChBM,EAAMH,MAAM3G,EAAKe,gBAIrBjC,EAAA/C,UAAA0L,iBAAA,SAAiBhC,EAAyBqB,GACxC,OAAO3K,KAAK4C,KAAKqC,kBAAiB,WAChCqE,EAAOiC,SAASZ,MAIpBhI,EAAA/C,UAAA4L,mBAAA,SAAmBb,EAAuBc,QAAA,IAAAA,IAAAA,GAAA,GACpCA,GAAkB,EAAaJ,mBAC1B,EAAaA,WAAkB,MAExCrL,KAAKoD,eAAef,KAAKsI,IAG3BhI,EAAA/C,UAAA8L,sBAAA,SAAsBpC,GACpB,OAAOtJ,KAAK4C,KAAKqC,kBAAiB,WAChCqE,EAAOiC,SAAS9G,cAIpB9B,EAAA/C,UAAA+L,WAAA,SAAWC,EAA+CC,GAA1D,IAAAhI,EAAA7D,KACE,OAAOA,KAAK4C,KAAKqC,kBAAiB,WAChCpB,EAAKe,YAAY+G,WAAU,EAAeE,MAI9ClJ,EAAA/C,UAAAkM,cAAA,SAAcF,GAAd,IAAA/H,EAAA7D,KACE,OAAOA,KAAK4C,KAAKqC,kBAAiB,WAChCpB,EAAKe,YAAYkH,cAAa,MAI5BnJ,EAAA/C,UAAAmM,gBAAN,SAAsBC,EAAiBC,EAAarI,+EAClD,MAAA,CAAA,EAAO5D,KAAK4C,KAAKqC,kBAAiB,WAChC,OAAO,IAAI3E,QAAO,SAAEC,EAASC,GAC3BqD,EAAKe,YAAYsH,UAAUD,EAAG,SAAGE,EAAkCC,GAC7DD,EACF3L,EAAO2L,IAGTtI,EAAKwI,SAASL,EAASI,EAAOxI,GAC9BrD,iBAMRoC,EAAA/C,UAAAyM,SAAA,SAASL,EAAiBM,EAAoB1I,GAA9C,IAAAC,EAAA7D,KACE,OAAOA,KAAK4C,KAAKqC,kBAAiB,WAChCpB,EAAKe,YAAYyH,SAASL,EAAO,EAAapI,MAIlDjB,EAAA/C,UAAA2M,YAAA,SAAYP,GACVhM,KAAKqD,iBAAiBhB,KAAK2J,IAG7BrJ,EAAA/C,UAAA4M,UAAA,SAAUC,EAAkBC,GAA5B,IAAA7I,EAAA7D,KACE,OAAOA,KAAK4C,KAAKqC,kBAAiB,WAChC9F,OAAOgJ,KAAKuE,GACTrE,QAAO,SAAEC,GACR,OAAA,EAAcA,KAAS7D,kBAAoB,EAAc6D,KAC7DzE,EAAKe,YAAY4H,UAAUC,EAAQ,MAIvC9J,EAAA/C,UAAA+M,UAAA,SAAaF,GACX,OAAezM,KAAK4E,YAAY+H,UAAUF,IAG5C9J,EAAA/C,UAAAgN,aAAA,SAAaH,GACXzM,KAAKkD,kBAAkBb,KAAKoK,IAG9B9J,EAAA/C,UAAAiN,yBAAA,SACEzD,EACA0D,GAFF,IAAAjJ,EAAA7D,KAUE,OAAOA,KAAK4C,KAAKqC,kBAAiB,WAChC9F,OAAOgJ,KAAK2E,GAAOzE,QAAO,SAAEC,GAE1BzE,EAAKe,YAAYmI,iBAAiB3D,EAASd,EAAK,EAAaA,SAKnE3F,EAAA/C,UAAAoN,0BAAA,SACE5D,EACA6D,GAFF,IAAApJ,EAAA7D,KAUE,OAAOA,KAAK4C,KAAKqC,kBAAiB,WAChC9F,OAAOgJ,KAAK8E,GAAQ5E,QAAO,SAAEC,GAE3BzE,EAAKe,YAAYsI,kBAAkB9D,EAASd,EAAK,EAAcA,SAKrE3F,EAAA/C,UAAAuN,eAAA,SAAe/D,EAAiBgE,GAAhC,IAAAvJ,EAAA7D,KACE,OAAOA,KAAK4C,KAAKqC,kBAAiB,WAChCpB,EAAKe,YAAYyI,UAAUjE,EAASgE,MAIxCzK,EAAA/C,UAAA0N,eAAA,SAAelE,EAAiBmE,GAAhC,IAAA1J,EAAA7D,KACE,OAAOA,KAAK4C,KAAKqC,kBAAiB,WAChCpB,EAAKe,YAAY4I,UAAUpE,EAASmE,MAIxC5K,EAAA/C,UAAA6N,kBAAA,SAAkBrE,EAAiBpE,EAAkBI,GAArD,IAAAvB,EAAA7D,KACE,OAAOA,KAAK4C,KAAKqC,kBAAiB,WAChCpB,EAAKe,YAAY6I,kBAAkBrE,EAASpE,GAAoB,EAAGI,GAAoB,OAI3FzC,EAAA/C,UAAA8N,UAAA,SAAUC,EAAmC/J,GAA7C,IAAAC,EAAA7D,KACE,OAAOA,KAAK4C,KAAKqC,kBAAiB,WAChCpB,EAAKe,YAAY8I,UAAUC,EAAQ/J,MAIvCjB,EAAA/C,UAAAgO,qBAAA,SACEC,EACApG,EACA7D,GAHF,IAAAC,EAAA7D,KAKE,OAAOA,KAAK4C,KAAKqC,kBAAiB,WAChCpB,EAAKe,YAAYgJ,qBAAqBC,EAAO,GAAIA,EAAO,GAAIpG,EAAS7D,MAIzEjB,EAAA/C,UAAAkO,uBAAA,eACQC,EAAS/N,KAAK4E,YAAYoJ,YAC1BC,EAAIC,SAASH,EAAOvH,MAAW,MAAG,IAClC2H,EAAID,SAASH,EAAOvH,MAAY,OAAG,IACnC4H,EAASpO,KAAK4E,YAAYyJ,UAAU,CAAC,EAAG,IAAIC,UAC5CC,EAAUvO,KAAK4E,YAAYyJ,UAAU,CAACJ,EAAG,IAAIK,UAC7CE,EAAYxO,KAAK4E,YAAYyJ,UAAU,CAACJ,EAAGE,IAAIG,UAC/CG,EAAWzO,KAAK4E,YAAYyJ,UAAU,CAAC,EAAGF,IAAIG,UACpD,OAAYI,EAAKC,EAAAA,QAAQ,CAAC,CAACP,EAAQG,EAASC,EAAWC,EAAUL,OAGnEzL,EAAA/C,UAAAgP,aAAA,WAAA,IAAA/K,EAAA7D,KACEA,KAAK4C,KAAKqC,kBAAiB,WACzBpB,EAAKgL,eACLhL,EAAKiL,gBACLjL,EAAKkL,gBACLlL,EAAKmL,eACLnL,EAAKoL,kBAIDtM,EAAA/C,UAAAyE,UAAR,SAAkBT,GAAlB,IAAAC,EAAA7D,KACEkP,EAAAA,OAAOC,yBACPhQ,OAAOgJ,KAAKvE,GACTyE,QAAO,SAAEC,OACFC,EAAI,EACN3E,EAAQ2E,KAAU9D,kBACbb,EAAQ2E,KAGrBvI,KAAK4E,YAAc,IAAIwK,EAAAA,IAAaxL,GAEjByL,QAAU,2BAA2BC,KAAKD,OAAOE,UAAUC,YAE5ExP,KAAK4E,YAAY6B,SAAS7C,EAAa,WAGnC6L,EAAazP,KAAK4C,KAAK8M,iBAC1BzL,UAAS,WAAO,OAAAJ,EAAK+K,iBACxB,GAAI5O,KAAK6C,sBAAuB,KACxB8M,EAAY3P,KAAK6C,sBAAsB+M,YAAY3L,UAAS,WAChEJ,EAAKe,YAAYiL,WAEnB7P,KAAKsD,aAAawM,IAAIH,GAExB3P,KAAKsD,aAAawM,IAAIL,IAGhB9M,EAAA/C,UAAAiP,aAAR,uBACE,IAAsB,IAAAkB,EAAAC,EAAAhQ,KAAKiD,kBAAgBgN,EAAAF,EAAAnP,QAAAqP,EAAAjP,KAAAiP,EAAAF,EAAAnP,OAAE,CAAxC,IAAMwI,EAAO6G,EAAAvP,MAChBV,KAAK4E,YAAYuE,YAAYC,wGAE/BpJ,KAAKiD,iBAAmB,IAGlBN,EAAA/C,UAAAkP,cAAR,uBACE,IAAuB,IAAAiB,EAAAC,EAAAhQ,KAAKkD,mBAAiB+M,EAAAF,EAAAnP,QAAAqP,EAAAjP,KAAAiP,EAAAF,EAAAnP,OAAE,CAA1C,IAAM6L,EAAQwD,EAAAvP,MACjBV,KAAK4E,YAAYgI,aAAaH,wGAEhCzM,KAAKkD,kBAAoB,IAGnBP,EAAA/C,UAAAmP,cAAR,uBACE,IAAqB,IAAAgB,EAAAC,EAAAhQ,KAAKmD,iBAAe8M,EAAAF,EAAAnP,QAAAqP,EAAAjP,KAAAiP,EAAAF,EAAAnP,OAAE,CAA1BqP,EAAAvP,MACRoE,8GAET9E,KAAKmD,gBAAkB,IAGjBR,EAAA/C,UAAAoP,aAAR,uBACE,IAAoB,IAAAe,EAAAC,EAAAhQ,KAAKoD,gBAAc6M,EAAAF,EAAAnP,QAAAqP,EAAAjP,KAAAiP,EAAAF,EAAAnP,OAAE,CAAzBqP,EAAAvP,MACRoE,8GAER9E,KAAKoD,eAAiB,IAGhBT,EAAA/C,UAAAqP,aAAR,uBACE,IAAsB,IAAAc,EAAAC,EAAAhQ,KAAKqD,kBAAgB4M,EAAAF,EAAAnP,QAAAqP,EAAAjP,KAAAiP,EAAAF,EAAAnP,OAAE,CAAxC,IAAMoL,EAAOiE,EAAAvP,MAChBV,KAAK4E,YAAY2H,YAAYP,wGAE/BhM,KAAKqD,iBAAmB,IAGlBV,EAAA/C,UAAA2E,WAAR,SAAmB2L,GAAnB,IAAArM,EAAA7D,KACEA,KAAK4E,YAAY+D,GAAG,OAAM,WACxB9E,EAAKb,UAAUpC,KAAK6D,WACpBZ,EAAKb,UAAU0B,WACfb,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAOC,KAAKpH,KAAKlF,EAAKe,iBAExCsL,EAAOL,OAAOnH,UAAUhJ,QAC1BM,KAAK4E,YAAY+D,GAAG,SAAQ,WAAQ,OAAA9E,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAOL,OAAO9G,WAEpEmH,EAAOpL,OAAO4D,UAAUhJ,QAC1BM,KAAK4E,YAAY+D,GAAG,SAAQ,WAAQ,OAAA9E,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAOpL,OAAOiE,WAEpEmH,EAAOE,UAAU1H,UAAUhJ,QAC7BM,KAAK4E,YAAY+D,GAAG,YAAW,SAAGE,GAAgC,OAAAhF,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAOE,UAAUrH,KAAKF,OAE1GqH,EAAOG,QAAQ3H,UAAUhJ,QAC3BM,KAAK4E,YAAY+D,GAAG,UAAS,SAAGE,GAAgC,OAAAhF,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAOG,QAAQtH,KAAKF,OAEtGqH,EAAOhH,UAAUR,UAAUhJ,QAC7BM,KAAK4E,YAAY+D,GAAG,YAAW,SAAGE,GAAgC,OAAAhF,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAOhH,UAAUH,KAAKF,OAE1GqH,EAAOzH,MAAMC,UAAUhJ,QACzBM,KAAK4E,YAAY+D,GAAG,QAAO,SAAGE,GAAgC,OAAAhF,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAOzH,MAAMM,KAAKF,OAElGqH,EAAOI,SAAS5H,UAAUhJ,QAC5BM,KAAK4E,YAAY+D,GAAG,WAAU,SAAGE,GAAgC,OAAAhF,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAOI,SAASvH,KAAKF,OAExGqH,EAAOlH,WAAWN,UAAUhJ,QAC9BM,KAAK4E,YAAY+D,GAAG,aAAY,SAAGE,GAAgC,OAAAhF,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAOlH,WAAWD,KAAKF,OAE5GqH,EAAOjH,WAAWP,UAAUhJ,QAC9BM,KAAK4E,YAAY+D,GAAG,aAAY,SAAGE,GAAgC,OAAAhF,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAOjH,WAAWF,KAAKF,OAE5GqH,EAAOK,UAAU7H,UAAUhJ,QAC7BM,KAAK4E,YAAY+D,GAAG,YAAW,SAAGE,GAAgC,OAAAhF,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAOK,UAAUxH,KAAKF,OAE1GqH,EAAOM,SAAS9H,UAAUhJ,QAC5BM,KAAK4E,YAAY+D,GAAG,WAAU,SAAGE,GAAgC,OAAAhF,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAOM,SAASzH,KAAKF,OAExGqH,EAAOO,YAAY/H,UAAUhJ,QAC/BM,KAAK4E,YAAY+D,GAAG,cAAa,SAAGE,GAAgC,OAAAhF,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAOO,YAAY1H,KAAKF,OAE9GqH,EAAOQ,WAAWhI,UAAUhJ,QAC9BM,KAAK4E,YAAY+D,GAAG,aAAY,SAAGE,GAAgC,OAAAhF,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAOQ,WAAW3H,KAAKF,OAE5GqH,EAAOS,SAASjI,UAAUhJ,QAC5BM,KAAK4E,YAAY+D,GAAG,WAAU,SAAGE,GAAgC,OAAAhF,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAOS,SAAS5H,KAAKF,OAExGqH,EAAOU,UAAUlI,UAAUhJ,QAC7BM,KAAK4E,YAAY+D,GAAG,YAAW,SAAGE,GAAgC,OAAAhF,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAOU,UAAU7H,KAAKF,OAE1GqH,EAAOW,YAAYnI,UAAUhJ,QAC/BM,KAAK4E,YAAY+D,GAAG,cAAa,SAAGE,GAAgC,OAAAhF,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAOW,YAAY9H,KAAKF,OAE9GqH,EAAOY,MAAMpI,UAAUhJ,QAEzBM,KAAK4E,YAAY+D,GAAG,QAAO,SAAGE,GAAa,OAAAhF,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAOY,MAAM/H,KAAKF,OAE/EqH,EAAOa,UAAUrI,UAAUhJ,QAC7BM,KAAK4E,YAAY+D,GAAG,YAAW,SAAGE,GAAmB,OAAAhF,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAOa,UAAUhI,KAAKF,OAE7FqH,EAAO7I,KAAKqB,UAAUhJ,QACxBM,KAAK4E,YAAY+D,GAAG,OAAM,SAAGE,GAAyD,OAAAhF,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAO7I,KAAK0B,KAAKF,OAEzHqH,EAAOc,QAAQtI,UAAUhJ,QAC3BM,KAAK4E,YAAY+D,GAAG,UAAS,SAAGE,GAAmB,OAAAhF,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAOc,QAAQjI,KAAKF,OAEzFqH,EAAOlG,UAAUtB,UAAUhJ,QAC7BM,KAAK4E,YAAY+D,GAAG,YAAW,SAAGE,GAAmB,OAAAhF,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAOlG,UAAUjB,KAAKF,OAE7FqH,EAAO/F,KAAKzB,UAAUhJ,QACxBM,KAAK4E,YAAY+D,GAAG,OAAM,SAAGE,GAAyD,OAAAhF,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAO/F,KAAKpB,KAAKF,OAEzHqH,EAAO9F,QAAQ1B,UAAUhJ,QAC3BM,KAAK4E,YAAY+D,GAAG,UAAS,SAAGE,GAAmB,OAAAhF,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAO9F,QAAQrB,KAAKF,OAEzFqH,EAAOe,UAAUvI,UAAUhJ,QAC7BM,KAAK4E,YAAY+D,GAAG,YAAW,SAAGE,GAAyD,OAAAhF,EAAKjB,KAAKkG,IAAG,WACtG,OAAAoH,EAAOe,UAAUlI,KAAKF,OAEtBqH,EAAOgB,QAAQxI,UAAUhJ,QAC3BM,KAAK4E,YAAY+D,GAAG,OAAM,SAAGE,GAAyD,OAAAhF,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAOgB,QAAQnI,KAAKF,OAE5HqH,EAAOiB,QAAQzI,UAAUhJ,QAC3BM,KAAK4E,YAAY+D,GAAG,UAAS,SAAGE,GAAyD,OAAAhF,EAAKjB,KAAKkG,IAAG,WACpG,OAAAoH,EAAOiB,QAAQpI,KAAKF,OAEpBqH,EAAOkB,YAAY1I,UAAUhJ,QAC/BM,KAAK4E,YAAY+D,GAAG,cAAa,SAAGE,GAAyD,OAAAhF,EAAKjB,KAAKkG,IAAG,WACxG,OAAAoH,EAAOkB,YAAYrI,KAAKF,OAExBqH,EAAOmB,OAAO3I,UAAUhJ,QAC1BM,KAAK4E,YAAY+D,GAAG,SAAQ,SAAGE,GAAyD,OAAAhF,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAOmB,OAAOtI,KAAKF,OAE7HqH,EAAOoB,UAAU5I,UAAUhJ,QAC7BM,KAAK4E,YAAY+D,GAAG,YAAW,SAAGE,GAAyD,OAAAhF,EAAKjB,KAAKkG,IAAG,WACtG,OAAAoH,EAAOoB,UAAUvI,KAAKF,OAEtBqH,EAAOqB,WAAW7I,UAAUhJ,QAC9BM,KAAK4E,YAAY+D,GAAG,aAAY,SAAGE,GAA4B,OAAAhF,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAOqB,WAAWxI,KAAKF,OAExGqH,EAAOsB,SAAS9I,UAAUhJ,QAC5BM,KAAK4E,YAAY+D,GAAG,QAAO,SAAGE,GAA4B,OAAAhF,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAOsB,SAASzI,KAAKF,OAEjGqH,EAAOuB,SAAS/I,UAAUhJ,QAC5BM,KAAK4E,YAAY+D,GAAG,WAAU,SAAGE,GAA4B,OAAAhF,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAOuB,SAAS1I,KAAKF,OAEpGqH,EAAOwB,aAAahJ,UAAUhJ,QAChCM,KAAK4E,YAAY+D,GAAG,eAAc,SAAGE,GAAkC,OAAAhF,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAOwB,aAAa3I,KAAKF,OAElHqH,EAAOyB,WAAWjJ,UAAUhJ,QAC9BM,KAAK4E,YAAY+D,GAAG,aAAY,SAAGE,GAAkC,OAAAhF,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAOyB,WAAW5I,KAAKF,OAE9GqH,EAAO0B,cAAclJ,UAAUhJ,QACjCM,KAAK4E,YAAY+D,GAAG,gBAAe,SAAGE,GAAkC,OAAAhF,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAO0B,cAAc7I,KAAKF,OAEpHqH,EAAO2B,iBAAiBnJ,UAAUhJ,QACpCM,KAAK4E,YAAY+D,GAAG,mBAAkB,WAAQ,OAAA9E,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAO2B,iBAAiB9I,WAExFmH,EAAO4B,qBAAqBpJ,UAAUhJ,QACxCM,KAAK4E,YAAY+D,GAAG,uBAAsB,WAAQ,OAAA9E,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAO4B,qBAAqB/I,WAEhGmH,EAAO6B,OAAOrJ,UAAUhJ,QAC1BM,KAAK4E,YAAY+D,GAAG,SAAQ,WAAQ,OAAA9E,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAO6B,OAAOhJ,WAEpEmH,EAAO/D,MAAMzD,UAAUhJ,QACzBM,KAAK4E,YAAY+D,GAAG,QAAO,SAAGE,GAA6B,OAAAhF,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAO/D,MAAMpD,KAAKF,OAE/FqH,EAAO5D,KAAK5D,UAAUhJ,QACxBM,KAAK4E,YAAY+D,GAAG,OAAM,SAAGE,GAA4B,OAAAhF,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAO5D,KAAKvD,KAAKF,OAE5FqH,EAAO8B,UAAUtJ,UAAUhJ,QAC7BM,KAAK4E,YAAY+D,GAAG,YAAW,SAAGE,GAA4B,OAAAhF,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAO8B,UAAUjJ,KAAKF,OAEtGqH,EAAO+B,WAAWvJ,UAAUhJ,QAC9BM,KAAK4E,YAAY+D,GAAG,aAAY,SAAGE,GAA4B,OAAAhF,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAO+B,WAAWlJ,KAAKF,OAExGqH,EAAOgC,YAAYxJ,UAAUhJ,QAC/BM,KAAK4E,YAAY+D,GAAG,cAAa,SAAGE,GAA4B,OAAAhF,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAOgC,YAAYnJ,KAAKF,OAE1GqH,EAAOiC,iBAAiBzJ,UAAUhJ,QACpCM,KAAK4E,YAAY+D,GAAG,mBAAkB,SAAGE,GAA4B,OAAAhF,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAOiC,iBAAiBpJ,KAAKF,OAEpHqH,EAAOkC,kBAAkB1J,UAAUhJ,QACrCM,KAAK4E,YAAY+D,GAAG,oBAAmB,SAAGE,GAA4B,OAAAhF,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAOkC,kBAAkBrJ,KAAKF,OAEtHqH,EAAOmC,kBAAkB3J,UAAUhJ,QACrCM,KAAK4E,YAAY+D,GAAE,oBAAyB,SAAGE,GAAsB,OAAAhF,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAOmC,kBAAkBtJ,KAAKF,OAErHqH,EAAOoC,KAAK5J,UAAUhJ,QACxBM,KAAK4E,YAAY+D,GAAG,OAAM,WAAQ,OAAA9E,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAOoC,KAAKvJ,YAK9DpG,EAAA/C,UAAAR,OAAR,SAAemT,EAAUC,EAAW9R,GAKlC,GAJoB,iBAAT8R,IAETA,EAAOA,EAAKC,MAAM,MAEhBD,EAAK9S,OAAS,EAAG,KACbmB,EAAI2R,EAAKE,QACf1S,KAAKZ,OAAOmT,EAAI1R,GAC6B,oBAA3C1B,OAAOS,UAAU+S,SAAS7S,KAAKyS,EAAI1R,IAC/B0R,EAAI1R,GACJ,GACJ2R,EACA9R,QAEF6R,EAAIC,EAAK,IAAM9R,uBA3pBpBkS,EAAAA,sDAnE0D1D,EAAAA,uCAqFtD2D,EAAAA,UAAQ,CAAAC,KAAIC,EAAAA,OAAMC,KAAA,CAACvQ,YACgCI,EAAqBoQ,WAAA,CAAA,CAAAH,KAAxED,EAAAA,cA2oBLlQ,KChuBAuQ,EAAA,WAYE,SAAAA,EACUC,GAAAnT,KAAAmT,UAAAA,EAeZ,OAXED,EAAAtT,UAAAwT,MAAA,WACE,OAAOpT,KAAKmT,WAGdD,EAAAtT,UAAAyT,SAAA,WACE,OAAOrT,KAAKmT,UAAoB,WAAEG,YAAYtT,KAAKmT,YAGrDD,EAAAtT,UAAA2T,mBAAA,WACE,MAAO,aAEXL,EA5BA,gBA2CE,SAAAM,EACU7Q,GAAA3C,KAAA2C,WAAAA,EAiBZ,OAdE6Q,EAAA5T,UAAA6T,mBAAA,WAAA,IAAA5P,EAAA7D,KACMA,KAAK0T,QAAQC,cAAc/J,WAAWlK,SACxCM,KAAK4L,QAAU,IAAIsH,EAAclT,KAAK0T,QAAQC,eAC9C3T,KAAK2C,WAAWa,YAAYS,UAAS,WACnCJ,EAAKlB,WAAWgJ,WAAW9H,EAAY,QAAGA,EAAKgI,cAKrD2H,EAAA5T,UAAAgU,YAAA,WACM5T,KAAK4L,SACP5L,KAAK2C,WAAWmJ,cAAc9L,KAAK4L,8BA5BxCiI,EAAAA,UAASb,KAAA,CAAC,CACTc,SAAU,cACVC,SAAU,sEACVC,gBAAiBC,EAAAA,wBAAwBC,oDAjClCvR,uCAqCNwR,EAAAA,uBAEAC,EAAAA,UAASpB,KAAA,CAAC,cAsBbQ,KC9DAa,EAAA,WAaE,SAAAA,EACU1R,EACQ6Q,GADRxT,KAAA2C,WAAAA,EACQ3C,KAAAwT,iBAAAA,EAmBpB,OAhBEa,EAAAzU,UAAA6T,mBAAA,WAAA,IAAA5P,EAAA7D,KACEA,KAAK2C,WAAWa,YAAYS,UAAS,WACnC,GAAIJ,EAAK2P,iBAAiB5H,QACxB,MAAM,IAAI0I,MAAM,uDAEZ1Q,EAAwE,GAC1EC,EAAK0Q,UAAY9P,YACnBb,EAAQ2Q,QAAU1Q,EAAK0Q,SAErB1Q,EAAK2Q,oBAAsB/P,YAC7Bb,EAAQ4Q,kBAAoB3Q,EAAK2Q,mBAEnC3Q,EAAK2P,iBAAiB5H,QAAU,IAAI6I,EAAAA,mBAAmB7Q,GACvDC,EAAKlB,WAAWgJ,WAAW9H,EAAK2P,iBAAiB5H,QAAS/H,EAAK2P,iBAAiB3H,iCA1BrF6I,EAAAA,UAAS1B,KAAA,CAAC,CACTc,SAAU,gEAJHnR,SACA6Q,EAAgBP,WAAA,CAAA,CAAAH,KAYpB6B,EAAAA,2CALFR,EAAAA,iCACAA,EAAAA,SAuBHE,EAlCA,GCAAO,EAAA,WAYE,SAAAA,EACUjS,EACQ6Q,GADRxT,KAAA2C,WAAAA,EACQ3C,KAAAwT,iBAAAA,EAiBpB,OAdEoB,EAAAhV,UAAA6T,mBAAA,WAAA,IAAA5P,EAAA7D,KACEA,KAAK2C,WAAWa,YAAYS,UAAS,WACnC,GAAIJ,EAAK2P,iBAAiB5H,QACxB,MAAM,IAAI0I,MAAM,uDAEZ1Q,EAAuC,GACzCC,EAAKsP,YAAc1O,YACrBb,EAAQuP,UAAYtP,EAAKsP,WAG3BtP,EAAK2P,iBAAiB5H,QAAU,IAAIiJ,EAAAA,kBAAkBjR,GACtDC,EAAKlB,WAAWgJ,WAAW9H,EAAK2P,iBAAiB5H,QAAS/H,EAAK2P,iBAAiB3H,iCAvBrF6I,EAAAA,UAAS1B,KAAA,CAAC,CACTc,SAAU,+DAJHnR,SACA6Q,EAAgBP,WAAA,CAAA,CAAAH,KAWpB6B,EAAAA,6CAJFR,EAAAA,SAqBHS,EA/BA,GCqBaE,EAA0B,IAAIpS,EAAAA,eAAe,6BAuDxD,SAAAqS,EACUpS,EACAC,EACQ4Q,EAC8CsB,GAHtD9U,KAAA2C,WAAAA,EACA3C,KAAA4C,KAAAA,EACQ5C,KAAAwT,iBAAAA,EAC8CxT,KAAA8U,wBAAAA,EAdtD9U,KAAAgV,MAAQ,IAAIC,EAAAA,aACZjV,KAAAkV,QAAU,IAAID,EAAAA,aACdjV,KAAAmV,QAAU,IAAIF,EAAAA,aACdjV,KAAAe,OAAS,IAAIkU,EAAAA,aACbjV,KAAAmM,MAAQ,IAAI8I,EAAAA,aA+FxB,OAlFEF,EAAAnV,UAAA6T,mBAAA,WAAA,IAAA5P,EAAA7D,KACEA,KAAK2C,WAAWa,YAAYS,UAAS,WACnC,GAAIJ,EAAK2P,iBAAiB5H,QACxB,MAAM,IAAI0I,MAAM,uDAEZ1Q,EAAU,CACdwR,UAAWvR,EAAKuR,UAChBC,QAASxR,EAAKwR,QACdC,YAAazR,EAAKyR,YAClB9N,KAAM3D,EAAK2D,KACXkH,KAAM7K,EAAK6K,KACX6G,MAAO1R,EAAK0R,MACZC,MAAO3R,EAAK2R,MACZC,UAAW5R,EAAK4R,UAChBC,MAAO7R,EAAK6R,MACZC,SAAU9R,EAAK8R,SACfvI,OAAQvJ,EAAKuJ,OACbwI,cAAe/R,EAAK+R,cACpBzR,YAAaN,EAAKM,aAAeN,EAAKiR,yBAGxC3V,OAAOgJ,KAAKvE,GAASyE,QAAO,SAAEC,OACtBC,EAAI,EACN3E,EAAQ2E,KAAU9D,kBACbb,EAAQ2E,KAGnB1E,EAAKgS,SAAW,IAAIC,EAAelS,GACnCC,EAAKU,WAAWV,GAChBA,EAAK8H,eAEH3L,KAAK+V,aACP/V,KAAK2C,WAAWe,WAAWO,UAAS,WAClCJ,EAAKgS,SAASG,MAAMnS,EAAKkS,gBAK/BhB,EAAAnV,UAAAqW,YAAA,SAAYC,GACLlW,KAAK6V,WAGNK,EAAQd,YAAcc,EAAQd,UAAUe,iBAC1CnW,KAAK6V,SAASO,aAAaF,EAAQd,UAAUiB,cAE3CH,EAAQH,aACV/V,KAAK6V,SAASG,MAAMhW,KAAK+V,eAIrBhB,EAAAnV,UAAA+L,WAAR,WACE3L,KAAKwT,iBAAiB5H,QAAU5L,KAAK6V,SACrC7V,KAAK2C,WAAWgJ,WACd3L,KAAKwT,iBAAiB5H,QACtB5L,KAAKwT,iBAAiB3H,WAIlBkJ,EAAAnV,UAAA2E,WAAR,SAAmB2L,GAAnB,IAAArM,EAAA7D,KACMkQ,EAAOiF,QAAQzM,UAAUhJ,QAC3BM,KAAK6V,SAASlN,GAAG,UAAS,SAAGE,GAAiB,OAAAhF,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAOiF,QAAQpM,KAAKF,OAEpFqH,EAAOnP,OAAO2H,UAAUhJ,QAC1BM,KAAK6V,SAASlN,GAAG,SAAQ,SAAGE,GAEtBhF,EAAKyS,eAAiBzN,EAAI9H,OAAO6H,KACnC/E,EAAKyS,aAAezN,EAAI9H,OAAO6H,GAC/B/E,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAOnP,OAAOgI,KAAKF,QAIzCqH,EAAO/D,MAAMzD,UAAUhJ,QACzBM,KAAK6V,SAASlN,GAAG,QAAO,SAAGE,GAAa,OAAAhF,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAO/D,MAAMpD,KAAKF,OAE5EqH,EAAOgF,QAAQxM,UAAUhJ,QAC3BM,KAAK6V,SAASlN,GAAG,UAAS,SAAGE,GAA2B,OAAAhF,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAOgF,QAAQnM,KAAKF,OAE9FqH,EAAO8E,MAAMtM,UAAUhJ,QACzBM,KAAK6V,SAASlN,GAAG,QAAO,WAAQ,OAAA9E,EAAKjB,KAAKkG,IAAG,WAAO,OAAAoH,EAAO8E,MAAMjM,gCArHtE2L,EAAAA,UAAS1B,KAAA,CAAC,CACTc,SAAU,6DA/BHnR,SANPuM,EAAAA,cAQOsE,EAAgBP,WAAA,CAAA,CAAAH,KA+DpB6B,EAAAA,uCACA9B,EAAAA,UAAQ,CAAAC,KAAIC,EAAAA,OAAMC,KAAA,CAAC8B,yCA/BrBX,EAAAA,2BACAA,EAAAA,oBACAA,EAAAA,oBACAA,EAAAA,qBACAA,EAAAA,qBACAA,EAAAA,yBACAA,EAAAA,qBACAA,EAAAA,wBACAA,EAAAA,2BACAA,EAAAA,sBACAA,EAAAA,6BACAA,EAAAA,yBAGAA,EAAAA,2BACAA,EAAAA,qBAEAoC,EAAAA,wBACAA,EAAAA,wBACAA,EAAAA,uBACAA,EAAAA,sBACAA,EAAAA,UA+FHxB,KCrKAyB,EAAA,WAeE,SAAAA,EACU7T,EACQ6Q,GADRxT,KAAA2C,WAAAA,EACQ3C,KAAAwT,iBAAAA,EA0BpB,OAvBEgD,EAAA5W,UAAA6T,mBAAA,WAAA,IAAA5P,EAAA7D,KACEA,KAAK2C,WAAWa,YAAYS,UAAS,WACnC,GAAIJ,EAAK2P,iBAAiB5H,QACxB,MAAM,IAAI0I,MAAM,uDAEZ1Q,EAAU,CACd6S,gBAAiB5S,EAAK4S,gBACtBC,iBAAkB7S,EAAK6S,iBACvBC,kBAAmB9S,EAAK8S,kBACxBC,iBAAkB/S,EAAK+S,kBAGzBzX,OAAOgJ,KAAKvE,GACTyE,QAAO,SAAEC,OACFC,EAAI,EACN3E,EAAQ2E,KAAU9D,kBACbb,EAAQ2E,KAGrB1E,EAAK2P,iBAAiB5H,QAAU,IAAIiL,EAAAA,iBAAiBjT,GACrDC,EAAKlB,WAAWgJ,WAAW9H,EAAK2P,iBAAiB5H,QAAS/H,EAAK2P,iBAAiB3H,iCAnCrF6I,EAAAA,UAAS1B,KAAA,CAAC,CACTc,SAAU,8DAJHnR,SACA6Q,EAAgBP,WAAA,CAAA,CAAAH,KAcpB6B,EAAAA,mDAPFR,EAAAA,gCACAA,EAAAA,iCACAA,EAAAA,gCACAA,EAAAA,SA8BHqC,EA3CA,GCAAM,EAAA,WAaE,SAAAA,EACUnU,EACQ6Q,GADRxT,KAAA2C,WAAAA,EACQ3C,KAAAwT,iBAAAA,EAmBpB,OAhBEsD,EAAAlX,UAAA6T,mBAAA,WAAA,IAAA5P,EAAA7D,KACEA,KAAK2C,WAAWa,YAAYS,UAAS,WACnC,GAAIJ,EAAK2P,iBAAiB5H,QACxB,MAAM,IAAI0I,MAAM,uDAEZ1Q,EAAyD,GAC3DC,EAAKkT,cAAgBtS,YACvBb,EAAQmT,YAAclT,EAAKkT,aAEzBlT,EAAKmT,WAAavS,YACpBb,EAAQoT,SAAWnT,EAAKmT,UAE1BnT,EAAK2P,iBAAiB5H,QAAU,IAAIqL,EAAAA,kBAAkBrT,GACtDC,EAAKlB,WAAWgJ,WAAW9H,EAAK2P,iBAAiB5H,QAAS/H,EAAK2P,iBAAiB3H,iCA1BrF6I,EAAAA,UAAS1B,KAAA,CAAC,CACTc,SAAU,+DAJHnR,SACA6Q,EAAgBP,WAAA,CAAA,CAAAH,KAYpB6B,EAAAA,+CALFR,EAAAA,wBACAA,EAAAA,SAuBH2C,EAlCA,GCAAI,EAAA,WAeE,SAAAA,EACUvU,EACQ6Q,GADRxT,KAAA2C,WAAAA,EACQ3C,KAAAwT,iBAAAA,EAyBpB,OAtBE0D,EAAAtX,UAAAqW,YAAA,SAAYC,GACNA,EAAQiB,OAASjB,EAAQiB,KAAKhB,iBAC1BnW,KAAKwT,iBAAwB,QAAE4D,QAAQlB,EAAQiB,KAAKd,eAI9Da,EAAAtX,UAAA6T,mBAAA,WAAA,IAAA5P,EAAA7D,KACEA,KAAK2C,WAAWa,YAAYS,UAAS,WACnC,GAAIJ,EAAK2P,iBAAiB5H,QACxB,MAAM,IAAI0I,MAAM,uDAEZ1Q,EAAgD,GAClDC,EAAKwT,WAAa5S,YACpBb,EAAQyT,SAAWxT,EAAKwT,UAEtBxT,EAAKsT,OAAS1S,YAChBb,EAAQuT,KAAOtT,EAAKsT,MAEtBtT,EAAK2P,iBAAiB5H,QAAU,IAAI0L,EAAAA,aAAa1T,GACjDC,EAAKlB,WAAWgJ,WAAW9H,EAAK2P,iBAAiB5H,QAAS/H,EAAK2P,iBAAiB3H,iCAlCrF6I,EAAAA,UAAS1B,KAAA,CAAC,CACTc,SAAU,0DAJHnR,SACA6Q,EAAgBP,WAAA,CAAA,CAAAH,KAcpB6B,EAAAA,4CAPFR,EAAAA,oBAGAA,EAAAA,SA6BH+C,EA1CA,GCAAK,EAAA,WAkEE,SAAAA,EACU5U,GAAA3C,KAAA2C,WAAAA,EATA3C,KAAAyI,MAAQ,IAAIwM,EAAAA,aACZjV,KAAAgJ,WAAa,IAAIiM,EAAAA,aACjBjV,KAAAiJ,WAAa,IAAIgM,EAAAA,aACjBjV,KAAAkJ,UAAY,IAAI+L,EAAAA,aAElBjV,KAAAwX,YAAa,EA0EvB,OAnEED,EAAA3X,UAAA6X,SAAA,WAAA,IAAA5T,EAAA7D,KACEA,KAAK0X,IAAM1X,KAAK2C,WAAWe,WAAWK,KACpC4T,EAAAA,UAAS,WAAO,OAAAC,EAAAA,UAAe/T,EAAKlB,WAAsB,YAAE,aAAaoB,KACvE8T,EAAAA,OAAM,GACNzK,EAAAA,OAAM,WAAO,OAACvJ,EAAKlB,WAAWiC,YAAYkT,SAASjU,EAAK+E,MACxDmP,EAAAA,WAAU,OAEZ9T,UAAS,SAAEgE,GAAwB,OAAApE,EAAKmU,KAAK/P,MAGjDsP,EAAA3X,UAAAqW,YAAA,SAAYC,GACLlW,KAAKwX,aAGNtB,EAAQpJ,QAAUoJ,EAAQpJ,MAAMqJ,iBAClCnW,KAAK2C,WAAWkK,yBAAyB7M,KAAK4I,GAAIsN,EAAQpJ,MAAkB,cAE1EoJ,EAAQjJ,SAAWiJ,EAAQjJ,OAAOkJ,iBACpCnW,KAAK2C,WAAWqK,0BAA0BhN,KAAK4I,GAAIsN,EAAQjJ,OAAmB,cAE5EiJ,EAAQ9I,SAAW8I,EAAQ9I,OAAO+I,iBACpCnW,KAAK2C,WAAWwK,eAAenN,KAAK4I,GAAIsN,EAAQ9I,OAAmB,cAEjE8I,EAAQhO,SAAWgO,EAAQhO,OAAOiO,iBACpCnW,KAAK2C,WAAW2K,eAAetN,KAAK4I,GAAIsN,EAAQhO,OAAmB,eAGnEgO,EAAQ+B,UAAY/B,EAAQ+B,QAAQ9B,iBACpCD,EAAQgC,UAAYhC,EAAQgC,QAAQ/B,kBAEpCnW,KAAK2C,WAAW8K,kBAAkBzN,KAAK4I,GAAI5I,KAAKiY,QAASjY,KAAKkY,WAIlEX,EAAA3X,UAAAgU,YAAA,WACM5T,KAAKwX,YACPxX,KAAK2C,WAAWwG,YAAYnJ,KAAK4I,IAE/B5I,KAAK0X,KACP1X,KAAK0X,IAAI7S,eAIL0S,EAAA3X,UAAAoY,KAAR,SAAa/P,OACLD,EAAQ,CACZI,aAAc,CACZQ,GAAI5I,KAAK4I,GACTkK,KAAM9S,KAAK8S,KACXpG,OAAQ1M,KAAK0M,OACbyL,SAAUnY,KAAKmY,SACfC,eAAgBpY,KAAKqY,YACrBJ,QAASjY,KAAKiY,QACdC,QAASlY,KAAKkY,QACd9K,OAAQpN,KAAKoN,OACbH,OAAQjN,KAAKiN,OACbH,MAAO9M,KAAK8M,OAEdtE,YAAa,CACXC,MAAOzI,KAAKyI,MACZO,WAAYhJ,KAAKgJ,WACjBC,WAAYjJ,KAAKiJ,WACjBC,UAAWlJ,KAAKkJ,YAGpBlJ,KAAK2C,WAAWoF,SAASC,EAAOC,EAAYjI,KAAKkI,QACjDlI,KAAKwX,YAAa,uBAjGrB3D,EAAAA,UAASb,KAAA,CAAC,CACTc,SAAU,YACVC,SAAU,gDAJHpR,iCAQNwR,EAAAA,sBACAA,EAAAA,oBACAA,EAAAA,wBACAA,EAAAA,2BACAA,EAAAA,sBAGAA,EAAAA,sBACAA,EAAAA,qBACAA,EAAAA,sBACAA,EAAAA,uBACAA,EAAAA,uBACAA,EAAAA,qBAEAoC,EAAAA,2BACAA,EAAAA,2BACAA,EAAAA,0BACAA,EAAAA,UA4EHgB,EAzIA,GCAAe,EAAA,WAiDE,SAAAA,EACU3V,GAAA3C,KAAA2C,WAAAA,EATA3C,KAAAgK,UAAY,IAAIiL,EAAAA,aAChBjV,KAAAmK,KAAO,IAAI8K,EAAAA,aACXjV,KAAAoK,QAAU,IAAI6K,EAAAA,aAiE1B,OAvDEqD,EAAA1Y,UAAA6X,SAAA,WACE,GAAIzX,KAAKsK,SAAWtK,KAAKqK,OACvB,MAAM,IAAIiK,MAAM,oDAIpBgE,EAAA1Y,UAAAqW,YAAA,SAAYC,GACNA,EAAQ7L,SAAW6L,EAAQ7L,OAAO8L,iBACpCnW,KAAmB,eAAEuK,UAAUvK,KAAW,QAExCkW,EAAQ5L,UAAY4L,EAAQ5L,QAAQ6L,iBACtCnW,KAAmB,eAAEuK,UAA4BvK,KAAY,QAAU,SAAa,aAElFkW,EAAQxM,YAAcwM,EAAQxM,UAAUyM,iBAC1CnW,KAAmB,eAAEuY,eAAevY,KAAK0J,WAEvCwM,EAAQsC,aAAetC,EAAQsC,WAAWrC,kBAC5CD,EAAQsC,WAAWnC,aACfrW,KAAmB,eAAEyY,WAAWjO,MAAMxK,KAAK2C,WAAWiC,aACtD5E,KAAmB,eAAEyY,WAAW3T,WAIxCwT,EAAA1Y,UAAA8Y,gBAAA,WAAA,IAAA7U,EAAA7D,KACEA,KAAK2C,WAAWa,YAAYS,UAAS,WACnCJ,EAAKgG,eAAiBhG,EAAKlB,WAAW0G,UAAU,CAC9CG,eAAgB,CACdD,OAAQ1F,EAAK0F,OACbE,OAAQ5F,EAAK4F,OACbC,YAAa7F,EAAK6F,UAClBC,QAAS9F,EAAK6P,QAAQC,cACtBrJ,QAASzG,EAAKyG,QACdD,OAAQxG,EAAKwG,QAEfN,cAAe,CACbC,UAAWnG,EAAKmG,UAChBG,KAAMtG,EAAKsG,KACXC,QAASvG,EAAKuG,cAMtBkO,EAAA1Y,UAAAgU,YAAA,WACE5T,KAAK2C,WAAW8H,aAAazK,KAAmB,gBAChDA,KAAK6J,eAAiBpF,WAGxB6T,EAAA1Y,UAAA+Y,YAAA,WACE3Y,KAAmB,eAAE2Y,eAGvBL,EAAA1Y,UAAAgZ,kBAAA,SAAkBC,GAChB7Y,KAAmB,eAAEuK,UAAS,wBAxFjCsJ,EAAAA,UAASb,KAAA,CAAC,CACTc,SAAU,aACVC,SAAU,oEAMV+E,cAAeC,EAAAA,kBAAkBC,KACjChF,gBAAiBC,EAAAA,wBAAwBC,eANhC,2GALFvR,qCAeNwR,EAAAA,sBACAA,EAAAA,uBAGAA,EAAAA,sBACAA,EAAAA,yBACAA,EAAAA,0BACAA,EAAAA,yBACAA,EAAAA,yBAEAoC,EAAAA,qBACAA,EAAAA,wBACAA,EAAAA,wBAEAnC,EAAAA,UAASpB,KAAA,CAAC,cA+DbsF,EA5GA,gBCgCE,SAAAW,EACUtW,EACAC,GADA5C,KAAA2C,WAAAA,EACA3C,KAAA4C,KAAAA,EARV5C,KAAAkZ,kBAAoB,IAAIC,EAAAA,QAEhBnZ,KAAA0X,IAAM,IAAInU,EAAAA,aACVvD,KAAAoZ,aAAc,EACdpZ,KAAAqZ,iBAAmB,EAyJ7B,OAlJEJ,EAAArZ,UAAA6X,SAAA,WAAA,IAAA5T,EAAA7D,KACOA,KAAKsM,OACRtM,KAAKsM,KAAO,CACVwG,KAAM,oBACNwG,SAAU,KAGdtZ,KAAK2C,WAAWe,WAAWO,UAAS,WAClCJ,EAAKmU,WACCN,EAAME,EAAAA,UAAe/T,EAAKlB,WAAsB,YAAE,aAAaoB,KACnEqJ,EAAAA,OAAM,WAAO,OAACvJ,EAAKlB,WAAWiC,YAAY+H,UAAU9I,EAAK+E,OACzD3E,UAAS,WACTJ,EAAKmU,SAEPnU,EAAK6T,IAAI5H,IAAI4H,MAIjBuB,EAAArZ,UAAAqW,YAAA,SAAYC,GACLlW,KAAKoZ,eAIRlD,EAAQgC,UAAYhC,EAAQgC,QAAQ/B,iBACpCD,EAAQ+B,UAAY/B,EAAQ+B,QAAQ9B,iBACpCD,EAAQqD,SAAWrD,EAAQqD,OAAOpD,iBAClCD,EAAQsD,YAActD,EAAQsD,UAAUrD,iBACxCD,EAAQuD,UAAYvD,EAAQuD,QAAQtD,iBACpCD,EAAQwD,gBAAkBxD,EAAQwD,cAAcvD,iBAChDD,EAAQyD,iBAAmBzD,EAAQyD,eAAexD,iBAClDD,EAAQ0D,oBAAsB1D,EAAQ0D,kBAAkBzD,mBAExDnW,KAAK4T,cACL5T,KAAKyX,YAEHvB,EAAQ5J,OAAS4J,EAAQ5J,KAAK6J,iBACjBnW,KAAK2C,WAAWgK,UAAyB3M,KAAK4I,IACtDiR,QAAQ7Z,KAAS,QAI5BiZ,EAAArZ,UAAAgU,YAAA,WACE5T,KAAK0X,IAAI7S,cACL7E,KAAKoZ,aACPpZ,KAAK2C,WAAWiK,aAAa5M,KAAK4I,KAQhCqQ,EAAArZ,UAAAka,wBAAN,SAA8BC,iFAE5B,OADMrN,EAAS1M,KAAK2C,WAAWgK,UAAyB3M,KAAK4I,IAC7D,CAAA,EAAO5I,KAAK4C,KAAKkG,IAAG,WAAC,OAAA7I,EAAA4D,OAAA,OAAA,EAAA,qCACnB,MAAA,CAAA,EAAO,IAAIvD,QAAO,SAAUC,EAASC,GACnCkM,EAAOoN,wBAAwBC,EAAS,SAAG5N,EAAO3E,GAC5C2E,EACF3L,EAAO2L,GAEP5L,EAAQiH,oBAWZyR,EAAArZ,UAAAoa,mBAAN,SAAyBD,iFAEvB,OADMrN,EAAS1M,KAAK2C,WAAWgK,UAAyB3M,KAAK4I,IAC7D,CAAA,EAAO5I,KAAK4C,KAAKkG,IAAG,WAAC,OAAA7I,EAAA4D,OAAA,OAAA,EAAA,qCACnB,MAAA,CAAA,EAAO,IAAIvD,QAAO,SAAuCC,EAASC,GAChEkM,EAAOsN,mBAAmBD,EAAS,SAAG5N,EAAOmN,GACvCnN,EACF3L,EAAO2L,GAEP5L,EAAQ+Y,oBAaZL,EAAArZ,UAAAqa,iBAAN,SAAuBF,EAAmBrE,EAAenM,iFAEvD,OADMmD,EAAS1M,KAAK2C,WAAWgK,UAAyB3M,KAAK4I,IAC7D,CAAA,EAAO5I,KAAK4C,KAAKkG,IAAG,WAAC,OAAA7I,EAAA4D,OAAA,OAAA,EAAA,qCACnB,MAAA,CAAA,EAAO,IAAIvD,QAAO,SAAuCC,EAASC,GAChEkM,EAAOuN,iBAAiBF,EAAWrE,EAAOnM,EAAM,SAAG4C,EAAOmN,GACpDnN,EACF3L,EAAO2L,GAEP5L,EAAQ+Y,oBAOlBL,EAAArZ,UAAAsa,YAAA,SAAY5P,GAC4DtK,KAAS,KACpEsZ,SAASjX,KAAKiI,GACzBtK,KAAKkZ,kBAAkBtY,QAGzBqY,EAAArZ,UAAAua,eAAA,SAAe7P,OACP8P,EAAgEpa,KAAS,KACzEqa,EAAQD,EAAWd,SAASgB,QAAQhQ,GACtC+P,GAAS,GACXD,EAAWd,SAASiB,OAAOF,EAAO,GAEpCra,KAAKkZ,kBAAkBtY,QAGzBqY,EAAArZ,UAAA4a,iBAAA,WACE,QAASxa,KAAKqZ,kBAGRJ,EAAArZ,UAAAoY,KAAR,WAAA,IAAAnU,EAAA7D,KACEA,KAAK2C,WAAW6J,UAAUxM,KAAK4I,GAAE,CAC/BkK,KAAM,UACNxG,KAAMtM,KAAKsM,KACX4L,QAASlY,KAAKkY,QACdD,QAASjY,KAAKiY,QACdsB,OAAQvZ,KAAKuZ,OACbC,UAAWxZ,KAAKwZ,UAChBC,QAASzZ,KAAKyZ,QACdC,cAAe1Z,KAAK0Z,cACpBC,eAAgB3Z,KAAK2Z,eACrBC,kBAAmB5Z,KAAK4Z,wBAEpBlC,EAAM1X,KAAKkZ,kBAAkBnV,KAAK0W,EAAAA,aAAa,IAAIxW,UAAS,WACjDJ,EAAKlB,WAAWgK,UAAyB9I,EAAK+E,IACtDiR,QAAQhW,EAAS,QAE1B7D,KAAK0X,IAAI5H,IAAI4H,GACb1X,KAAKoZ,aAAc,uBA/KtBvF,EAAAA,UAASb,KAAA,CAAC,CACTc,SAAU,qBACVC,SAAU,GACVC,gBAAiBC,EAAAA,wBAAwBC,oDALlCvR,SAJwFuM,EAAAA,sCAa9FiF,EAAAA,oBAGAA,EAAAA,uBACAA,EAAAA,uBACAA,EAAAA,sBACAA,EAAAA,yBACAA,EAAAA,uBACAA,EAAAA,6BACAA,EAAAA,8BACAA,EAAAA,iCACAA,EAAAA,SA+JH8E,KCvLAyB,EAAA,WAiBE,SAAAA,EAC4DzB,GAAAjZ,KAAAiZ,uBAAAA,EAL5DjZ,KAAA8S,KAAkB,UA6BpB,OArBE4H,EAAA9a,UAAA6X,SAAA,WACOzX,KAAK4I,KACR5I,KAAK4I,GAAK5I,KAAKiZ,uBAAuBuB,oBAExCxa,KAAKsK,QAAU,CACbwI,KAAM9S,KAAK8S,KACX6H,SAAU3a,KAAK2a,SACfC,WAAY5a,KAAK4a,WAAa5a,KAAK4a,WAAa,IAElD5a,KAAKsK,QAAQ1B,GAAK5I,KAAK4I,GACvB5I,KAAKiZ,uBAAuBiB,YAAYla,KAAKsK,UAG/CoQ,EAAA9a,UAAAgU,YAAA,WACE5T,KAAKiZ,uBAAuBkB,eAAena,KAAKsK,UAGlDoQ,EAAA9a,UAAAgZ,kBAAA,SAAkBC,GACA7Y,KAAKsK,QAAgB,SAAEuO,YAAcA,EACrD7Y,KAAKiZ,uBAAuBC,kBAAkBtY,4BArCjDiT,EAAAA,UAASb,KAAA,CAAC,CACTc,SAAU,cACVC,SAAU,GACVC,gBAAiBC,EAAAA,wBAAwBC,oDALlC+E,EAAsBhG,WAAA,CAAA,CAAAH,KAiB1BC,EAAAA,OAAMC,KAAA,CAAC6H,EAAAA,WAAU,WAAO,OAAA5B,sCAR1B9E,EAAAA,wBACAA,EAAAA,0BACAA,EAAAA,SA8BHuG,EA1CA,GCAAI,EAAA,WAgCE,SAAAA,EACUnY,EACAuM,EACoBwL,EACApC,GAHpBtY,KAAA2C,WAAAA,EACA3C,KAAAkP,OAAAA,EACoBlP,KAAA0a,iBAAAA,EACA1a,KAAAsY,gBAAAA,EAVpBtY,KAAAgK,UAAY,IAAIiL,EAAAA,aAChBjV,KAAAoK,QAAU,IAAI6K,EAAAA,aACdjV,KAAAmK,KAAO,IAAI8K,EAAAA,aAEbjV,KAAA+a,WAAkC,IAAIC,EAAAA,cAAc,GAwH9D,OA/GEF,EAAAlb,UAAA6X,SAAA,eACMwD,EACAC,EACAC,EACJ,GAAInb,KAAKsY,gBAAiB,CACxB8C,QAAQC,KAAK,yFACTC,EAA0Btb,KAAKsY,gBAAgB5E,QAAqB,cAClC,IAAlC4H,EAAcC,SAAS7b,SACzB4b,EAAgBA,EAAcC,SAAS,IAEzCN,EAASrD,EAAAA,UAAU0D,EAAe,cAClCJ,EAAStD,EAAAA,UAAU0D,EAAe,cAClCH,EAAenb,KAAKsY,gBAAgBM,kBAAkB4C,KAAKxb,KAAKsY,qBAC3D,CAAA,IAAItY,KAAK0a,mBAAoB1a,KAAKgI,MAQvC,MAAM,IAAIsM,MAAM,8EAJhB,GAHA2G,EAASjb,KAAKgI,MAAMgB,WACpBkS,EAASlb,KAAKgI,MAAMiB,WACpBkS,EAAenb,KAAK0a,iBAAiB9B,kBAAkB4C,KAAKxb,KAAK0a,kBACrB,UAAxC1a,KAAK0a,iBAAiBC,SAAS7H,KACjC,MAAM,IAAIwB,MAAM,2CAMpBtU,KAAKyb,gBAAgBR,EAAQC,EAAQC,IAGvCL,EAAAlb,UAAAgU,YAAA,WACE5T,KAAK+a,WAAWna,KAAK6D,WACrBzE,KAAK+a,WAAWrW,YAGVoW,EAAAlb,UAAA6b,gBAAR,SAAwBR,EAAyBC,EAAyBC,GAA1E,IAAAtX,EAAA7D,KACM0b,GAAS,EACTC,GAAS,EACb3b,KAAK2C,WAAWa,YAAYS,UAAS,eAC7B2X,EAAWhE,EAAAA,UAA8B/T,EAAKlB,WAAsB,YAAE,WACtEkZ,EAAaZ,EAAOlX,KACxB+X,EAAAA,UAAUjY,EAAKkX,YACf3N,EAAAA,OAAM,WAAO,OAACsO,IACdtO,EAAAA,OAAM,SAAEvE,GAAQ,OAAAhF,EAAKkY,cAAclT,KACnCmT,EAAAA,IAAG,WACDL,GAAS,EACT9X,EAAKlB,WAAWkE,mBAAmB,QACnChD,EAAKlB,WAAWwD,eAAc,KAEhCwR,EAAAA,UAAS,WACP,OAAAC,EAAAA,UAA8B/T,EAAKlB,WAAsB,YAAE,aACxDoB,KAAK+X,EAAAA,UAAUZ,OAGhBe,EAAYJ,EAAW9X,KAC3B4T,EAAAA,UAAS,WAAO,OAAAC,EAAAA,UAA8B/T,EAAKlB,WAAsB,YAAE,aACxEoB,KAAK+X,EAAAA,UAAUF,OAGdM,EAAWL,EAAW9X,KAC1B4T,EAAAA,UAAS,WAAO,OAAAiE,EAAS7X,KAAKoY,EAAAA,KAAK,OAErCN,EAAW5X,UAAS,SAAE4E,GACpB6S,GAAS,EACL7X,EAAKmG,UAAUtB,UAAUhJ,QAC3BmE,EAAKqL,OAAOpG,IAAG,WAAO,OAAAjF,EAAKmG,UAAUjB,KAAKF,OAG9CoT,EAAUhY,UAAS,SAAE4E,GACnBsS,EAAa,CAACtS,EAAIwB,OAAO+R,IAAKvT,EAAIwB,OAAOgS,MACrCxY,EAAKsG,KAAKzB,UAAUhJ,QACtBmE,EAAKqL,OAAOpG,IAAG,WAAO,OAAAjF,EAAKsG,KAAKpB,KAAKF,OAGzCqT,EAASjY,UAAS,SAAE4E,GAClB6S,GAAS,EACL7X,EAAKuG,QAAQ1B,UAAUhJ,QACzBmE,EAAKqL,OAAOpG,IAAG,WAAO,OAAAjF,EAAKuG,QAAQrB,KAAKF,KAErC8S,IACH9X,EAAKlB,WAAWkE,mBAAmB,IACnChD,EAAKlB,WAAWwD,eAAc,MAGlC+U,EAAOnX,KACL+X,EAAAA,UAAUjY,EAAKkX,YACfiB,EAAAA,IAAG,WAAO,OAAAL,GAAS,IACnBvO,EAAAA,OAAM,WAAO,OAACsO,KACdzX,UAAS,WACTJ,EAAKlB,WAAWkE,mBAAmB,IACnChD,EAAKlB,WAAWwD,eAAc,QAK5B2U,EAAAlb,UAAAmc,cAAR,SAAsBlT,GACpB,GAAI7I,KAAK0a,kBAAoB1a,KAAKgI,QACMhI,KAAK2C,WAAWqE,sBACpD6B,EAAIyT,MACJ,CACEC,OAAQ,CAACvc,KAAKgI,MAAMY,IACpBwE,OAAQ,CACN,MACA,CAAC,KAAM,QAAS,SAChB,CAAC,KAAM,MAAOpN,KAAK0a,iBAAiB9R,OAGxC,GAEA,OAAO,EAGX,OAAO,uBAjIV8L,EAAAA,UAAS1B,KAAA,CAAC,CACTc,SAAU,8DALHnR,SAVPuM,EAAAA,cAYOwL,EAAgBzH,WAAA,CAAA,CAAAH,KAkBpBD,EAAAA,UAAQ,CAAAC,KAAI6B,EAAAA,cAnBR2D,EAAerF,WAAA,CAAA,CAAAH,KAoBnBD,EAAAA,UAAQ,CAAAC,KAAI6B,EAAAA,yCAZdR,EAAAA,MAAKnB,KAAA,CAAC,mCAENuD,EAAAA,wBACAA,EAAAA,qBACAA,EAAAA,UA0HHuE,EAtJA,gBCoCE,SAAA0B,EACU7Z,EACAC,GADA5C,KAAA2C,WAAAA,EACA3C,KAAA4C,KAAAA,EATA5C,KAAAmM,MAAQ,IAAI8I,EAAAA,aACZjV,KAAAyc,OAAS,IAAIxH,EAAAA,aAEfjV,KAAA0c,SAAU,EACV1c,KAAA2c,UAAW,EAkErB,OA1DEH,EAAA5c,UAAA6X,SAAA,WAAA,IAAA5T,EAAA7D,KACEA,KAAK0X,IAAM1X,KAAK2C,WAAWe,WAAWK,KACpC4T,EAAAA,UAAS,WAAO,OAAAC,EAAAA,UAAe/T,EAAKlB,WAAsB,YAAE,aAAaoB,KACvEgU,EAAAA,UAAUtT,WACV2I,EAAAA,OAAM,WAAO,OAACvJ,EAAK8Y,WAAa9Y,EAAKlB,WAAWiC,YAAYgY,SAAS/Y,EAAK+E,UAE5E3E,UAAS,WAAO,OAAAJ,EAAKmU,UAGzBwE,EAAA5c,UAAAqW,YAAA,SAAYC,IAERA,EAAQ5J,OAAS4J,EAAQ5J,KAAK6J,iBAC9BD,EAAQtS,UAAYsS,EAAQtS,QAAQuS,iBACpCD,EAAQjK,MAAQiK,EAAQjK,IAAIkK,mBAE5BnW,KAAK4T,cACL5T,KAAKyX,aAIT+E,EAAA5c,UAAAgU,YAAA,WACM5T,KAAK0c,SACP1c,KAAK2C,WAAW4J,YAAYvM,KAAK4I,IAE/B5I,KAAK0X,KACP1X,KAAK0X,IAAI7S,eAIC2X,EAAA5c,UAAAoY,KAAd,uHACEhY,KAAK2c,UAAW,EACZ3c,KAAKsM,MACPtM,KAAK2C,WAAW0J,SACdrM,KAAK4I,GACL5I,KAAKsM,KACLtM,KAAK4D,SAEP5D,KAAK0c,SAAU,EACf1c,KAAK2c,UAAW,SAPd,CAAA,EAAA,cAQO3c,KAAKiM,IAAL,MAAA,CAAA,EAAA,oBAEP,6BAAA,CAAA,EAAMjM,KAAK2C,WAAWoJ,gBACpB/L,KAAK4I,GACL5I,KAAKiM,IACLjM,KAAK4D,wBAHPiZ,EAAApb,OAKAzB,KAAK0c,SAAU,EACf1c,KAAK2c,UAAW,EAChB3c,KAAK4C,KAAKkG,IAAG,WACXjF,EAAK4Y,OAAO1T,wCAGd/I,KAAK4C,KAAKkG,IAAG,WACXjF,EAAKsI,MAAMpD,KAAK+T,sDA9EzBjJ,EAAAA,UAASb,KAAA,CAAC,CACTc,SAAU,YACVC,SAAU,gDALHpR,SATPuM,EAAAA,sCAkBCiF,EAAAA,oBAGAA,EAAAA,uBACAA,EAAAA,mBACAA,EAAAA,qBAEAoC,EAAAA,uBACAA,EAAAA,UAqEHiG,kBCoDE,SAAAO,EACUpa,GAAA3C,KAAA2C,WAAAA,EAjED3C,KAAAsH,aAA8C,QAS7CtH,KAAA6P,OAAS,IAAIoF,EAAAA,aACbjV,KAAA8E,OAAS,IAAImQ,EAAAA,aACbjV,KAAAoQ,UAAY,IAAI6E,EAAAA,aAChBjV,KAAAqQ,QAAU,IAAI4E,EAAAA,aACdjV,KAAAkJ,UAAY,IAAI+L,EAAAA,aAChBjV,KAAAyI,MAAQ,IAAIwM,EAAAA,aACZjV,KAAAsQ,SAAW,IAAI2E,EAAAA,aACfjV,KAAAgJ,WAAa,IAAIiM,EAAAA,aACjBjV,KAAAiJ,WAAa,IAAIgM,EAAAA,aACjBjV,KAAAuQ,UAAY,IAAI0E,EAAAA,aAChBjV,KAAAwQ,SAAW,IAAIyE,EAAAA,aACfjV,KAAAyQ,YAAc,IAAIwE,EAAAA,aAClBjV,KAAA0Q,WAAa,IAAIuE,EAAAA,aACjBjV,KAAA2Q,SAAW,IAAIsE,EAAAA,aACfjV,KAAA4Q,UAAY,IAAIqE,EAAAA,aAChBjV,KAAA6Q,YAAc,IAAIoE,EAAAA,aAClBjV,KAAA8Q,MAAQ,IAAImE,EAAAA,aACZjV,KAAA+Q,UAAY,IAAIkE,EAAAA,aAChBjV,KAAAqH,KAAO,IAAI4N,EAAAA,aACXjV,KAAAgR,QAAU,IAAIiE,EAAAA,aACdjV,KAAAgK,UAAY,IAAIiL,EAAAA,aAChBjV,KAAAmK,KAAO,IAAI8K,EAAAA,aACXjV,KAAAoK,QAAU,IAAI6K,EAAAA,aACdjV,KAAAiR,UAAY,IAAIgE,EAAAA,aAChBjV,KAAAkR,QAAU,IAAI+D,EAAAA,aACdjV,KAAAmR,QAAU,IAAI8D,EAAAA,aACdjV,KAAAoR,YAAc,IAAI6D,EAAAA,aAClBjV,KAAAqR,OAAS,IAAI4D,EAAAA,aACbjV,KAAAsR,UAAY,IAAI2D,EAAAA,aAChBjV,KAAAuR,WAAa,IAAI0D,EAAAA,aACjBjV,KAAAwR,SAAW,IAAIyD,EAAAA,aACfjV,KAAAyR,SAAW,IAAIwD,EAAAA,aACfjV,KAAA0R,aAAe,IAAIuD,EAAAA,aACnBjV,KAAA2R,WAAa,IAAIsD,EAAAA,aACjBjV,KAAA4R,cAAgB,IAAIqD,EAAAA,aACpBjV,KAAA6R,iBAAmB,IAAIoD,EAAAA,aACvBjV,KAAA8R,qBAAuB,IAAImD,EAAAA,aAC3BjV,KAAAmQ,KAAO,IAAI8E,EAAAA,aACXjV,KAAAsS,KAAO,IAAI2C,EAAAA,aACXjV,KAAA+R,OAAS,IAAIkD,EAAAA,aACbjV,KAAAmM,MAAQ,IAAI8I,EAAAA,aACZjV,KAAAsM,KAAO,IAAI2I,EAAAA,aACXjV,KAAAgS,UAAY,IAAIiD,EAAAA,aAChBjV,KAAAiS,WAAa,IAAIgD,EAAAA,aACjBjV,KAAAkS,YAAc,IAAI+C,EAAAA,aAClBjV,KAAAmS,iBAAmB,IAAI8C,EAAAA,aACvBjV,KAAAoS,kBAAoB,IAAI6C,EAAAA,aACxBjV,KAAAqS,kBAAoB,IAAI4C,EAAAA,aAwIpC,OAtIE9V,OAAA6d,eAAID,EAAAnd,UAAA,cAAW,KAAf,WACE,OAAOI,KAAK2C,WAAWiC,6CASzBmY,EAAAnd,UAAA8Y,gBAAA,WACE1Y,KAAK2C,WAAWgB,MAAM,CACpBQ,YAAanE,KAAKmE,YAClBC,mBAAoBpE,KAAKoE,mBACzBE,WAAY,CACV6O,UAAWnT,KAAKid,aAAatJ,cAC7B3O,QAAShF,KAAKgF,QACdI,QAASpF,KAAKoF,QACdoB,MAAOxG,KAAKwG,MACZ0W,KAAMld,KAAKkd,KACXC,YAAand,KAAKmd,YAClBC,YAAapd,KAAKod,YAClBC,gBAAiBrd,KAAKqd,gBACtBC,QAAStd,KAAKsd,QACdC,mBAAoBvd,KAAKud,mBACzBC,aAAcxd,KAAKwd,aACnBC,6BAA8Bzd,KAAKyd,6BACnCC,sBAAuB1d,KAAK0d,sBAC5BC,oBAAqB3d,KAAK2d,oBAC1BhX,UAAW3G,KAAK2G,UAChBnB,WAAYxF,KAAKwF,WACjBc,QAAStG,KAAKsG,QACdV,WAAY5F,KAAK4F,WACjBQ,QAASpG,KAAKoG,QACdF,SAAUlG,KAAKkG,SACfF,gBAAiBhG,KAAKgG,gBACtBF,gBAAiB9F,KAAK8F,gBACtB8X,YAAa5d,KAAK4d,YAClBxW,OAAQpH,KAAKoH,OACbI,KAAMxH,KAAKwH,KACXC,QAASzH,KAAKyH,QACdC,MAAO1H,KAAK0H,MACZmW,kBAAmB7d,KAAK6d,kBACxBC,iBAAkB9d,KAAK8d,iBACvBC,yBAA0B/d,KAAK+d,yBAC/BC,iBAAkBhe,KAAKge,iBACvBrQ,OAAQ3N,KAAK2N,OAAS3N,KAAK2N,OAAS3N,KAAK0N,UACzCgJ,iBAAkB1W,KAAK0W,iBACvBuH,UAAWje,KAAKie,WAElBzZ,UAAWxE,OAETA,KAAKke,aACPle,KAAK2C,WAAWkE,mBAAmB7G,KAAKke,cAI5CnB,EAAAnd,UAAAgU,YAAA,WACE5T,KAAK2C,WAAWgC,cAGZoY,EAAAnd,UAAAqW,YAAN,SAAkBC,2FAChB,MAAA,CAAA,EAAMlW,KAAK2C,WAAWa,YAAY2a,2BAAlCtB,EAAApb,OACIyU,EAAQgI,cAAgBhI,EAAQgI,YAAY/H,iBAC9CnW,KAAK2C,WAAWkE,mBAAmBqP,EAAQgI,YAAY7H,cAErDH,EAAQlR,UAAYkR,EAAQlR,QAAQmR,iBACtCnW,KAAK2C,WAAWoC,cAAcmR,EAAQlR,QAAQqR,cAE5CH,EAAQ9Q,UAAY8Q,EAAQ9Q,QAAQ+Q,iBACtCnW,KAAK2C,WAAWwC,cAAc+Q,EAAQ9Q,QAAQiR,cAE5CH,EAAQ1Q,aAAe0Q,EAAQ1Q,WAAW2Q,iBAC5CnW,KAAK2C,WAAW2C,iBAAiB4Q,EAAQ1Q,WAAW6Q,cAElDH,EAAQtQ,aAAesQ,EAAQtQ,WAAWuQ,iBAC5CnW,KAAK2C,WAAWgD,iBAAiBuQ,EAAQtQ,WAAWyQ,cAElDH,EAAQpQ,kBAAoBoQ,EAAQpQ,gBAAgBqQ,iBACtDnW,KAAK2C,WAAWkD,sBAAsBqQ,EAAQpQ,gBAAgBuQ,cAE5DH,EAAQlQ,kBAAoBkQ,EAAQlQ,gBAAgBmQ,iBACtDnW,KAAK2C,WAAWoD,sBAAsBmQ,EAAQlQ,gBAAgBqQ,cAE5DH,EAAQhQ,WAAagQ,EAAQhQ,SAASiQ,iBACxCnW,KAAK2C,WAAWsD,eAAeiQ,EAAQhQ,SAASmQ,cAE9CH,EAAQ9P,UAAY8P,EAAQ9P,QAAQ+P,iBACtCnW,KAAK2C,WAAWwD,cAAc+P,EAAQ9P,QAAQiQ,cAE5CH,EAAQ5P,UAAY4P,EAAQ5P,QAAQ6P,iBACtCnW,KAAK2C,WAAW0D,cAAc6P,EAAQ5P,QAAQ+P,cAE5CH,EAAQ1P,QAAU0P,EAAQ1P,MAAM2P,iBAClCnW,KAAK2C,WAAW4D,YAAY2P,EAAQ1P,MAAM6P,cAExCH,EAAQvP,YAAcuP,EAAQvP,UAAUwP,iBAC1CnW,KAAK2C,WAAW+D,gBAAgBwP,EAAQvP,UAAU0P,cAEhDH,EAAQxI,WAAawI,EAAQxI,UAAU2I,eAAiBH,EAAQxI,UAAUyI,iBAC5EnW,KAAK2C,WAAW+K,UAAUwI,EAAQxI,UAAU2I,aAAcrW,KAAK0W,kBAE7DR,EAAQtI,sBAAwBsI,EAAQtI,qBAAqByI,gBAC1DrW,KAAKoH,QAAUpH,KAAKwH,MAAQxH,KAAK0H,OAAS1H,KAAK0N,YAAcwI,EAAQtI,qBAAqBuI,iBAC7FiF,QAAQC,KAAK,+GAEfrb,KAAK2C,WAAWiL,qBACdsI,EAAQtI,qBAAqByI,aAC7BrW,KAAKyH,QAAUzH,KAAKyH,QAAQ,GAAK,EACjCzH,KAAKuH,iBAIPvH,KAAKoe,kBACLlI,EAAQ9O,QAAW8O,EAAQ9O,OAAO+O,iBACjCD,EAAQ1O,MAAS0O,EAAQzO,SAAYyO,EAAQxO,OAI9CwO,EAAQ9O,SAAW8O,EAAQ9O,OAAO+O,iBAClCD,EAAQ1O,OAAS0O,EAAQ1O,KAAK2O,iBAC7BD,EAAQzO,UAAYyO,EAAQzO,QAAQ0O,kBAAoBD,EAAQtI,sBACjEsI,EAAQxO,QAAUwO,EAAQxO,MAAMyO,kBAEhCnW,KAAK2C,WAAW0E,KACdrH,KAAKsH,aACLtH,KAAKuH,cACL2O,EAAQ1O,MAAQxH,KAAKwH,KAAOxH,KAAKwH,KAAK,GAAK/C,UAC3CyR,EAAQ9O,OAASpH,KAAKoH,OAAS3C,UAC/ByR,EAAQzO,SAAWzH,KAAKyH,QAAUzH,KAAKyH,QAAQ,GAAKhD,UACpDyR,EAAQxO,OAAS1H,KAAK0H,MAAQ1H,KAAK0H,MAAM,GAAKjD,WAbhDzE,KAAK2C,WAAWwE,MAAMnH,KAAW,OAAGA,KAAKqe,4CAzO9CxK,EAAAA,UAASb,KAAA,CAAC,CACTc,SAAU,UACVC,SAAU,yBAUVuK,UAAW,CACT3b,GAEFqR,gBAAiBC,EAAAA,wBAAwBC,eAZhC,6IAnBFvR,0CAmCNwR,EAAAA,kCACAA,EAAAA,oBACAA,EAAAA,mCACAA,EAAAA,4CACAA,EAAAA,uBACAA,EAAAA,2BACAA,EAAAA,2BACAA,EAAAA,+BACAA,EAAAA,kCACAA,EAAAA,4BACAA,EAAAA,gCACAA,EAAAA,wCACAA,EAAAA,qCACAA,EAAAA,iCACAA,EAAAA,2BACAA,EAAAA,gCACAA,EAAAA,sBACAA,EAAAA,yBACAA,EAAAA,uBAGAA,EAAAA,uBACAA,EAAAA,0BACAA,EAAAA,0BACAA,EAAAA,+BACAA,EAAAA,+BACAA,EAAAA,wBACAA,EAAAA,uBACAA,EAAAA,uBACAA,EAAAA,qBACAA,EAAAA,sBACAA,EAAAA,yBACAA,EAAAA,oBACAA,EAAAA,uBACAA,EAAAA,qBACAA,EAAAA,gCACAA,EAAAA,4BAGAA,EAAAA,6BACAA,EAAAA,yBAEAA,EAAAA,oCACAA,EAAAA,+BACAA,EAAAA,4BACAA,EAAAA,2BACAA,EAAAA,sBAEAoC,EAAAA,uBACAA,EAAAA,0BACAA,EAAAA,wBACAA,EAAAA,0BACAA,EAAAA,sBACAA,EAAAA,yBACAA,EAAAA,2BACAA,EAAAA,2BACAA,EAAAA,0BACAA,EAAAA,yBACAA,EAAAA,4BACAA,EAAAA,2BACAA,EAAAA,yBACAA,EAAAA,0BACAA,EAAAA,4BACAA,EAAAA,sBACAA,EAAAA,0BACAA,EAAAA,qBACAA,EAAAA,wBACAA,EAAAA,0BACAA,EAAAA,qBACAA,EAAAA,wBACAA,EAAAA,0BACAA,EAAAA,wBACAA,EAAAA,wBACAA,EAAAA,4BACAA,EAAAA,uBACAA,EAAAA,0BACAA,EAAAA,2BACAA,EAAAA,yBACAA,EAAAA,yBACAA,EAAAA,6BACAA,EAAAA,2BACAA,EAAAA,8BACAA,EAAAA,iCACAA,EAAAA,qCACAA,EAAAA,qBACAA,EAAAA,qBACAA,EAAAA,uBACAA,EAAAA,sBACAA,EAAAA,qBACAA,EAAAA,0BACAA,EAAAA,2BACAA,EAAAA,4BACAA,EAAAA,iCACAA,EAAAA,kCACAA,EAAAA,kCACAA,EAAAA,6BAMAnC,EAAAA,UAASpB,KAAA,CAAC,gBAkIb+J,KCvRAwB,EAAA,WAiBA,SAAAA,KAC8B,2BAD7B7J,EAAAA,UAAS1B,KAAA,CAAC,CAAEc,SAAU,4BACOyK,EAlB9B,gBAoBA,SAAAC,KACqC,2BADpC9J,EAAAA,UAAS1B,KAAA,CAAC,CAAEc,SAAU,mCACc0K,KAEjCC,EAAS,EAEbC,EAAA,WAyCE,SAAAA,EACU/b,EACAgc,EACA/b,GAFA5C,KAAA2C,WAAAA,EACA3C,KAAA2e,kBAAAA,EACA3e,KAAA4C,KAAAA,EAPV5C,KAAAoJ,QAAU,4BAA4BqV,IAE9Bze,KAAA0X,IAAM,IAAInU,EAAAA,aA6CpB,OArCEmb,EAAA9e,UAAA6T,mBAAA,WAAA,IAAA5P,EAAA7D,KACQ0X,EAAM1X,KAAK2C,WAAWa,YAAYO,KACtC4T,EAAAA,UAAS,WAAO,OAAAC,EAAAA,UAAmC/T,EAAKlB,WAAsB,YAAE,QAAQoB,KACtFqJ,EAAAA,OAAM,SAAEvM,GAAM,OAAAA,EAAE4L,WAAa5I,EAAK6I,QAAU7L,EAAE+d,gBAAuC,aAArB/d,EAAEge,iBAClE1C,EAAAA,KAAK,MAEPxE,EAAAA,UAAS,WAAO,OAAAmH,EAAAA,MACdlH,EAAAA,UAAe/T,EAAKlB,WAAsB,YAAE,QAC5CiV,EAAAA,UAAe/T,EAAKlB,WAAsB,YAAE,YAC5CoB,KACAgU,EAAAA,UAAetT,eAEjBR,UAAS,WACTJ,EAAKjB,KAAKkG,IAAG,WACXjF,EAAKkb,oBAGT/e,KAAK0X,IAAI5H,IAAI4H,IAGfgH,EAAA9e,UAAAgU,YAAA,WACE5T,KAAK0X,IAAI7S,eAGX6Z,EAAA9e,UAAAof,oBAAA,SAAoBC,EAAgBC,GAClC,OAAOA,EAAatW,IAGd8V,EAAA9e,UAAAmf,cAAR,eAEQI,EAAc,CAAE5C,OAAQ,CAACvc,KAAKoJ,UAC/BpJ,KAAKof,WACRD,EAAO/R,OAAS,CAAC,KAAM,WAAW,IAEpCpN,KAAKqf,cAAgBrf,KAAK2C,WAAWiC,YAAYoC,sBAAsBmY,GACvEnf,KAAK2e,kBAAkBW,oCAlF1BzL,EAAAA,UAASb,KAAA,CAAC,CACTc,SAAU,2BACVC,SAAU,qyBAwBVC,gBAAiBC,EAAAA,wBAAwBC,OACzCqL,qBAAqB,+CArCd5c,SAZPgc,EAAAA,yBAKAzP,EAAAA,0CAgDCiF,EAAAA,wBAEAqL,EAAAA,aAAYxM,KAAA,CAACuL,EAAgB,CAAEkB,KAAMC,EAAAA,uCACrCF,EAAAA,aAAYxM,KAAA,CAACwL,EAAuB,CAAEiB,KAAMC,EAAAA,iBAkD/ChB,EApFA,GCzBAiB,EAAA,WA0EE,SAAAA,EACUhd,EACAgc,EACA/b,GAHV,IAAAiB,EAAA7D,KACUA,KAAA2C,WAAAA,EACA3C,KAAA2e,kBAAAA,EACA3e,KAAA4C,KAAAA,EAbA5C,KAAAmQ,KAAO,IAAI8E,EAAAA,aAQbjV,KAAA0X,IAAM,IAAInU,EAAAA,aA4DlBvD,KAAA4f,YAAW,SAAItV,GACb,OAAA,SAAQoL,EAAgBnM,GAAoB,OAAM1F,EAAKgc,aAAsB,UAAEvV,EAAQsQ,WAAqB,WAAGlF,EAAOnM,KAGxHvJ,KAAA8f,cAAa,SAAIxV,GACf,OAAA,WAAa,OAAMzG,EAAKgc,aAAwB,YAAEvV,EAAQsQ,WAAqB,cAGjF5a,KAAA+f,0BAAyB,SAAIzV,GAC3B,OAAA,WAAa,OAAMzG,EAAKgc,aAAoC,wBAAEvV,EAAQsQ,WAAqB,cAS/F,OAtEE+E,EAAA/f,UAAA6X,SAAA,WACE2D,QAAQC,KAAK,8FACPzX,EAAyE,CAC7Eoc,OAAQhgB,KAAKggB,OACb5a,QAASpF,KAAKoF,QACdJ,QAAShF,KAAKgF,QACdib,OAAQjgB,KAAKigB,OACbC,SAAUlgB,KAAKkgB,SACfC,IAAKngB,KAAKmgB,IACVC,OAAQpgB,KAAKogB,OACbC,IAAKrgB,KAAKqgB,KAEZlhB,OAAOgJ,KAAKvE,GACTyE,QAAO,SAAEC,OACFC,EAAI,EACN3E,EAAQ2E,KAAU9D,kBACbb,EAAQ2E,KAGrBvI,KAAK6f,aAAe,IAAIS,EAAmE1c,GAC3F5D,KAAK6f,aAAa1P,KAAKnQ,KAAKsM,KAAKgN,UACjCtZ,KAAKmQ,KAAKpH,KAAK/I,KAAK6f,eAGtBF,EAAA/f,UAAAqW,YAAA,SAAYC,GACNA,EAAQ5J,OAAS4J,EAAQ5J,KAAK6J,kBAChCnW,KAAK6f,aAAa1P,KAAKnQ,KAAKsM,KAAKgN,UACjCtZ,KAAK+e,kBAITY,EAAA/f,UAAA6T,mBAAA,WAAA,IAAA5P,EAAA7D,KACEA,KAAK2C,WAAWa,YAAYS,UAAS,eAK7ByT,EAJWoH,EAAAA,MACflH,EAAAA,UAAe/T,EAAKlB,WAAsB,YAAE,cAC5CiV,EAAAA,UAAe/T,EAAKlB,WAAsB,YAAE,SAEzBoB,KACnBgU,EAAAA,UAAetT,YACfR,UAAS,WACTJ,EAAKjB,KAAKkG,IAAG,WACXjF,EAAKkb,oBAGTlb,EAAK6T,IAAI5H,IAAI4H,MAIjBiI,EAAA/f,UAAAgU,YAAA,WACE5T,KAAK0X,IAAI7S,eAeH8a,EAAA/f,UAAAmf,cAAR,eACQrQ,EAAO1O,KAAK2C,WAAWmL,yBACvByS,EAAcC,KAAKC,MAAMzgB,KAAK2C,WAAWiC,YAAY+C,WAC3D3H,KAAKqf,cAAgBrf,KAAK6f,aAAaa,YAAYhS,EAAM6R,GACzDvgB,KAAK2e,kBAAkBW,oCA9H1BzL,EAAAA,UAASb,KAAA,CAAC,CACTc,SAAU,qBACVC,SAAU,6yBAuBVC,gBAAiBC,EAAAA,wBAAwBC,OACzCqL,qBAAqB,+CA7Bd5c,SAhBPgc,EAAAA,yBAKAzP,EAAAA,0CA4CCiF,EAAAA,uBACAA,EAAAA,uBACAA,EAAAA,sBACAA,EAAAA,wBACAA,EAAAA,mBACAA,EAAAA,sBACAA,EAAAA,mBACAA,EAAAA,oBAGAA,EAAAA,oBAEAoC,EAAAA,yBAEAiJ,EAAAA,aAAYxM,KAAA,CAACuL,EAAgB,CAAEkB,KAAMC,EAAAA,uCACrCF,EAAAA,aAAYxM,KAAA,CAACwL,EAAuB,CAAEiB,KAAMC,EAAAA,iBAmF/CC,EAtJA,GCAAgB,EAAA,WA0CE,SAAAA,EACUhe,GAAA3C,KAAA2C,WAAAA,EARA3C,KAAAiL,MAAQ,IAAIgK,EAAAA,aACZjV,KAAAkL,KAAO,IAAI+J,EAAAA,aAgFvB,OAtEE0L,EAAA/gB,UAAA6X,SAAA,WACE,GAAIzX,KAAKqK,QAAUrK,KAAKsJ,QAAUtJ,KAAKsK,SAAWtK,KAAKqK,QAAUrK,KAAKsK,SAAWtK,KAAKsJ,OACpF,MAAM,IAAIgL,MAAM,yDAIpBqM,EAAA/gB,UAAAqW,YAAA,SAAYC,GACV,GACEA,EAAQ7L,SAAW6L,EAAQ7L,OAAO8L,iBAClCD,EAAQ5L,UAAY4L,EAAQ5L,QAAQ6L,gBACpC,KACMyK,EAAY1K,EAAQ7L,OAASrK,KAAW,OAAsBA,KAAY,QAAU,SAAa,YACvGA,KAAK2C,WAAW6I,mBAAmBxL,KAAkB,eAAG,OAClD6gB,EAAmB7gB,KAAK0K,cAC9B1K,KAAK2C,WAAWwI,cAAc0V,EAAkBD,EAAW5gB,KAAkB,cAAE8gB,UAC/E9gB,KAAK6K,cAAgBgW,EAEvB,GAAI3K,EAAQ5M,SAAW4M,EAAQ5M,OAAO6M,gBAAiB,KAC/C4K,EAAkC7K,EAAQ5M,OAAO0X,cACnDD,EAAelX,gBACjB7J,KAAK2C,WAAW+I,sBAAsBqV,EAAelX,gBAEnD7J,KAAKsJ,QAAUtJ,KAAKsJ,OAAOO,gBAAkB7J,KAAK6K,eACpD7K,KAAK2C,WAAW2I,iBAAiBtL,KAAKsJ,OAAOO,eAAgB7J,KAAK6K,iBAKxE8V,EAAA/gB,UAAA8Y,gBAAA,WACE1Y,KAAK6K,cAAgB7K,KAAK0K,cAC1B1K,KAAKihB,SAASjhB,KAAK6K,gBAGrB8V,EAAA/gB,UAAAgU,YAAA,WACM5T,KAAK6K,gBACH7K,KAAKqK,OACPrK,KAAK2C,WAAW6I,mBAAmBxL,KAAK6K,eAC/B7K,KAAKsJ,QAAUtJ,KAAKsJ,OAAOO,gBACpC7J,KAAK2C,WAAW+I,sBAAsB1L,KAAKsJ,OAAOO,iBAGtD7J,KAAK6K,cAAgBpG,WAGfkc,EAAA/gB,UAAA8K,YAAR,WACE,OAAO1K,KAAK2C,WAAW+H,YAAY,CACjCE,aAAc,CACZsW,YAAalhB,KAAKkhB,YAClBC,aAAcnhB,KAAKmhB,aACnB1X,OAAQzJ,KAAKyJ,OACbF,OAAQvJ,KAAKuJ,QAEfyB,YAAa,CACXE,KAAMlL,KAAKkL,KACXD,MAAOjL,KAAKiL,QAEbjL,KAAK0T,QAAQC,gBAGVgN,EAAA/gB,UAAAqhB,SAAR,SAAiBtW,GAAjB,IAAA9G,EAAA7D,KACEA,KAAK2C,WAAWa,YAAYS,UAAS,WACnC,GAAIJ,EAAKwG,QAAUxG,EAAKyG,QACtBzG,EAAKlB,WAAWwI,cAAcR,EAAO9G,EAAKwG,OAASxG,EAAKwG,OAA2BxG,EAAY,QAAU,SAAa,iBACjH,CAAA,IAAIA,EAAKyF,SAAUzF,EAAKyF,OAAOO,eAGpC,MAAM,IAAIyK,MAAM,yDAFhBzQ,EAAKlB,WAAW2I,iBAAiBzH,EAAKyF,OAAOO,eAAgBc,2BA5FpEkJ,EAAAA,UAASb,KAAA,CAAC,CACTc,SAAU,YACVC,SAAU,gDACVC,gBAAiBC,EAAAA,wBAAwBC,oDANlCvR,0CAUNwR,EAAAA,4BACAA,EAAAA,sBACAA,EAAAA,sBACAA,EAAAA,uBAGAA,EAAAA,sBACAA,EAAAA,sBACAA,EAAAA,qBAEAoC,EAAAA,qBACAA,EAAAA,wBAEAnC,EAAAA,UAASpB,KAAA,CAAC,cA8Eb2N,EApHA,GCAAS,EAAA,WAuBE,SAAAA,EACUze,GAAA3C,KAAA2C,WAAAA,EAJF3C,KAAAoZ,aAAc,EACdpZ,KAAA0X,IAAM,IAAInU,EAAAA,aAiDpB,OA3CE6d,EAAAxhB,UAAA6X,SAAA,WAAA,IAAA5T,EAAA7D,KACEA,KAAK2C,WAAWe,WAAWO,UAAS,WAClCJ,EAAKmU,WACCN,EAAME,EAAAA,UAAe/T,EAAKlB,WAAsB,YAAE,aAAaoB,KACnEqJ,EAAAA,OAAM,WAAO,OAACvJ,EAAKlB,WAAWiC,YAAY+H,UAAU9I,EAAK+E,OACzD3E,UAAS,WACTJ,EAAKmU,SAEPnU,EAAK6T,IAAI5H,IAAI4H,MAIjB0J,EAAAxhB,UAAAqW,YAAA,SAAYC,GACLlW,KAAKoZ,cAIRlD,EAAQ2C,cAAgB3C,EAAQ2C,YAAY1C,iBAC5CD,EAAQnI,SAAWmI,EAAQnI,OAAOoI,iBAClCD,EAAQmL,UAAYnL,EAAQmL,QAAQlL,mBAEpCnW,KAAK4T,cACL5T,KAAKyX,aAIT2J,EAAAxhB,UAAAgU,YAAA,WACE5T,KAAK0X,IAAI7S,cACL7E,KAAKoZ,aACPpZ,KAAK2C,WAAWiK,aAAa5M,KAAK4I,KAI9BwY,EAAAxhB,UAAAoY,KAAR,eACQtL,EAAS,CACboG,KAAM,SACN+F,YAAa7Y,KAAK6Y,YAClB9K,OAAQ/N,KAAK+N,OACbsT,QAASrhB,KAAKqhB,SAEhBrhB,KAAK2C,WAAW6J,UAAUxM,KAAK4I,GAAI8D,GACnC1M,KAAKoZ,aAAc,uBA9DtBvF,EAAAA,UAASb,KAAA,CAAC,CACTc,SAAU,oBACVC,SAAU,GACVC,gBAAiBC,EAAAA,wBAAwBC,oDALlCvR,iCASNwR,EAAAA,2BAGAA,EAAAA,sBACAA,EAAAA,uBACAA,EAAAA,SAoDHiN,EAtEA,GCAAE,EAAA,WAqBE,SAAAA,EACU3e,GAAA3C,KAAA2C,WAAAA,EAuCZ,OApCE2e,EAAA1hB,UAAA6X,SAAA,WAAA,IAAA5T,EAAA7D,KACEA,KAAK0X,IAAM1X,KAAK2C,WAAWe,WACxBO,UAAS,WAAO,OAAAJ,EAAKmU,UAG1BsJ,EAAA1hB,UAAAqW,YAAA,SAAYC,GACNlW,KAAKyM,WAAahI,WAIPzE,KAAK2C,WAAWgK,UAAuB3M,KAAKyM,UAE3C8U,YAAY,CAC1BtV,IAAKiK,EAAQjK,MAAQxH,UAAYA,UAAYzE,KAAKiM,IAClD4M,YAAa3C,EAAQ2C,cAAgBpU,UAAYA,UAAYzE,KAAK6Y,eAItEyI,EAAA1hB,UAAAgU,YAAA,WACM5T,KAAK0X,MAAQjT,WACfzE,KAAK0X,IAAI7S,cAGP7E,KAAKyM,WAAahI,WACpBzE,KAAK2C,WAAWiK,aAAa5M,KAAKyM,WAI9B6U,EAAA1hB,UAAAoY,KAAR,WACEhY,KAAK2C,WAAW6J,UAAUxM,KAAK4I,GAAI,CACjCkK,KAAM,QACN7G,IAAKjM,KAAKiM,IACV4M,YAAa7Y,KAAK6Y,cAEpB7Y,KAAKyM,SAAWzM,KAAK4I,wBAtDxBiL,EAAAA,UAASb,KAAA,CAAC,CACTc,SAAU,mBACVC,SAAU,GACVC,gBAAiBC,EAAAA,wBAAwBC,oDALlCvR,iCASNwR,EAAAA,mBAGAA,EAAAA,2BACAA,EAAAA,SA6CHmN,EA7DA,GCAAE,EAAA,WA4BE,SAAAA,EACU7e,GAAA3C,KAAA2C,WAAAA,EANV3C,KAAA8S,KAAiB,SAET9S,KAAAoZ,aAAc,EACdpZ,KAAA0X,IAAM,IAAInU,EAAAA,aAuDpB,OAjDEie,EAAA5hB,UAAA6X,SAAA,WAAA,IAAA5T,EAAA7D,KACEA,KAAK2C,WAAWe,WAAWO,UAAS,WAClCJ,EAAKmU,WACCN,EAAME,EAAAA,UAAe/T,EAAKlB,WAAsB,YAAE,aAAaoB,KACnEqJ,EAAAA,OAAM,WAAO,OAACvJ,EAAKlB,WAAWiC,YAAY+H,UAAU9I,EAAK+E,OACzD3E,UAAS,WACTJ,EAAKmU,SAEPnU,EAAK6T,IAAI5H,IAAI4H,MAIjB8J,EAAA5hB,UAAAqW,YAAA,SAAYC,GACLlW,KAAKoZ,cAIRlD,EAAQjK,MAAQiK,EAAQjK,IAAIkK,iBAC5BD,EAAQuL,QAAUvL,EAAQuL,MAAMtL,iBAChCD,EAAQvI,SAAWuI,EAAQvI,OAAOwI,iBAClCD,EAAQ+B,UAAY/B,EAAQ+B,QAAQ9B,iBACpCD,EAAQgC,UAAYhC,EAAQgC,QAAQ/B,iBACpCD,EAAQwL,WAAaxL,EAAQwL,SAASvL,mBAEtCnW,KAAK4T,cACL5T,KAAKyX,aAIT+J,EAAA5hB,UAAAgU,YAAA,WACE5T,KAAK0X,IAAI7S,cACL7E,KAAKoZ,aACPpZ,KAAK2C,WAAWiK,aAAa5M,KAAK4I,KAI9B4Y,EAAA5hB,UAAAoY,KAAR,eACQtL,EAAS,CACboG,KAAM9S,KAAK8S,KACX7G,IAAKjM,KAAKiM,IACVwV,MAAOzhB,KAAKyhB,MACZ9T,OAAQ3N,KAAK2N,OACbsK,QAASjY,KAAKiY,QACdC,QAASlY,KAAKkY,QACdwJ,SAAU1hB,KAAK0hB,UAEjB1hB,KAAK2C,WAAW6J,UAAUxM,KAAK4I,GAAI8D,GACnC1M,KAAKoZ,aAAc,uBAzEtBvF,EAAAA,UAASb,KAAA,CAAC,CACTc,SAAU,oBACVC,SAAU,GACVC,gBAAiBC,EAAAA,wBAAwBC,oDALlCvR,iCASNwR,EAAAA,mBAGAA,EAAAA,qBACAA,EAAAA,sBACAA,EAAAA,uBACAA,EAAAA,uBACAA,EAAAA,wBACAA,EAAAA,SA4DHqN,EAjFA,GCAAG,EAAA,WA0BE,SAAAA,EACUhf,GAAA3C,KAAA2C,WAAAA,EANV3C,KAAA8S,KAAiB,SAET9S,KAAAoZ,aAAc,EACdpZ,KAAA0X,IAAM,IAAInU,EAAAA,aAkDpB,OA5CEoe,EAAA/hB,UAAA6X,SAAA,WAAA,IAAA5T,EAAA7D,KACEA,KAAK2C,WAAWe,WAAWO,UAAS,WAClCJ,EAAKmU,WACCN,EAAME,EAAAA,UAAe/T,EAAKlB,WAAsB,YAAE,aAAaoB,KACnEqJ,EAAAA,OAAM,WAAO,OAACvJ,EAAKlB,WAAWiC,YAAY+H,UAAU9I,EAAK+E,OACzD3E,UAAS,WACTJ,EAAKmU,SAEPnU,EAAK6T,IAAI5H,IAAI4H,MAIjBiK,EAAA/hB,UAAAqW,YAAA,SAAYC,GACLlW,KAAKoZ,cAIRlD,EAAQjK,MAAQiK,EAAQjK,IAAIkK,iBAC5BD,EAAQuL,QAAUvL,EAAQuL,MAAMtL,iBAChCD,EAAQ+B,UAAY/B,EAAQ+B,QAAQ9B,iBACpCD,EAAQgC,UAAYhC,EAAQgC,QAAQ/B,mBAEpCnW,KAAK4T,cACL5T,KAAKyX,aAITkK,EAAA/hB,UAAAgU,YAAA,WACE5T,KAAK0X,IAAI7S,cACL7E,KAAKoZ,aACPpZ,KAAK2C,WAAWiK,aAAa5M,KAAK4I,KAI9B+Y,EAAA/hB,UAAAoY,KAAR,WACEhY,KAAK2C,WAAW6J,UAAUxM,KAAK4I,GAAI,CACjCkK,KAAM9S,KAAK8S,KACX7G,IAAKjM,KAAKiM,IACVwV,MAAOzhB,KAAKyhB,MACZxJ,QAASjY,KAAKiY,QACdC,QAASlY,KAAKkY,UAEhBlY,KAAKoZ,aAAc,uBAlEtBvF,EAAAA,UAASb,KAAA,CAAC,CACTc,SAAU,oBACVC,SAAU,GACVC,gBAAiBC,EAAAA,wBAAwBC,oDALlCvR,iCASNwR,EAAAA,mBAGAA,EAAAA,qBACAA,EAAAA,uBACAA,EAAAA,uBACAA,EAAAA,SAuDHwN,EA1EA,GCAAC,EAAA,WAsBE,SAAAA,EACUjf,GAAA3C,KAAA2C,WAAAA,EAJF3C,KAAAoZ,aAAc,EACdpZ,KAAA0X,IAAM,IAAInU,EAAAA,aA8CpB,OAxCEqe,EAAAhiB,UAAA6X,SAAA,WAAA,IAAA5T,EAAA7D,KACEA,KAAK2C,WAAWe,WAAWO,UAAS,WAClCJ,EAAKmU,WACCN,EAAME,EAAAA,UAAe/T,EAAKlB,WAAsB,YAAE,aAAaoB,KACnEqJ,EAAAA,OAAM,WAAO,OAACvJ,EAAKlB,WAAWiC,YAAY+H,UAAU9I,EAAK+E,OACzD3E,UAAS,WACTJ,EAAKmU,SAEPnU,EAAK6T,IAAI5H,IAAI4H,MAIjBkK,EAAAhiB,UAAAqW,YAAA,SAAYC,GACLlW,KAAKoZ,cAIRlD,EAAQ2L,OAAS3L,EAAQ2L,KAAK1L,iBAC9BD,EAAQ2C,cAAgB3C,EAAQ2C,YAAY1C,mBAE5CnW,KAAK4T,cACL5T,KAAKyX,aAITmK,EAAAhiB,UAAAgU,YAAA,WACE5T,KAAK0X,IAAI7S,cACL7E,KAAKoZ,aACPpZ,KAAK2C,WAAWiK,aAAa5M,KAAK4I,KAI9BgZ,EAAAhiB,UAAAoY,KAAR,WACEhY,KAAK2C,WAAW6J,UAAUxM,KAAK4I,GAAI,CACjCkK,KAAM,QACN+O,KAAM7hB,KAAK6hB,KACXhJ,YAAa7Y,KAAK6Y,cAEpB7Y,KAAKoZ,aAAc,uBA1DtBvF,EAAAA,UAASb,KAAA,CAAC,CACTc,SAAU,mBACVC,SAAU,GACVC,gBAAiBC,EAAAA,wBAAwBC,oDALlCvR,iCASNwR,EAAAA,oBAGAA,EAAAA,2BACAA,EAAAA,SAiDHyN,EAlEA,GCAAE,EAAA,WA0BA,SAAAA,KAyEA,OAfSA,EAAAC,WAAP,SAAkBC,GAChB,MAAO,CACLC,SAAUH,EACVxD,UAAW,CACT,CACE4D,QAASzf,EACT0f,SAAUH,EAAO7d,aAEnB,CACE+d,QAASpN,EACTqN,SAAUH,EAAOI,qBAAuBJ,EAAO7d,oCApExDke,EAAAA,SAAQrP,KAAA,CAAC,CACRsP,QAAS,CACPC,EAAAA,cAEFC,aAAc,CACZzF,EACAxF,EACAuD,EACA0B,EACAmF,EACA1I,EACAuI,EACAF,EACAM,EACAR,EACA1G,EACApC,EACAqI,EACAnN,EACAoB,EACAkC,EACA/B,EACAyB,EACAnC,EACA6C,EACAqH,EACAC,EACAmB,EACAjB,GAEF+D,QAAS,CACP1F,EACAxF,EACAuD,EACA0B,EACAmF,EACA1I,EACAuI,EACAF,EACAM,EACAR,EACA1G,EACApC,EACAqI,EACAnN,EACAoB,EACAkC,EACA/B,EACAyB,EACAnC,EACA6C,EACAqH,EACAC,EACAmB,EACAjB,OAmBJoD,EAnGA","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { EventEmitter, Inject, Injectable, InjectionToken, NgZone, Optional } from '@angular/core';\nimport bbox from '@turf/bbox';\nimport { polygon } from '@turf/helpers';\nimport * as MapboxGl from 'mapbox-gl';\nimport { AsyncSubject, Observable, Subscription } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { MapEvent, MapImageData, MapImageOptions } from './map.types';\n\nexport const MAPBOX_API_KEY = new InjectionToken('MapboxApiKey');\n\nexport abstract class MglResizeEventEmitter {\n  abstract resizeEvent: Observable<void>;\n}\n\nexport interface SetupMap {\n  accessToken?: string;\n  customMapboxApiUrl?: string;\n  mapOptions: any; // MapboxGl.MapboxOptions\n  mapEvents: MapEvent;\n}\n\nexport interface SetupLayer {\n  layerOptions: MapboxGl.Layer;\n  layerEvents: {\n    click: EventEmitter<MapboxGl.MapMouseEvent>;\n    mouseEnter: EventEmitter<MapboxGl.MapMouseEvent>;\n    mouseLeave: EventEmitter<MapboxGl.MapMouseEvent>;\n    mouseMove: EventEmitter<MapboxGl.MapMouseEvent>;\n  };\n}\n\nexport interface SetupPopup {\n  popupOptions: MapboxGl.PopupOptions;\n  popupEvents: {\n    open: EventEmitter<void>;\n    close: EventEmitter<void>;\n  };\n}\n\nexport interface SetupMarker {\n  markersOptions: {\n    offset?: MapboxGl.PointLike;\n    anchor?: MapboxGl.Anchor;\n    draggable?: boolean;\n    element: HTMLElement;\n    feature?: GeoJSON.Feature<GeoJSON.Point>;\n    lngLat?: MapboxGl.LngLatLike;\n  };\n  markersEvents: {\n    dragStart: EventEmitter<MapboxGl.Marker>;\n    drag: EventEmitter<MapboxGl.Marker>;\n    dragEnd: EventEmitter<MapboxGl.Marker>;\n  };\n}\n\nexport type AllSource = MapboxGl.VectorSource |\n  MapboxGl.RasterSource |\n  MapboxGl.GeoJSONSource |\n  MapboxGl.ImageSource |\n  MapboxGl.VideoSourceOptions |\n  MapboxGl.GeoJSONSourceRaw |\n  MapboxGl.CanvasSourceOptions;\n\nexport type MovingOptions = MapboxGl.FlyToOptions |\n  (MapboxGl.AnimationOptions & MapboxGl.CameraOptions) |\n  MapboxGl.CameraOptions;\n\n@Injectable()\nexport class MapService {\n  mapInstance: MapboxGl.Map;\n  mapCreated$: Observable<void>;\n  mapLoaded$: Observable<void>;\n  mapEvents: MapEvent;\n\n  private mapCreated = new AsyncSubject<void>();\n  private mapLoaded = new AsyncSubject<void>();\n  private layerIdsToRemove: string[] = [];\n  private sourceIdsToRemove: string[] = [];\n  private markersToRemove: MapboxGl.Marker[] = [];\n  private popupsToRemove: MapboxGl.Popup[] = [];\n  private imageIdsToRemove: string[] = [];\n  private subscription = new Subscription();\n\n  constructor(\n    private zone: NgZone,\n    @Optional() @Inject(MAPBOX_API_KEY) private readonly MAPBOX_API_KEY: string,\n    @Optional() private readonly MglResizeEventEmitter: MglResizeEventEmitter\n  ) {\n    this.mapCreated$ = this.mapCreated.asObservable();\n    this.mapLoaded$ = this.mapLoaded.asObservable();\n  }\n\n  setup(options: SetupMap) {\n    // Need onStable to wait for a potential @angular/route transition to end\n    this.zone.onStable.pipe(first()).subscribe(() => {\n      // Workaround rollup issue\n      this.assign(MapboxGl, 'accessToken', options.accessToken || this.MAPBOX_API_KEY);\n      if (options.customMapboxApiUrl) {\n        this.assign(MapboxGl, 'config.API_URL', options.customMapboxApiUrl);\n      }\n      this.createMap(options.mapOptions);\n      this.hookEvents(options.mapEvents);\n      this.mapEvents = options.mapEvents;\n      this.mapCreated.next(undefined);\n      this.mapCreated.complete();\n    });\n  }\n\n  destroyMap() {\n    if (this.mapInstance) {\n      this.subscription.unsubscribe();\n      this.mapInstance.remove();\n    }\n  }\n\n  updateMinZoom(minZoom: number) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.setMinZoom(minZoom);\n    });\n  }\n\n  updateMaxZoom(maxZoom: number) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.setMaxZoom(maxZoom);\n    });\n  }\n\n  updateScrollZoom(status: boolean) {\n    return this.zone.runOutsideAngular(() => {\n      status ? this.mapInstance.scrollZoom.enable() : this.mapInstance.scrollZoom.disable();\n    });\n  }\n\n  updateDragRotate(status: boolean) {\n    return this.zone.runOutsideAngular(() => {\n      status ? this.mapInstance.dragRotate.enable() : this.mapInstance.dragRotate.disable();\n    });\n  }\n\n  updateTouchZoomRotate(status: boolean) {\n    return this.zone.runOutsideAngular(() => {\n      status ? this.mapInstance.touchZoomRotate.enable() : this.mapInstance.touchZoomRotate.disable();\n    });\n  }\n\n  updateDoubleClickZoom(status: boolean) {\n    return this.zone.runOutsideAngular(() => {\n      status ? this.mapInstance.doubleClickZoom.enable() : this.mapInstance.doubleClickZoom.disable();\n    });\n  }\n\n  updateKeyboard(status: boolean) {\n    return this.zone.runOutsideAngular(() => {\n      status ? this.mapInstance.keyboard.enable() : this.mapInstance.keyboard.disable();\n    });\n  }\n\n  updateDragPan(status: boolean) {\n    return this.zone.runOutsideAngular(() => {\n      status ? this.mapInstance.dragPan.enable() : this.mapInstance.dragPan.disable();\n    });\n  }\n\n  updateBoxZoom(status: boolean) {\n    return this.zone.runOutsideAngular(() => {\n      status ? this.mapInstance.boxZoom.enable() : this.mapInstance.boxZoom.disable();\n    });\n  }\n\n  updateStyle(style: MapboxGl.Style) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.setStyle(style);\n    });\n  }\n\n  updateMaxBounds(maxBounds: MapboxGl.LngLatBoundsLike) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.setMaxBounds(maxBounds);\n    });\n  }\n\n  changeCanvasCursor(cursor: string) {\n    const canvas = this.mapInstance.getCanvasContainer();\n    canvas.style.cursor = cursor;\n  }\n\n  queryRenderedFeatures(\n    pointOrBox?: MapboxGl.PointLike | [MapboxGl.PointLike, MapboxGl.PointLike],\n    parameters?: { layers?: string[], filter?: any[] }\n  ): GeoJSON.Feature<GeoJSON.GeometryObject>[] {\n    return this.mapInstance.queryRenderedFeatures(pointOrBox, parameters);\n  }\n\n  panTo(center: MapboxGl.LngLatLike, options?: MapboxGl.AnimationOptions) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.panTo(center, options);\n    });\n  }\n\n  move(\n    movingMethod: 'jumpTo' | 'easeTo' | 'flyTo',\n    movingOptions?: MovingOptions,\n    zoom?: number,\n    center?: MapboxGl.LngLatLike,\n    bearing?: number,\n    pitch?: number\n  ) {\n    return this.zone.runOutsideAngular(() => {\n      (<any>this.mapInstance[movingMethod])({\n        ...movingOptions,\n        zoom: zoom ? zoom : this.mapInstance.getZoom(),\n        center: center ? center : this.mapInstance.getCenter(),\n        bearing: bearing ? bearing : this.mapInstance.getBearing(),\n        pitch: pitch ? pitch : this.mapInstance.getPitch()\n      });\n    });\n  }\n\n  addLayer(layer: SetupLayer, bindEvents: boolean, before?: string) {\n    this.zone.runOutsideAngular(() => {\n      Object.keys(layer.layerOptions)\n        .forEach((key: string) => {\n          const tkey = <keyof MapboxGl.Layer>key;\n          if (layer.layerOptions[tkey] === undefined) {\n            delete layer.layerOptions[tkey];\n          }\n        });\n      this.mapInstance.addLayer(layer.layerOptions, before);\n      if (bindEvents) {\n        if (layer.layerEvents.click.observers.length) {\n          this.mapInstance.on('click', layer.layerOptions.id, (evt: MapboxGl.MapMouseEvent) => {\n            this.zone.run(() => {\n              layer.layerEvents.click.emit(evt);\n            });\n          });\n        }\n        if (layer.layerEvents.mouseEnter.observers.length) {\n          this.mapInstance.on('mouseenter', layer.layerOptions.id, (evt: MapboxGl.MapMouseEvent) => {\n            this.zone.run(() => {\n              layer.layerEvents.mouseEnter.emit(evt);\n            });\n          });\n        }\n        if (layer.layerEvents.mouseLeave.observers.length) {\n          this.mapInstance.on('mouseleave', layer.layerOptions.id, (evt: MapboxGl.MapMouseEvent) => {\n            this.zone.run(() => {\n              layer.layerEvents.mouseLeave.emit(evt);\n            });\n          });\n        }\n        if (layer.layerEvents.mouseMove.observers.length) {\n          this.mapInstance.on('mousemove', layer.layerOptions.id, (evt: MapboxGl.MapMouseEvent) => {\n            this.zone.run(() => {\n              layer.layerEvents.mouseMove.emit(evt);\n            });\n          });\n        }\n      }\n    });\n  }\n\n  removeLayer(layerId: string) {\n    this.layerIdsToRemove.push(layerId);\n  }\n\n  addMarker(marker: SetupMarker) {\n    const options: MapboxGl.MarkerOptions = {\n      offset: marker.markersOptions.offset,\n      anchor: marker.markersOptions.anchor,\n      draggable: !!marker.markersOptions.draggable\n    };\n    if (marker.markersOptions.element.childNodes.length > 0) {\n      options.element = marker.markersOptions.element;\n    }\n    const markerInstance = new MapboxGl.Marker(options);\n    if (marker.markersEvents.dragStart.observers.length) {\n      markerInstance.on('dragstart', (event: { target: MapboxGl.Marker }) =>\n        this.zone.run(() => marker.markersEvents.dragStart.emit(event.target))\n      );\n    }\n    if (marker.markersEvents.drag.observers.length) {\n      markerInstance.on('drag', (event: { target: MapboxGl.Marker }) =>\n        this.zone.run(() => marker.markersEvents.drag.emit(event.target))\n      );\n    }\n    if (marker.markersEvents.dragEnd.observers.length) {\n      markerInstance.on('dragend', (event: { target: MapboxGl.Marker }) =>\n        this.zone.run(() => marker.markersEvents.dragEnd.emit(event.target))\n      );\n    }\n    const lngLat: MapboxGl.LngLatLike = marker.markersOptions.feature ?\n      <[number, number]>marker.markersOptions.feature.geometry!.coordinates :\n      marker.markersOptions.lngLat!;\n    markerInstance.setLngLat(lngLat);\n    return this.zone.runOutsideAngular(() => {\n      markerInstance.addTo(this.mapInstance);\n      return markerInstance;\n    });\n  }\n\n  removeMarker(marker: MapboxGl.Marker) {\n    this.markersToRemove.push(marker);\n  }\n\n  createPopup(popup: SetupPopup, element: Node) {\n    return this.zone.runOutsideAngular(() => {\n      Object.keys(popup.popupOptions)\n        .forEach((key) =>\n          (<any>popup.popupOptions)[key] === undefined && delete (<any>popup.popupOptions)[key]);\n      const popupInstance = new MapboxGl.Popup(popup.popupOptions);\n      popupInstance.setDOMContent(element);\n      if (popup.popupEvents.close.observers.length) {\n        popupInstance.on('close', () => {\n          this.zone.run(() => {\n            popup.popupEvents.close.emit();\n          });\n        });\n      }\n      if (popup.popupEvents.open.observers.length) {\n        popupInstance.on('open', () => {\n          this.zone.run(() => {\n            popup.popupEvents.open.emit();\n          });\n        });\n      }\n      return popupInstance;\n    });\n  }\n\n  addPopupToMap(popup: MapboxGl.Popup, lngLat: MapboxGl.LngLatLike, skipOpenEvent = false) {\n    return this.zone.runOutsideAngular(() => {\n      if (skipOpenEvent && (<any>popup)._listeners) {\n        delete (<any>popup)._listeners['open'];\n      }\n      popup.setLngLat(lngLat);\n      popup.addTo(this.mapInstance);\n    });\n  }\n\n  addPopupToMarker(marker: MapboxGl.Marker, popup: MapboxGl.Popup) {\n    return this.zone.runOutsideAngular(() => {\n      marker.setPopup(popup);\n    });\n  }\n\n  removePopupFromMap(popup: MapboxGl.Popup, skipCloseEvent = false) {\n    if (skipCloseEvent && (<any>popup)._listeners) {\n      delete (<any>popup)._listeners['close'];\n    }\n    this.popupsToRemove.push(popup);\n  }\n\n  removePopupFromMarker(marker: MapboxGl.Marker) {\n    return this.zone.runOutsideAngular(() => {\n      marker.setPopup(undefined);\n    });\n  }\n\n  addControl(control: MapboxGl.Control | MapboxGl.IControl, position?: 'top-right' | 'top-left' | 'bottom-right' | 'bottom-left') {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.addControl(<any>control, position);\n    });\n  }\n\n  removeControl(control: MapboxGl.Control | MapboxGl.IControl) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.removeControl(<any>control);\n    });\n  }\n\n  async loadAndAddImage(imageId: string, url: string, options?: MapImageOptions) {\n    return this.zone.runOutsideAngular(() => {\n      return new Promise((resolve, reject) => {\n        this.mapInstance.loadImage(url, (error: { status: number } | null, image: ImageData) => {\n          if (error) {\n            reject(error);\n            return;\n          }\n          this.addImage(imageId, image, options);\n          resolve();\n        });\n      });\n    });\n  }\n\n  addImage(imageId: string, data: MapImageData, options?: MapImageOptions) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.addImage(imageId, <any>data, options);\n    });\n  }\n\n  removeImage(imageId: string) {\n    this.imageIdsToRemove.push(imageId);\n  }\n\n  addSource(sourceId: string, source: AllSource) {\n    return this.zone.runOutsideAngular(() => {\n      Object.keys(source)\n        .forEach((key) =>\n          (<any>source)[key] === undefined && delete (<any>source)[key]);\n      this.mapInstance.addSource(sourceId, <any>source); // Typings issue\n    });\n  }\n\n  getSource<T>(sourceId: string) {\n    return <T><any>this.mapInstance.getSource(sourceId);\n  }\n\n  removeSource(sourceId: string) {\n    this.sourceIdsToRemove.push(sourceId);\n  }\n\n  setAllLayerPaintProperty(\n    layerId: string,\n    paint: MapboxGl.BackgroundPaint |\n      MapboxGl.FillPaint |\n      MapboxGl.FillExtrusionPaint |\n      MapboxGl.LinePaint |\n      MapboxGl.SymbolPaint |\n      MapboxGl.RasterPaint |\n      MapboxGl.CirclePaint\n  ) {\n    return this.zone.runOutsideAngular(() => {\n      Object.keys(paint).forEach((key) => {\n        // TODO Check for perf, setPaintProperty only on changed paint props maybe\n        this.mapInstance.setPaintProperty(layerId, key, (<any>paint)[key]);\n      });\n    });\n  }\n\n  setAllLayerLayoutProperty(\n    layerId: string,\n    layout: MapboxGl.BackgroundLayout |\n      MapboxGl.FillLayout |\n      MapboxGl.FillExtrusionLayout |\n      MapboxGl.LineLayout |\n      MapboxGl.SymbolLayout |\n      MapboxGl.RasterLayout |\n      MapboxGl.CircleLayout\n  ) {\n    return this.zone.runOutsideAngular(() => {\n      Object.keys(layout).forEach((key) => {\n        // TODO Check for perf, setPaintProperty only on changed paint props maybe\n        this.mapInstance.setLayoutProperty(layerId, key, (<any>layout)[key]);\n      });\n    });\n  }\n\n  setLayerFilter(layerId: string, filter: any[]) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.setFilter(layerId, filter);\n    });\n  }\n\n  setLayerBefore(layerId: string, beforeId: string) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.moveLayer(layerId, beforeId);\n    });\n  }\n\n  setLayerZoomRange(layerId: string, minZoom?: number, maxZoom?: number) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.setLayerZoomRange(layerId, minZoom ? minZoom : 0, maxZoom ? maxZoom : 20);\n    });\n  }\n\n  fitBounds(bounds: MapboxGl.LngLatBoundsLike, options?: MapboxGl.FitBoundsOptions) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.fitBounds(bounds, options);\n    });\n  }\n\n  fitScreenCoordinates(\n    points: [MapboxGl.PointLike, MapboxGl.PointLike],\n    bearing: number,\n    options?: MapboxGl.AnimationOptions & MapboxGl.CameraOptions\n  ) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.fitScreenCoordinates(points[0], points[1], bearing, options);\n    });\n  }\n\n  getCurrentViewportBbox(): GeoJSON.BBox {\n    const canvas = this.mapInstance.getCanvas();\n    const w = parseInt(canvas.style.width!, 10);\n    const h = parseInt(canvas.style.height!, 10);\n    const upLeft = this.mapInstance.unproject([0, 0]).toArray();\n    const upRight = this.mapInstance.unproject([w, 0]).toArray();\n    const downRight = this.mapInstance.unproject([w, h]).toArray();\n    const downLeft = this.mapInstance.unproject([0, h]).toArray();\n    return <any>bbox(polygon([[upLeft, upRight, downRight, downLeft, upLeft]]));\n  }\n\n  applyChanges() {\n    this.zone.runOutsideAngular(() => {\n      this.removeLayers();\n      this.removeSources();\n      this.removeMarkers();\n      this.removePopups();\n      this.removeImages();\n    });\n  }\n\n  private createMap(options: MapboxGl.MapboxOptions) {\n    NgZone.assertNotInAngularZone();\n    Object.keys(options)\n      .forEach((key: string) => {\n        const tkey = <keyof MapboxGl.MapboxOptions>key;\n        if (options[tkey] === undefined) {\n          delete options[tkey];\n        }\n      });\n    this.mapInstance = new MapboxGl.Map(options);\n\n    const isIEorEdge = window && /msie\\s|trident\\/|edge\\//i.test(window.navigator.userAgent);\n    if (isIEorEdge) {\n      this.mapInstance.setStyle(options.style!);\n    }\n\n    const subChanges = this.zone.onMicrotaskEmpty\n      .subscribe(() => this.applyChanges());\n    if (this.MglResizeEventEmitter) {\n      const subResize = this.MglResizeEventEmitter.resizeEvent.subscribe(() => {\n        this.mapInstance.resize();\n      });\n      this.subscription.add(subResize);\n    }\n    this.subscription.add(subChanges);\n  }\n\n  private removeLayers() {\n    for (const layerId of this.layerIdsToRemove) {\n      this.mapInstance.removeLayer(layerId);\n    }\n    this.layerIdsToRemove = [];\n  }\n\n  private removeSources() {\n    for (const sourceId of this.sourceIdsToRemove) {\n      this.mapInstance.removeSource(sourceId);\n    }\n    this.sourceIdsToRemove = [];\n  }\n\n  private removeMarkers() {\n    for (const marker of this.markersToRemove) {\n      marker.remove();\n    }\n    this.markersToRemove = [];\n  }\n\n  private removePopups() {\n    for (const popup of this.popupsToRemove) {\n      popup.remove();\n    }\n    this.popupsToRemove = [];\n  }\n\n  private removeImages() {\n    for (const imageId of this.imageIdsToRemove) {\n      this.mapInstance.removeImage(imageId);\n    }\n    this.imageIdsToRemove = [];\n  }\n\n  private hookEvents(events: MapEvent) {\n    this.mapInstance.on('load', () => {\n      this.mapLoaded.next(undefined);\n      this.mapLoaded.complete();\n      this.zone.run(() => events.load.emit(this.mapInstance));\n    });\n    if (events.resize.observers.length) {\n      this.mapInstance.on('resize', () => this.zone.run(() => events.resize.emit()));\n    }\n    if (events.remove.observers.length) {\n      this.mapInstance.on('remove', () => this.zone.run(() => events.remove.emit()));\n    }\n    if (events.mouseDown.observers.length) {\n      this.mapInstance.on('mousedown', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.mouseDown.emit(evt)));\n    }\n    if (events.mouseUp.observers.length) {\n      this.mapInstance.on('mouseup', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.mouseUp.emit(evt)));\n    }\n    if (events.mouseMove.observers.length) {\n      this.mapInstance.on('mousemove', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.mouseMove.emit(evt)));\n    }\n    if (events.click.observers.length) {\n      this.mapInstance.on('click', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.click.emit(evt)));\n    }\n    if (events.dblClick.observers.length) {\n      this.mapInstance.on('dblclick', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.dblClick.emit(evt)));\n    }\n    if (events.mouseEnter.observers.length) {\n      this.mapInstance.on('mouseenter', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.mouseEnter.emit(evt)));\n    }\n    if (events.mouseLeave.observers.length) {\n      this.mapInstance.on('mouseleave', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.mouseLeave.emit(evt)));\n    }\n    if (events.mouseOver.observers.length) {\n      this.mapInstance.on('mouseover', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.mouseOver.emit(evt)));\n    }\n    if (events.mouseOut.observers.length) {\n      this.mapInstance.on('mouseout', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.mouseOut.emit(evt)));\n    }\n    if (events.contextMenu.observers.length) {\n      this.mapInstance.on('contextmenu', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.contextMenu.emit(evt)));\n    }\n    if (events.touchStart.observers.length) {\n      this.mapInstance.on('touchstart', (evt: MapboxGl.MapTouchEvent) => this.zone.run(() => events.touchStart.emit(evt)));\n    }\n    if (events.touchEnd.observers.length) {\n      this.mapInstance.on('touchend', (evt: MapboxGl.MapTouchEvent) => this.zone.run(() => events.touchEnd.emit(evt)));\n    }\n    if (events.touchMove.observers.length) {\n      this.mapInstance.on('touchmove', (evt: MapboxGl.MapTouchEvent) => this.zone.run(() => events.touchMove.emit(evt)));\n    }\n    if (events.touchCancel.observers.length) {\n      this.mapInstance.on('touchcancel', (evt: MapboxGl.MapTouchEvent) => this.zone.run(() => events.touchCancel.emit(evt)));\n    }\n    if (events.wheel.observers.length) {\n      // MapboxGl.MapWheelEvent\n      this.mapInstance.on('wheel', (evt: any) => this.zone.run(() => events.wheel.emit(evt)));\n    }\n    if (events.moveStart.observers.length) {\n      this.mapInstance.on('movestart', (evt: DragEvent) => this.zone.run(() => events.moveStart.emit(evt)));\n    }\n    if (events.move.observers.length) {\n      this.mapInstance.on('move', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) => this.zone.run(() => events.move.emit(evt)));\n    }\n    if (events.moveEnd.observers.length) {\n      this.mapInstance.on('moveend', (evt: DragEvent) => this.zone.run(() => events.moveEnd.emit(evt)));\n    }\n    if (events.dragStart.observers.length) {\n      this.mapInstance.on('dragstart', (evt: DragEvent) => this.zone.run(() => events.dragStart.emit(evt)));\n    }\n    if (events.drag.observers.length) {\n      this.mapInstance.on('drag', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) => this.zone.run(() => events.drag.emit(evt)));\n    }\n    if (events.dragEnd.observers.length) {\n      this.mapInstance.on('dragend', (evt: DragEvent) => this.zone.run(() => events.dragEnd.emit(evt)));\n    }\n    if (events.zoomStart.observers.length) {\n      this.mapInstance.on('zoomstart', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) => this.zone.run(() =>\n        events.zoomStart.emit(evt)));\n    }\n    if (events.zoomEvt.observers.length) {\n      this.mapInstance.on('zoom', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) => this.zone.run(() => events.zoomEvt.emit(evt)));\n    }\n    if (events.zoomEnd.observers.length) {\n      this.mapInstance.on('zoomend', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) => this.zone.run(() =>\n        events.zoomEnd.emit(evt)));\n    }\n    if (events.rotateStart.observers.length) {\n      this.mapInstance.on('rotatestart', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) => this.zone.run(() =>\n        events.rotateStart.emit(evt)));\n    }\n    if (events.rotate.observers.length) {\n      this.mapInstance.on('rotate', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) => this.zone.run(() => events.rotate.emit(evt)));\n    }\n    if (events.rotateEnd.observers.length) {\n      this.mapInstance.on('rotateend', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) => this.zone.run(() =>\n        events.rotateEnd.emit(evt)));\n    }\n    if (events.pitchStart.observers.length) {\n      this.mapInstance.on('pitchstart', (evt: MapboxGl.EventData) => this.zone.run(() => events.pitchStart.emit(evt)));\n    }\n    if (events.pitchEvt.observers.length) {\n      this.mapInstance.on('pitch', (evt: MapboxGl.EventData) => this.zone.run(() => events.pitchEvt.emit(evt)));\n    }\n    if (events.pitchEnd.observers.length) {\n      this.mapInstance.on('pitchend', (evt: MapboxGl.EventData) => this.zone.run(() => events.pitchEnd.emit(evt)));\n    }\n    if (events.boxZoomStart.observers.length) {\n      this.mapInstance.on('boxzoomstart', (evt: MapboxGl.MapBoxZoomEvent) => this.zone.run(() => events.boxZoomStart.emit(evt)));\n    }\n    if (events.boxZoomEnd.observers.length) {\n      this.mapInstance.on('boxzoomend', (evt: MapboxGl.MapBoxZoomEvent) => this.zone.run(() => events.boxZoomEnd.emit(evt)));\n    }\n    if (events.boxZoomCancel.observers.length) {\n      this.mapInstance.on('boxzoomcancel', (evt: MapboxGl.MapBoxZoomEvent) => this.zone.run(() => events.boxZoomCancel.emit(evt)));\n    }\n    if (events.webGlContextLost.observers.length) {\n      this.mapInstance.on('webglcontextlost', () => this.zone.run(() => events.webGlContextLost.emit()));\n    }\n    if (events.webGlContextRestored.observers.length) {\n      this.mapInstance.on('webglcontextrestored', () => this.zone.run(() => events.webGlContextRestored.emit()));\n    }\n    if (events.render.observers.length) {\n      this.mapInstance.on('render', () => this.zone.run(() => events.render.emit()));\n    }\n    if (events.error.observers.length) {\n      this.mapInstance.on('error', (evt: MapboxGl.ErrorEvent) => this.zone.run(() => events.error.emit(evt)));\n    }\n    if (events.data.observers.length) {\n      this.mapInstance.on('data', (evt: MapboxGl.EventData) => this.zone.run(() => events.data.emit(evt)));\n    }\n    if (events.styleData.observers.length) {\n      this.mapInstance.on('styledata', (evt: MapboxGl.EventData) => this.zone.run(() => events.styleData.emit(evt)));\n    }\n    if (events.sourceData.observers.length) {\n      this.mapInstance.on('sourcedata', (evt: MapboxGl.EventData) => this.zone.run(() => events.sourceData.emit(evt)));\n    }\n    if (events.dataLoading.observers.length) {\n      this.mapInstance.on('dataloading', (evt: MapboxGl.EventData) => this.zone.run(() => events.dataLoading.emit(evt)));\n    }\n    if (events.styleDataLoading.observers.length) {\n      this.mapInstance.on('styledataloading', (evt: MapboxGl.EventData) => this.zone.run(() => events.styleDataLoading.emit(evt)));\n    }\n    if (events.sourceDataLoading.observers.length) {\n      this.mapInstance.on('sourcedataloading', (evt: MapboxGl.EventData) => this.zone.run(() => events.sourceDataLoading.emit(evt)));\n    }\n    if (events.styleImageMissing.observers.length) {\n      this.mapInstance.on(<any>'styleimagemissing', (evt: {id: string}) => this.zone.run(() => events.styleImageMissing.emit(evt)));\n    }\n    if (events.idle.observers.length) {\n      this.mapInstance.on('idle', () => this.zone.run(() => events.idle.emit()));\n    }\n  }\n\n  // TODO move this elsewhere\n  private assign(obj: any, prop: any, value: any) {\n    if (typeof prop === 'string') {\n      // tslint:disable-next-line:no-parameter-reassignment\n      prop = prop.split('.');\n    }\n    if (prop.length > 1) {\n      const e = prop.shift();\n      this.assign(obj[e] =\n        Object.prototype.toString.call(obj[e]) === '[object Object]'\n          ? obj[e]\n          : {},\n        prop,\n        value);\n    } else {\n      obj[prop[0]] = value;\n    }\n  }\n}\n","import { Control, IControl } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  ViewChild,\n} from '@angular/core';\n\nexport class CustomControl implements IControl {\n  constructor(\n    private container: HTMLElement\n  ) {\n  }\n\n  onAdd() {\n    return this.container;\n  }\n\n  onRemove() {\n    return this.container.parentNode!.removeChild(this.container);\n  }\n\n  getDefaultPosition() {\n    return 'top-right';\n  }\n}\n\n@Component({\n  selector: 'mgl-control',\n  template: '<div class=\"mapboxgl-ctrl\" #content><ng-content></ng-content></div>',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ControlComponent implements OnDestroy, AfterContentInit {\n  /* Init inputs */\n  @Input() position?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right';\n\n  @ViewChild('content') content: ElementRef;\n\n  control: Control | IControl;\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngAfterContentInit() {\n    if (this.content.nativeElement.childNodes.length) {\n      this.control = new CustomControl(this.content.nativeElement);\n      this.MapService.mapCreated$.subscribe(() => {\n        this.MapService.addControl(this.control!, this.position);\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.control) {\n      this.MapService.removeControl(this.control);\n    }\n  }\n}\n","import { AfterContentInit, Directive, Host, Input } from '@angular/core';\nimport { AttributionControl } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\nimport { ControlComponent } from './control.component';\n\n@Directive({\n  selector: '[mglAttribution]'\n})\nexport class AttributionControlDirective implements AfterContentInit {\n  /* Init inputs */\n  @Input() compact?: boolean;\n  @Input() customAttribution?: string | string[];\n\n  constructor(\n    private MapService: MapService,\n    @Host() private ControlComponent: ControlComponent\n  ) { }\n\n  ngAfterContentInit() {\n    this.MapService.mapCreated$.subscribe(() => {\n      if (this.ControlComponent.control) {\n        throw new Error('Another control is already set for this control');\n      }\n      const options: { compact?: boolean, customAttribution?: string | string[] } = {};\n      if (this.compact !== undefined) {\n        options.compact = this.compact;\n      }\n      if (this.customAttribution !== undefined) {\n        options.customAttribution = this.customAttribution;\n      }\n      this.ControlComponent.control = new AttributionControl(options);\n      this.MapService.addControl(this.ControlComponent.control, this.ControlComponent.position);\n    });\n  }\n}\n","import { AfterContentInit, Directive, Host, Input } from '@angular/core';\nimport { FullscreenControl } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\nimport { ControlComponent } from './control.component';\n\n@Directive({\n  selector: '[mglFullscreen]'\n})\nexport class FullscreenControlDirective implements AfterContentInit {\n  /* Init inputs */\n  @Input() container?: HTMLElement;\n\n  constructor(\n    private MapService: MapService,\n    @Host() private ControlComponent: ControlComponent\n  ) { }\n\n  ngAfterContentInit() {\n    this.MapService.mapCreated$.subscribe(() => {\n      if (this.ControlComponent.control) {\n        throw new Error('Another control is already set for this control');\n      }\n      const options: { container?: HTMLElement } = {};\n      if (this.container !== undefined) {\n        options.container = this.container;\n      }\n      // @ts-ignore\n      this.ControlComponent.control = new FullscreenControl(options); // @types/mapbox-gl update needed\n      this.MapService.addControl(this.ControlComponent.control, this.ControlComponent.position);\n    });\n  }\n}\n","import {\n  AfterContentInit,\n  Directive,\n  EventEmitter,\n  Host,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnChanges,\n  Optional,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport { MapService } from '../map/map.service';\nimport { GeocoderEvent } from '../map/map.types';\nimport { ControlComponent } from './control.component';\n\n// @ts-ignore\nimport * as MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\n\nexport const MAPBOX_GEOCODER_API_KEY = new InjectionToken('MapboxApiKey');\n\nexport interface LngLatLiteral {\n  latitude: number;\n  longitude: number;\n}\n\nexport interface Results extends GeoJSON.FeatureCollection<GeoJSON.Point> {\n  attribution: string;\n  query: string[];\n}\n\nexport interface Result extends GeoJSON.Feature<GeoJSON.Point> {\n  bbox: [number, number, number, number];\n  center: number[];\n  place_name: string;\n  place_type: string[];\n  relevance: number;\n  text: string;\n  address: string;\n  context: any[];\n}\n\n@Directive({\n  selector: '[mglGeocoder]'\n})\nexport class GeocoderControlDirective implements AfterContentInit, OnChanges, GeocoderEvent {\n  /* Init inputs */\n  @Input() country?: string;\n  @Input() placeholder?: string;\n  @Input() zoom?: number;\n  @Input() bbox?: [number, number, number, number];\n  @Input() types?: string;\n  @Input() flyTo?: boolean;\n  @Input() minLength?: number;\n  @Input() limit?: number;\n  @Input() language?: string;\n  @Input() accessToken?: string;\n  @Input() filter?: (feature: Result) => boolean;\n  @Input() localGeocoder?: (query: string) => Result[];\n\n  /* Dynamic inputs */\n  @Input() proximity?: LngLatLiteral;\n  @Input() searchInput?: string;\n\n  @Output() clear = new EventEmitter<void>();\n  @Output() loading = new EventEmitter<{ query: string }>();\n  @Output() results = new EventEmitter<Results>();\n  @Output() result = new EventEmitter<{ result: Result }>();\n  @Output() error = new EventEmitter<any>();\n\n  geocoder: any;\n\n  private lastResultId?: string | number;\n\n  constructor(\n    private MapService: MapService,\n    private zone: NgZone,\n    @Host() private ControlComponent: ControlComponent,\n    @Optional() @Inject(MAPBOX_GEOCODER_API_KEY) private readonly MAPBOX_GEOCODER_API_KEY: string\n  ) { }\n\n  ngAfterContentInit() {\n    this.MapService.mapCreated$.subscribe(() => {\n      if (this.ControlComponent.control) {\n        throw new Error('Another control is already set for this control');\n      }\n      const options = {\n        proximity: this.proximity,\n        country: this.country,\n        placeholder: this.placeholder,\n        zoom: this.zoom,\n        bbox: this.bbox,\n        types: this.types,\n        flyTo: this.flyTo,\n        minLength: this.minLength,\n        limit: this.limit,\n        language: this.language,\n        filter: this.filter,\n        localGeocoder: this.localGeocoder,\n        accessToken: this.accessToken || this.MAPBOX_GEOCODER_API_KEY\n      };\n\n      Object.keys(options).forEach((key: string) => {\n        const tkey = <keyof typeof options>key;\n        if (options[tkey] === undefined) {\n          delete options[tkey];\n        }\n      });\n      this.geocoder = new MapboxGeocoder(options);\n      this.hookEvents(this);\n      this.addControl();\n    });\n    if (this.searchInput) {\n      this.MapService.mapLoaded$.subscribe(() => {\n        this.geocoder.query(this.searchInput);\n      });\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.geocoder) {\n      return;\n    }\n    if (changes.proximity && !changes.proximity.isFirstChange()) {\n      this.geocoder.setProximity(changes.proximity.currentValue);\n    }\n    if (changes.searchInput) {\n      this.geocoder.query(this.searchInput);\n    }\n  }\n\n  private addControl() {\n    this.ControlComponent.control = this.geocoder;\n    this.MapService.addControl(\n      this.ControlComponent.control,\n      this.ControlComponent.position\n    );\n  }\n\n  private hookEvents(events: GeocoderEvent) {\n    if (events.results.observers.length) {\n      this.geocoder.on('results', (evt: Results) => this.zone.run(() => events.results.emit(evt)));\n    }\n    if (events.result.observers.length) {\n      this.geocoder.on('result', (evt: { result: Result }) => {\n        // Workaroud issue https://github.com/mapbox/mapbox-gl-geocoder/issues/99\n        if (this.lastResultId !== evt.result.id) {\n          this.lastResultId = evt.result.id;\n          this.zone.run(() => events.result.emit(evt));\n        }\n      });\n    }\n    if (events.error.observers.length) {\n      this.geocoder.on('error', (evt: any) => this.zone.run(() => events.error.emit(evt)));\n    }\n    if (events.loading.observers.length) {\n      this.geocoder.on('loading', (evt: { query: string }) => this.zone.run(() => events.loading.emit(evt)));\n    }\n    if (events.clear.observers.length) {\n      this.geocoder.on('clear', () => this.zone.run(() => events.clear.emit()));\n    }\n\n  }\n}\n","import { AfterContentInit, Directive, Host, Input } from '@angular/core';\nimport { GeolocateControl, FitBoundsOptions } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\nimport { ControlComponent } from './control.component';\n\n@Directive({\n  selector: '[mglGeolocate]'\n})\nexport class GeolocateControlDirective implements AfterContentInit {\n  /* Init inputs */\n  @Input() positionOptions?: PositionOptions;\n  @Input() fitBoundsOptions?: FitBoundsOptions;\n  @Input() trackUserLocation?: boolean;\n  @Input() showUserLocation?: boolean;\n\n  constructor(\n    private MapService: MapService,\n    @Host() private ControlComponent: ControlComponent\n  ) { }\n\n  ngAfterContentInit() {\n    this.MapService.mapCreated$.subscribe(() => {\n      if (this.ControlComponent.control) {\n        throw new Error('Another control is already set for this control');\n      }\n      const options = {\n        positionOptions: this.positionOptions,\n        fitBoundsOptions: this.fitBoundsOptions,\n        trackUserLocation: this.trackUserLocation,\n        showUserLocation: this.showUserLocation\n      };\n\n      Object.keys(options)\n        .forEach((key: string) => {\n          const tkey = <keyof typeof options>key;\n          if (options[tkey] === undefined) {\n            delete options[tkey];\n          }\n        });\n      this.ControlComponent.control = new GeolocateControl(options);\n      this.MapService.addControl(this.ControlComponent.control, this.ControlComponent.position);\n    });\n  }\n}\n","import { AfterContentInit, Directive, Host, Input } from '@angular/core';\nimport { NavigationControl } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\nimport { ControlComponent } from './control.component';\n\n@Directive({\n  selector: '[mglNavigation]'\n})\nexport class NavigationControlDirective implements AfterContentInit {\n  /* Init inputs */\n  @Input() showCompass?: boolean;\n  @Input() showZoom?: boolean;\n\n  constructor(\n    private MapService: MapService,\n    @Host() private ControlComponent: ControlComponent\n  ) { }\n\n  ngAfterContentInit() {\n    this.MapService.mapCreated$.subscribe(() => {\n      if (this.ControlComponent.control) {\n        throw new Error('Another control is already set for this control');\n      }\n      const options: { showCompass?: boolean, showZoom?: boolean } = {};\n      if (this.showCompass !== undefined) {\n        options.showCompass = this.showCompass;\n      }\n      if (this.showZoom !== undefined) {\n        options.showZoom = this.showZoom;\n      }\n      this.ControlComponent.control = new NavigationControl(options);\n      this.MapService.addControl(this.ControlComponent.control, this.ControlComponent.position);\n    });\n  }\n}\n","import { AfterContentInit, Directive, Host, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { ScaleControl } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\nimport { ControlComponent } from './control.component';\n\n@Directive({\n  selector: '[mglScale]'\n})\nexport class ScaleControlDirective implements AfterContentInit, OnChanges {\n  /* Init inputs */\n  @Input() maxWidth?: number;\n\n  /* Dynamic inputs */\n  @Input() unit?: 'imperial' | 'metric' | 'nautical';\n\n  constructor(\n    private MapService: MapService,\n    @Host() private ControlComponent: ControlComponent\n  ) { }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.unit && !changes.unit.isFirstChange()) {\n      (<any>this.ControlComponent.control).setUnit(changes.unit.currentValue);\n    }\n  }\n\n  ngAfterContentInit() {\n    this.MapService.mapCreated$.subscribe(() => {\n      if (this.ControlComponent.control) {\n        throw new Error('Another control is already set for this control');\n      }\n      const options: { maxWidth?: number, unit?: string } = {};\n      if (this.maxWidth !== undefined) {\n        options.maxWidth = this.maxWidth;\n      }\n      if (this.unit !== undefined) {\n        options.unit = this.unit;\n      }\n      this.ControlComponent.control = new ScaleControl(options);\n      this.MapService.addControl(this.ControlComponent.control, this.ControlComponent.position);\n    });\n  }\n}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport {\n  BackgroundLayout,\n  BackgroundPaint,\n  CircleLayout,\n  CirclePaint,\n  FillExtrusionLayout,\n  FillExtrusionPaint,\n  FillLayout,\n  FillPaint,\n  GeoJSONSource,\n  GeoJSONSourceRaw,\n  ImageSource,\n  Layer,\n  LineLayout,\n  LinePaint,\n  RasterLayout,\n  RasterPaint,\n  RasterSource,\n  SymbolLayout,\n  SymbolPaint,\n  VectorSource,\n  VideoSource,\n  MapLayerMouseEvent\n} from 'mapbox-gl';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { filter, mapTo, switchMap, startWith } from 'rxjs/operators';\nimport { MapService } from '../map/map.service';\n\n@Component({\n  selector: 'mgl-layer',\n  template: ''\n})\nexport class LayerComponent implements OnInit, OnDestroy, OnChanges, Layer {\n  /* Init inputs */\n  @Input() id: string;\n  @Input() source?: string | VectorSource | RasterSource | GeoJSONSource | ImageSource | VideoSource | GeoJSONSourceRaw;\n  @Input() type: 'symbol' | 'fill' | 'line' | 'circle' | 'fill-extrusion' | 'raster' | 'background';\n  @Input() metadata?: any;\n  @Input() sourceLayer?: string;\n\n  /* Dynamic inputs */\n  @Input() filter?: any[];\n  @Input() layout?: BackgroundLayout | FillLayout | FillExtrusionLayout | LineLayout | SymbolLayout | RasterLayout | CircleLayout;\n  @Input() paint?: BackgroundPaint | FillPaint | FillExtrusionPaint | LinePaint | SymbolPaint | RasterPaint | CirclePaint;\n  @Input() before?: string;\n  @Input() minzoom?: number;\n  @Input() maxzoom?: number;\n\n  @Output() click = new EventEmitter<MapLayerMouseEvent>();\n  @Output() mouseEnter = new EventEmitter<MapLayerMouseEvent>();\n  @Output() mouseLeave = new EventEmitter<MapLayerMouseEvent>();\n  @Output() mouseMove = new EventEmitter<MapLayerMouseEvent>();\n\n  private layerAdded = false;\n  private sub: Subscription;\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngOnInit() {\n    this.sub = this.MapService.mapLoaded$.pipe(\n      switchMap(() => fromEvent(<any>this.MapService.mapInstance, 'styledata').pipe(\n        mapTo(false),\n        filter(() => !this.MapService.mapInstance.getLayer(this.id)),\n        startWith(true)\n      )),\n    ).subscribe((bindEvents: boolean) => this.init(bindEvents));\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.layerAdded) {\n      return;\n    }\n    if (changes.paint && !changes.paint.isFirstChange()) {\n      this.MapService.setAllLayerPaintProperty(this.id, changes.paint.currentValue!);\n    }\n    if (changes.layout && !changes.layout.isFirstChange()) {\n      this.MapService.setAllLayerLayoutProperty(this.id, changes.layout.currentValue!);\n    }\n    if (changes.filter && !changes.filter.isFirstChange()) {\n      this.MapService.setLayerFilter(this.id, changes.filter.currentValue!);\n    }\n    if (changes.before && !changes.before.isFirstChange()) {\n      this.MapService.setLayerBefore(this.id, changes.before.currentValue!);\n    }\n    if (\n      changes.minzoom && !changes.minzoom.isFirstChange() ||\n      changes.maxzoom && !changes.maxzoom.isFirstChange()\n    ) {\n      this.MapService.setLayerZoomRange(this.id, this.minzoom, this.maxzoom);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.layerAdded) {\n      this.MapService.removeLayer(this.id);\n    }\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n\n  private init(bindEvents: boolean) {\n    const layer = {\n      layerOptions: {\n        id: this.id,\n        type: this.type,\n        source: this.source,\n        metadata: this.metadata,\n        'source-layer': this.sourceLayer,\n        minzoom: this.minzoom,\n        maxzoom: this.maxzoom,\n        filter: this.filter,\n        layout: this.layout,\n        paint: this.paint\n      },\n      layerEvents: {\n        click: this.click,\n        mouseEnter: this.mouseEnter,\n        mouseLeave: this.mouseLeave,\n        mouseMove: this.mouseMove\n      }\n    };\n    this.MapService.addLayer(layer, bindEvents, this.before);\n    this.layerAdded = true;\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation,\n  EventEmitter\n} from '@angular/core';\nimport { LngLatLike, Marker, PointLike, Anchor } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\n\n@Component({\n  selector: 'mgl-marker',\n  template: '<div [class]=\"className\" #content><ng-content></ng-content></div>',\n  styles: [`\n    .mapboxgl-marker {\n      line-height: 0;\n    }\n  `],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MarkerComponent implements OnChanges, OnDestroy, AfterViewInit, OnInit {\n  /* Init input */\n  @Input() offset?: PointLike;\n  @Input() anchor?: Anchor;\n\n  /* Dynamic input */\n  @Input() feature?: GeoJSON.Feature<GeoJSON.Point>;\n  @Input() lngLat?: LngLatLike;\n  @Input() draggable?: boolean;\n  @Input() popupShown?: boolean;\n  @Input() className: string;\n\n  @Output() dragStart = new EventEmitter<Marker>();\n  @Output() drag = new EventEmitter<Marker>();\n  @Output() dragEnd = new EventEmitter<Marker>();\n\n  @ViewChild('content') content: ElementRef;\n\n  markerInstance?: Marker;\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngOnInit() {\n    if (this.feature && this.lngLat) {\n      throw new Error('feature and lngLat input are mutually exclusive');\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.lngLat && !changes.lngLat.isFirstChange()) {\n      this.markerInstance!.setLngLat(this.lngLat!);\n    }\n    if (changes.feature && !changes.feature.isFirstChange()) {\n      this.markerInstance!.setLngLat(<[number, number]>this.feature!.geometry!.coordinates);\n    }\n    if (changes.draggable && !changes.draggable.isFirstChange()) {\n      this.markerInstance!.setDraggable(!!this.draggable);\n    }\n    if (changes.popupShown && !changes.popupShown.isFirstChange()) {\n      changes.popupShown.currentValue\n        ? this.markerInstance!.getPopup().addTo(this.MapService.mapInstance)\n        : this.markerInstance!.getPopup().remove();\n    }\n  }\n\n  ngAfterViewInit() {\n    this.MapService.mapCreated$.subscribe(() => {\n      this.markerInstance = this.MapService.addMarker({\n        markersOptions: {\n          offset: this.offset,\n          anchor: this.anchor,\n          draggable: !!this.draggable,\n          element: this.content.nativeElement,\n          feature: this.feature,\n          lngLat: this.lngLat\n        },\n        markersEvents: {\n          dragStart: this.dragStart,\n          drag: this.drag,\n          dragEnd: this.dragEnd\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.MapService.removeMarker(this.markerInstance!);\n    this.markerInstance = undefined;\n  }\n\n  togglePopup() {\n    this.markerInstance!.togglePopup();\n  }\n\n  updateCoordinates(coordinates: number[]) {\n    this.markerInstance!.setLngLat(<[number, number]>coordinates);\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges, NgZone } from '@angular/core';\nimport { GeoJSONSource, GeoJSONSourceOptions } from 'mapbox-gl';\nimport { fromEvent, Subject, Subscription } from 'rxjs';\nimport { debounceTime, filter } from 'rxjs/operators';\nimport { MapService } from '../../map/map.service';\n\n@Component({\n  selector: 'mgl-geojson-source',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GeoJSONSourceComponent implements OnInit, OnDestroy, OnChanges, GeoJSONSourceOptions {\n  /* Init inputs */\n  @Input() id: string;\n\n  /* Dynamic inputs */\n  @Input() data?: GeoJSON.Feature<GeoJSON.Geometry> | GeoJSON.FeatureCollection<GeoJSON.Geometry> | string;\n  @Input() minzoom?: number;\n  @Input() maxzoom?: number;\n  @Input() buffer?: number;\n  @Input() tolerance?: number;\n  @Input() cluster?: boolean;\n  @Input() clusterRadius?: number;\n  @Input() clusterMaxZoom?: number;\n  @Input() clusterProperties?: any;\n\n  updateFeatureData = new Subject();\n\n  private sub = new Subscription();\n  private sourceAdded = false;\n  private featureIdCounter = 0;\n\n  constructor(\n    private MapService: MapService,\n    private zone: NgZone\n  ) { }\n\n  ngOnInit() {\n    if (!this.data) {\n      this.data = {\n        type: 'FeatureCollection',\n        features: []\n      };\n    }\n    this.MapService.mapLoaded$.subscribe(() => {\n      this.init();\n      const sub = fromEvent(<any>this.MapService.mapInstance, 'styledata').pipe(\n        filter(() => !this.MapService.mapInstance.getSource(this.id))\n      ).subscribe(() => {\n        this.init();\n      });\n      this.sub.add(sub);\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.sourceAdded) {\n      return;\n    }\n    if (\n      changes.maxzoom && !changes.maxzoom.isFirstChange() ||\n      changes.minzoom && !changes.minzoom.isFirstChange() ||\n      changes.buffer && !changes.buffer.isFirstChange() ||\n      changes.tolerance && !changes.tolerance.isFirstChange() ||\n      changes.cluster && !changes.cluster.isFirstChange() ||\n      changes.clusterRadius && !changes.clusterRadius.isFirstChange() ||\n      changes.clusterMaxZoom && !changes.clusterMaxZoom.isFirstChange() ||\n      changes.clusterProperties && !changes.clusterProperties.isFirstChange()\n    ) {\n      this.ngOnDestroy();\n      this.ngOnInit();\n    }\n    if (changes.data && !changes.data.isFirstChange()) {\n      const source = this.MapService.getSource<GeoJSONSource>(this.id);\n      source.setData(this.data!);\n    }\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n    if (this.sourceAdded) {\n      this.MapService.removeSource(this.id);\n    }\n  }\n\n  /**\n   * For clustered sources, fetches the zoom at which the given cluster expands.\n   * @param clusterId The value of the cluster's cluster_id property.\n   */\n  async getClusterExpansionZoom(clusterId: number) {\n    const source = this.MapService.getSource<GeoJSONSource>(this.id);\n    return this.zone.run(async () => {\n      return new Promise<number>((resolve, reject) => {\n        source.getClusterExpansionZoom(clusterId, (error, zoom) => {\n          if (error) {\n            reject(error);\n          } else {\n            resolve(zoom);\n          }\n        });\n      });\n    });\n  }\n\n  /**\n   * For clustered sources, fetches the children of the given cluster on the next zoom level (as an array of GeoJSON features).\n   * @param clusterId The value of the cluster's cluster_id property.\n   */\n  async getClusterChildren(clusterId: number) {\n    const source = this.MapService.getSource<GeoJSONSource>(this.id);\n    return this.zone.run(async () => {\n      return new Promise<GeoJSON.Feature<GeoJSON.Geometry>[]>((resolve, reject) => {\n        source.getClusterChildren(clusterId, (error, features) => {\n          if (error) {\n            reject(error);\n          } else {\n            resolve(features);\n          }\n        });\n      });\n    });\n  }\n\n  /**\n   * For clustered sources, fetches the original points that belong to the cluster (as an array of GeoJSON features).\n   * @param clusterId The value of the cluster's cluster_id property.\n   * @param limit The maximum number of features to return.\n   * @param offset The number of features to skip (e.g. for pagination).\n   */\n  async getClusterLeaves(clusterId: number, limit: number, offset: number) {\n    const source = this.MapService.getSource<GeoJSONSource>(this.id);\n    return this.zone.run(async () => {\n      return new Promise<GeoJSON.Feature<GeoJSON.Geometry>[]>((resolve, reject) => {\n        source.getClusterLeaves(clusterId, limit, offset, (error, features) => {\n          if (error) {\n            reject(error);\n          } else {\n            resolve(features);\n          }\n        });\n      });\n    });\n  }\n\n  _addFeature(feature: GeoJSON.Feature<GeoJSON.GeometryObject>) {\n    const collection = <GeoJSON.FeatureCollection<GeoJSON.GeometryObject>>this.data;\n    collection.features.push(feature);\n    this.updateFeatureData.next();\n  }\n\n  _removeFeature(feature: GeoJSON.Feature<GeoJSON.GeometryObject>) {\n    const collection = <GeoJSON.FeatureCollection<GeoJSON.GeometryObject>>this.data;\n    const index = collection.features.indexOf(feature);\n    if (index > -1) {\n      collection.features.splice(index, 1);\n    }\n    this.updateFeatureData.next();\n  }\n\n  _getNewFeatureId() {\n    return ++this.featureIdCounter;\n  }\n\n  private init() {\n    this.MapService.addSource(this.id, <any>{ // clusterProperties missing in typings\n      type: 'geojson',\n      data: this.data,\n      maxzoom: this.maxzoom,\n      minzoom: this.minzoom,\n      buffer: this.buffer,\n      tolerance: this.tolerance,\n      cluster: this.cluster,\n      clusterRadius: this.clusterRadius,\n      clusterMaxZoom: this.clusterMaxZoom,\n      clusterProperties: this.clusterProperties\n    });\n    const sub = this.updateFeatureData.pipe(debounceTime(0)).subscribe(() => {\n      const source = this.MapService.getSource<GeoJSONSource>(this.id);\n      source.setData(this.data!);\n    });\n    this.sub.add(sub);\n    this.sourceAdded = true;\n  }\n}\n","import { Component, forwardRef, Inject, Input, OnDestroy, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { GeoJSONSourceComponent } from './geojson-source.component';\n\n@Component({\n  selector: 'mgl-feature',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FeatureComponent implements OnInit, OnDestroy, GeoJSON.Feature<GeoJSON.GeometryObject> {\n  /* Init inputs */\n  @Input() id?: number; // FIXME number only for now https://github.com/mapbox/mapbox-gl-js/issues/2716\n  @Input() geometry: GeoJSON.GeometryObject;\n  @Input() properties: any;\n  type: 'Feature' = 'Feature';\n\n  private feature: GeoJSON.Feature<GeoJSON.GeometryObject>;\n\n  constructor(\n    @Inject(forwardRef(() => GeoJSONSourceComponent)) private GeoJSONSourceComponent: GeoJSONSourceComponent\n  ) { }\n\n  ngOnInit() {\n    if (!this.id) {\n      this.id = this.GeoJSONSourceComponent._getNewFeatureId();\n    }\n    this.feature = {\n      type: this.type,\n      geometry: this.geometry,\n      properties: this.properties ? this.properties : {}\n    };\n    this.feature.id = this.id;\n    this.GeoJSONSourceComponent._addFeature(this.feature);\n  }\n\n  ngOnDestroy() {\n    this.GeoJSONSourceComponent._removeFeature(this.feature);\n  }\n\n  updateCoordinates(coordinates: number[]) {\n    (<GeoJSON.Point>this.feature.geometry).coordinates = coordinates;\n    this.GeoJSONSourceComponent.updateFeatureData.next();\n  }\n}\n","import {\n  Directive,\n  EventEmitter,\n  Host,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output\n} from '@angular/core';\nimport { MapMouseEvent } from 'mapbox-gl';\nimport { fromEvent, Observable, ReplaySubject } from 'rxjs';\nimport { filter, switchMap, take, takeUntil, tap } from 'rxjs/operators';\nimport { LayerComponent } from '../layer/layer.component';\nimport { MapService } from '../map/map.service';\nimport { MarkerComponent } from '../marker/marker.component';\nimport { FeatureComponent } from '../source/geojson/feature.component';\n\n@Directive({\n  selector: '[mglDraggable]'\n})\nexport class DraggableDirective implements OnInit, OnDestroy {\n  // tslint:disable-next-line:no-input-rename\n  @Input('mglDraggable') layer?: LayerComponent;\n\n  @Output() dragStart = new EventEmitter<MapMouseEvent>();\n  @Output() dragEnd = new EventEmitter<MapMouseEvent>();\n  @Output() drag = new EventEmitter<MapMouseEvent>();\n\n  private destroyed$: ReplaySubject<void> = new ReplaySubject(1);\n\n  constructor(\n    private MapService: MapService,\n    private NgZone: NgZone,\n    @Optional() @Host() private FeatureComponent?: FeatureComponent,\n    @Optional() @Host() private MarkerComponent?: MarkerComponent\n  ) { }\n\n  ngOnInit() {\n    let enter$;\n    let leave$;\n    let updateCoords;\n    if (this.MarkerComponent) {\n      console.warn('[ngx-mapbox-gl] mglDraggable on Marker is deprecated, use draggable input instead');\n      let markerElement = (<Element>this.MarkerComponent.content.nativeElement);\n      if (markerElement.children.length === 1) {\n        markerElement = markerElement.children[0];\n      }\n      enter$ = fromEvent(markerElement, 'mouseenter');\n      leave$ = fromEvent(markerElement, 'mouseleave');\n      updateCoords = this.MarkerComponent.updateCoordinates.bind(this.MarkerComponent);\n    } else if (this.FeatureComponent && this.layer) {\n      enter$ = this.layer.mouseEnter;\n      leave$ = this.layer.mouseLeave;\n      updateCoords = this.FeatureComponent.updateCoordinates.bind(this.FeatureComponent);\n      if (this.FeatureComponent.geometry.type !== 'Point') {\n        throw new Error('mglDraggable only support point feature');\n      }\n    } else {\n      throw new Error('mglDraggable can only be used on Feature (with a layer as input) or Marker');\n    }\n\n    this.handleDraggable(enter$, leave$, updateCoords);\n  }\n\n  ngOnDestroy() {\n    this.destroyed$.next(undefined);\n    this.destroyed$.complete();\n  }\n\n  private handleDraggable(enter$: Observable<any>, leave$: Observable<any>, updateCoords: (coord: number[]) => void) {\n    let moving = false;\n    let inside = false;\n    this.MapService.mapCreated$.subscribe(() => {\n      const mouseUp$ = fromEvent<MapMouseEvent>(<any>this.MapService.mapInstance, 'mouseup');\n      const dragStart$ = enter$.pipe(\n        takeUntil(this.destroyed$),\n        filter(() => !moving),\n        filter((evt) => this.filterFeature(evt)),\n        tap(() => {\n          inside = true;\n          this.MapService.changeCanvasCursor('move');\n          this.MapService.updateDragPan(false);\n        }),\n        switchMap(() =>\n          fromEvent<MapMouseEvent>(<any>this.MapService.mapInstance, 'mousedown')\n            .pipe(takeUntil(leave$))\n        )\n      );\n      const dragging$ = dragStart$.pipe(\n        switchMap(() => fromEvent<MapMouseEvent>(<any>this.MapService.mapInstance, 'mousemove')\n          .pipe(takeUntil(mouseUp$))\n        )\n      );\n      const dragEnd$ = dragStart$.pipe(\n        switchMap(() => mouseUp$.pipe(take(1)))\n      );\n      dragStart$.subscribe((evt) => {\n        moving = true;\n        if (this.dragStart.observers.length) {\n          this.NgZone.run(() => this.dragStart.emit(evt));\n        }\n      });\n      dragging$.subscribe((evt) => {\n        updateCoords([evt.lngLat.lng, evt.lngLat.lat]);\n        if (this.drag.observers.length) {\n          this.NgZone.run(() => this.drag.emit(evt));\n        }\n      });\n      dragEnd$.subscribe((evt) => {\n        moving = false;\n        if (this.dragEnd.observers.length) {\n          this.NgZone.run(() => this.dragEnd.emit(evt));\n        }\n        if (!inside) { // It's possible to dragEnd outside the target (small input lag)\n          this.MapService.changeCanvasCursor('');\n          this.MapService.updateDragPan(true);\n        }\n      });\n      leave$.pipe(\n        takeUntil(this.destroyed$),\n        tap(() => inside = false),\n        filter(() => !moving)\n      ).subscribe(() => {\n        this.MapService.changeCanvasCursor('');\n        this.MapService.updateDragPan(true);\n      });\n    });\n  }\n\n  private filterFeature(evt: MapMouseEvent) {\n    if (this.FeatureComponent && this.layer) {\n      const feature: GeoJSON.Feature<any> = this.MapService.queryRenderedFeatures(\n        evt.point,\n        {\n          layers: [this.layer.id],\n          filter: [\n            'all',\n            ['==', '$type', 'Point'],\n            ['==', '$id', this.FeatureComponent.id]\n          ]\n        }\n      )[0];\n      if (!feature) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\n\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { filter, startWith, switchMap } from 'rxjs/operators';\nimport { MapService } from '../map/map.service';\nimport { MapImageData, MapImageOptions } from '../map/map.types';\n\n@Component({\n  selector: 'mgl-image',\n  template: ''\n})\nexport class ImageComponent implements OnInit, OnDestroy, OnChanges {\n  /* Init inputs */\n  @Input() id: string;\n\n  /* Dynamic inputs */\n  @Input() data?: MapImageData;\n  @Input() options?: MapImageOptions;\n  @Input() url?: string;\n\n  @Output() error = new EventEmitter<{ status: number }>();\n  @Output() loaded = new EventEmitter<void>();\n\n  private isAdded = false;\n  private isAdding = false;\n  private sub: Subscription;\n\n  constructor(\n    private MapService: MapService,\n    private zone: NgZone\n  ) { }\n\n  ngOnInit() {\n    this.sub = this.MapService.mapLoaded$.pipe(\n      switchMap(() => fromEvent(<any>this.MapService.mapInstance, 'styledata').pipe(\n        startWith(undefined),\n        filter(() => !this.isAdding && !this.MapService.mapInstance.hasImage(this.id))\n      )),\n    ).subscribe(() => this.init());\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (\n      changes.data && !changes.data.isFirstChange() ||\n      changes.options && !changes.options.isFirstChange() ||\n      changes.url && !changes.url.isFirstChange()\n    ) {\n      this.ngOnDestroy();\n      this.ngOnInit();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.isAdded) {\n      this.MapService.removeImage(this.id);\n    }\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n\n  private async init() {\n    this.isAdding = true;\n    if (this.data) {\n      this.MapService.addImage(\n        this.id,\n        this.data,\n        this.options\n      );\n      this.isAdded = true;\n      this.isAdding = false;\n    } else if (this.url) {\n      try {\n        await this.MapService.loadAndAddImage(\n          this.id,\n          this.url,\n          this.options\n        );\n        this.isAdded = true;\n        this.isAdding = false;\n        this.zone.run(() => {\n          this.loaded.emit();\n        });\n      } catch (error) {\n        this.zone.run(() => {\n          this.error.emit(error);\n        });\n      }\n    }\n  }\n}\n","import {\n  AnimationOptions,\n  EventData,\n  FitBoundsOptions,\n  LngLatBoundsLike,\n  LngLatLike,\n  Map,\n  MapBoxZoomEvent,\n  MapMouseEvent,\n  MapTouchEvent,\n  PointLike,\n  Style\n} from 'mapbox-gl';\nimport { MapService, MovingOptions } from './map.service';\nimport { MapEvent } from './map.types';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\n\n@Component({\n  selector: 'mgl-map',\n  template: '<div #container></div>',\n  styles: [`\n  :host {\n    display: block;\n  }\n  div {\n    height: 100%;\n    width: 100%;\n  }\n  `],\n  providers: [\n    MapService\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MapComponent implements OnChanges, OnDestroy, AfterViewInit, MapEvent {\n  /* Init inputs */\n  @Input() accessToken?: string;\n  @Input() customMapboxApiUrl?: string;\n  @Input() hash?: boolean;\n  @Input() refreshExpiredTiles?: boolean;\n  @Input() failIfMajorPerformanceCaveat?: boolean;\n  @Input() classes?: string[];\n  @Input() bearingSnap?: number;\n  @Input() interactive?: boolean;\n  @Input() pitchWithRotate?: boolean;\n  @Input() attributionControl?: boolean;\n  @Input() logoPosition?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right';\n  @Input() maxTileCacheSize?: number;\n  @Input() localIdeographFontFamily?: string;\n  @Input() preserveDrawingBuffer?: boolean;\n  @Input() renderWorldCopies?: boolean;\n  @Input() trackResize?: boolean;\n  @Input() transformRequest?: Function;\n  @Input() bounds?: LngLatBoundsLike; // Use fitBounds for dynamic input\n  @Input() antialias?: boolean;\n\n  /* Dynamic inputs */\n  @Input() minZoom?: number;\n  @Input() maxZoom?: number;\n  @Input() scrollZoom?: boolean;\n  @Input() dragRotate?: boolean;\n  @Input() touchZoomRotate?: boolean;\n  @Input() doubleClickZoom?: boolean;\n  @Input() keyboard?: boolean;\n  @Input() dragPan?: boolean;\n  @Input() boxZoom?: boolean;\n  @Input() style: Style | string;\n  @Input() center?: LngLatLike;\n  @Input() maxBounds?: LngLatBoundsLike;\n  @Input() zoom?: [number];\n  @Input() bearing?: [number];\n  @Input() pitch?: [number];\n  @Input() fitBoundsOptions?: FitBoundsOptions; // First value goes to options.fitBoundsOptions. Subsequents changes are passed to fitBounds\n\n  /* Added by ngx-mapbox-gl */\n  @Input() movingMethod: 'jumpTo' | 'easeTo' | 'flyTo' = 'flyTo';\n  @Input() movingOptions?: MovingOptions;\n  // => First value is a alias to bounds input (since mapbox 0.53.0). Subsequents changes are passed to fitBounds\n  @Input() fitBounds?: LngLatBoundsLike;\n  @Input() fitScreenCoordinates?: [PointLike, PointLike];\n  @Input() centerWithPanTo?: boolean;\n  @Input() panToOptions?: AnimationOptions;\n  @Input() cursorStyle?: string;\n\n  @Output() resize = new EventEmitter<void>();\n  @Output() remove = new EventEmitter<void>();\n  @Output() mouseDown = new EventEmitter<MapMouseEvent>();\n  @Output() mouseUp = new EventEmitter<MapMouseEvent>();\n  @Output() mouseMove = new EventEmitter<MapMouseEvent>();\n  @Output() click = new EventEmitter<MapMouseEvent>();\n  @Output() dblClick = new EventEmitter<MapMouseEvent>();\n  @Output() mouseEnter = new EventEmitter<MapMouseEvent>();\n  @Output() mouseLeave = new EventEmitter<MapMouseEvent>();\n  @Output() mouseOver = new EventEmitter<MapMouseEvent>();\n  @Output() mouseOut = new EventEmitter<MapMouseEvent>();\n  @Output() contextMenu = new EventEmitter<MapMouseEvent>();\n  @Output() touchStart = new EventEmitter<MapTouchEvent>();\n  @Output() touchEnd = new EventEmitter<MapTouchEvent>();\n  @Output() touchMove = new EventEmitter<MapTouchEvent>();\n  @Output() touchCancel = new EventEmitter<MapTouchEvent>();\n  @Output() wheel = new EventEmitter<any>(); // TODO MapWheelEvent\n  @Output() moveStart = new EventEmitter<DragEvent>(); // TODO Check type\n  @Output() move = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() moveEnd = new EventEmitter<DragEvent>();\n  @Output() dragStart = new EventEmitter<DragEvent>();\n  @Output() drag = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() dragEnd = new EventEmitter<DragEvent>();\n  @Output() zoomStart = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() zoomEvt = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() zoomEnd = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() rotateStart = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() rotate = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() rotateEnd = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() pitchStart = new EventEmitter<EventData>();\n  @Output() pitchEvt = new EventEmitter<EventData>();\n  @Output() pitchEnd = new EventEmitter<EventData>();\n  @Output() boxZoomStart = new EventEmitter<MapBoxZoomEvent>();\n  @Output() boxZoomEnd = new EventEmitter<MapBoxZoomEvent>();\n  @Output() boxZoomCancel = new EventEmitter<MapBoxZoomEvent>();\n  @Output() webGlContextLost = new EventEmitter<void>();\n  @Output() webGlContextRestored = new EventEmitter<void>();\n  @Output() load = new EventEmitter<any>();\n  @Output() idle = new EventEmitter<void>();\n  @Output() render = new EventEmitter<void>();\n  @Output() error = new EventEmitter<any>(); // TODO Check type\n  @Output() data = new EventEmitter<EventData>();\n  @Output() styleData = new EventEmitter<EventData>();\n  @Output() sourceData = new EventEmitter<EventData>();\n  @Output() dataLoading = new EventEmitter<EventData>();\n  @Output() styleDataLoading = new EventEmitter<EventData>();\n  @Output() sourceDataLoading = new EventEmitter<EventData>();\n  @Output() styleImageMissing = new EventEmitter<{id: string}>();\n\n  get mapInstance(): Map {\n    return this.MapService.mapInstance;\n  }\n\n  @ViewChild('container') mapContainer: ElementRef;\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngAfterViewInit() {\n    this.MapService.setup({\n      accessToken: this.accessToken,\n      customMapboxApiUrl: this.customMapboxApiUrl,\n      mapOptions: {\n        container: this.mapContainer.nativeElement,\n        minZoom: this.minZoom,\n        maxZoom: this.maxZoom,\n        style: this.style,\n        hash: this.hash,\n        interactive: this.interactive,\n        bearingSnap: this.bearingSnap,\n        pitchWithRotate: this.pitchWithRotate,\n        classes: this.classes,\n        attributionControl: this.attributionControl,\n        logoPosition: this.logoPosition,\n        failIfMajorPerformanceCaveat: this.failIfMajorPerformanceCaveat,\n        preserveDrawingBuffer: this.preserveDrawingBuffer,\n        refreshExpiredTiles: this.refreshExpiredTiles,\n        maxBounds: this.maxBounds,\n        scrollZoom: this.scrollZoom,\n        boxZoom: this.boxZoom,\n        dragRotate: this.dragRotate,\n        dragPan: this.dragPan,\n        keyboard: this.keyboard,\n        doubleClickZoom: this.doubleClickZoom,\n        touchZoomRotate: this.touchZoomRotate,\n        trackResize: this.trackResize,\n        center: this.center,\n        zoom: this.zoom,\n        bearing: this.bearing,\n        pitch: this.pitch,\n        renderWorldCopies: this.renderWorldCopies,\n        maxTileCacheSize: this.maxTileCacheSize,\n        localIdeographFontFamily: this.localIdeographFontFamily,\n        transformRequest: this.transformRequest,\n        bounds: this.bounds ? this.bounds : this.fitBounds,\n        fitBoundsOptions: this.fitBoundsOptions,\n        antialias: this.antialias\n      },\n      mapEvents: this\n    });\n    if (this.cursorStyle) {\n      this.MapService.changeCanvasCursor(this.cursorStyle);\n    }\n  }\n\n  ngOnDestroy() {\n    this.MapService.destroyMap();\n  }\n\n  async ngOnChanges(changes: SimpleChanges) {\n    await this.MapService.mapCreated$.toPromise();\n    if (changes.cursorStyle && !changes.cursorStyle.isFirstChange()) {\n      this.MapService.changeCanvasCursor(changes.cursorStyle.currentValue);\n    }\n    if (changes.minZoom && !changes.minZoom.isFirstChange()) {\n      this.MapService.updateMinZoom(changes.minZoom.currentValue);\n    }\n    if (changes.maxZoom && !changes.maxZoom.isFirstChange()) {\n      this.MapService.updateMaxZoom(changes.maxZoom.currentValue);\n    }\n    if (changes.scrollZoom && !changes.scrollZoom.isFirstChange()) {\n      this.MapService.updateScrollZoom(changes.scrollZoom.currentValue);\n    }\n    if (changes.dragRotate && !changes.dragRotate.isFirstChange()) {\n      this.MapService.updateDragRotate(changes.dragRotate.currentValue);\n    }\n    if (changes.touchZoomRotate && !changes.touchZoomRotate.isFirstChange()) {\n      this.MapService.updateTouchZoomRotate(changes.touchZoomRotate.currentValue);\n    }\n    if (changes.doubleClickZoom && !changes.doubleClickZoom.isFirstChange()) {\n      this.MapService.updateDoubleClickZoom(changes.doubleClickZoom.currentValue);\n    }\n    if (changes.keyboard && !changes.keyboard.isFirstChange()) {\n      this.MapService.updateKeyboard(changes.keyboard.currentValue);\n    }\n    if (changes.dragPan && !changes.dragPan.isFirstChange()) {\n      this.MapService.updateDragPan(changes.dragPan.currentValue);\n    }\n    if (changes.boxZoom && !changes.boxZoom.isFirstChange()) {\n      this.MapService.updateBoxZoom(changes.boxZoom.currentValue);\n    }\n    if (changes.style && !changes.style.isFirstChange()) {\n      this.MapService.updateStyle(changes.style.currentValue);\n    }\n    if (changes.maxBounds && !changes.maxBounds.isFirstChange()) {\n      this.MapService.updateMaxBounds(changes.maxBounds.currentValue);\n    }\n    if (changes.fitBounds && changes.fitBounds.currentValue && !changes.fitBounds.isFirstChange()) {\n      this.MapService.fitBounds(changes.fitBounds.currentValue, this.fitBoundsOptions);\n    }\n    if (changes.fitScreenCoordinates && changes.fitScreenCoordinates.currentValue) {\n      if ((this.center || this.zoom || this.pitch || this.fitBounds) && changes.fitScreenCoordinates.isFirstChange()) {\n        console.warn('[ngx-mapbox-gl] center / zoom / pitch / fitBounds inputs are being overridden by fitScreenCoordinates input');\n      }\n      this.MapService.fitScreenCoordinates(\n        changes.fitScreenCoordinates.currentValue,\n        this.bearing ? this.bearing[0] : 0,\n        this.movingOptions\n      );\n    }\n    if (\n      this.centerWithPanTo &&\n      changes.center && !changes.center.isFirstChange() &&\n      !changes.zoom && !changes.bearing && !changes.pitch\n    ) {\n      this.MapService.panTo(this.center!, this.panToOptions);\n    } else if (\n      changes.center && !changes.center.isFirstChange() ||\n      changes.zoom && !changes.zoom.isFirstChange() ||\n      (changes.bearing && !changes.bearing.isFirstChange() && !changes.fitScreenCoordinates) ||\n      changes.pitch && !changes.pitch.isFirstChange()\n    ) {\n      this.MapService.move(\n        this.movingMethod,\n        this.movingOptions,\n        changes.zoom && this.zoom ? this.zoom[0] : undefined,\n        changes.center ? this.center : undefined,\n        changes.bearing && this.bearing ? this.bearing[0] : undefined,\n        changes.pitch && this.pitch ? this.pitch[0] : undefined\n      );\n    }\n  }\n}\n","import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Directive,\n  Input,\n  NgZone,\n  OnDestroy,\n  TemplateRef\n} from '@angular/core';\nimport { MapboxGeoJSONFeature, MapSourceDataEvent } from 'mapbox-gl';\nimport { fromEvent, merge, Subscription } from 'rxjs';\nimport { filter, startWith, switchMap, take } from 'rxjs/operators';\nimport { MapService } from '../map/map.service';\n\n@Directive({ selector: 'ng-template[mglPoint]' })\nexport class PointDirective { }\n\n@Directive({ selector: 'ng-template[mglClusterPoint]' })\nexport class ClusterPointDirective { }\n\nlet uniqId = 0;\n\n@Component({\n  selector: 'mgl-markers-for-clusters',\n  template: `\n    <mgl-layer\n      [id]=\"layerId\"\n      [source]=\"source\"\n      type=\"circle\"\n      [paint]=\"{'circle-radius': 0}\"\n    ></mgl-layer>\n    <ng-container *ngFor=\"let feature of clusterPoints; trackBy: trackByClusterPoint\">\n      <ng-container *ngIf=\"feature.properties.cluster\">\n        <mgl-marker\n          [feature]=\"feature\"\n        >\n          <ng-container *ngTemplateOutlet=\"clusterPointTpl; context: { $implicit: feature }\"></ng-container>\n        </mgl-marker>\n      </ng-container>\n      <ng-container *ngIf=\"!feature.properties.cluster\">\n        <mgl-marker\n          [feature]=\"feature\"\n        >\n          <ng-container *ngTemplateOutlet=\"pointTpl; context: { $implicit: feature }\"></ng-container>\n        </mgl-marker>\n      </ng-container>\n    </ng-container>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false\n})\nexport class MarkersForClustersComponent implements OnDestroy, AfterContentInit {\n  /* Init input */\n  @Input() source: string;\n\n  @ContentChild(PointDirective, { read: TemplateRef }) pointTpl?: TemplateRef<any>;\n  @ContentChild(ClusterPointDirective, { read: TemplateRef }) clusterPointTpl: TemplateRef<any>;\n\n  clusterPoints: MapboxGeoJSONFeature[]; // Incorrect typings\n  layerId = `mgl-markers-for-clusters-${uniqId++}`;\n\n  private sub = new Subscription();\n\n  constructor(\n    private MapService: MapService,\n    private ChangeDetectorRef: ChangeDetectorRef,\n    private zone: NgZone\n  ) { }\n\n  ngAfterContentInit() {\n    const sub = this.MapService.mapCreated$.pipe(\n      switchMap(() => fromEvent<MapSourceDataEvent>(<any>this.MapService.mapInstance, 'data').pipe(\n        filter((e) => e.sourceId === this.source && e.isSourceLoaded && e.sourceDataType !== 'metadata'),\n        take(1)\n      )),\n      switchMap(() => merge(\n        fromEvent(<any>this.MapService.mapInstance, 'move'),\n        fromEvent(<any>this.MapService.mapInstance, 'moveend')\n      ).pipe(\n        startWith<any>(undefined)\n      ))\n    ).subscribe(() => {\n      this.zone.run(() => {\n        this.updateCluster();\n      });\n    });\n    this.sub.add(sub);\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  trackByClusterPoint(_index: number, clusterPoint: { id: number }) {\n    return clusterPoint.id;\n  }\n\n  private updateCluster() {\n    // Invalid queryRenderedFeatures typing\n    const params: any = { layers: [this.layerId] };\n    if (!this.pointTpl) {\n      params.filter = ['==', 'cluster', true];\n    }\n    this.clusterPoints = this.MapService.mapInstance.queryRenderedFeatures(params);\n    this.ChangeDetectorRef.markForCheck();\n  }\n}\n","import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef\n} from '@angular/core';\nimport { fromEvent, merge, Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport Supercluster, { ClusterFeature, Options } from 'supercluster';\nimport { MapService } from '../map/map.service';\nimport { ClusterPointDirective, PointDirective } from '../markers-for-clusters/markers-for-clusters.component';\n\n@Component({\n  selector: 'mgl-marker-cluster',\n  template: `\n    <ng-container *ngFor=\"let feature of clusterPoints\">\n      <ng-container *ngIf=\"feature.properties.cluster; else point\">\n        <mgl-marker\n          [feature]=\"feature\"\n        >\n          <ng-container *ngTemplateOutlet=\"clusterPointTpl; context: {\n            $implicit: feature,\n            getLeavesFn: getLeavesFn(feature),\n            getChildrenFn: getChildrenFn(feature),\n            getClusterExpansionZoomFn: getClusterExpansionZoomFn(feature)\n          }\"></ng-container>\n        </mgl-marker>\n      </ng-container>\n      <ng-template #point>\n        <mgl-marker\n          [feature]=\"feature\"\n        >\n          <ng-container *ngTemplateOutlet=\"pointTpl; context: { $implicit: feature }\"></ng-container>\n        </mgl-marker>\n      </ng-template>\n    </ng-container>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false\n})\nexport class MarkerClusterComponent implements OnChanges, OnDestroy, AfterContentInit, OnInit {\n  /* Init input */\n  @Input() radius?: number;\n  @Input() maxZoom?: number;\n  @Input() minZoom?: number;\n  @Input() extent?: number;\n  @Input() nodeSize?: number;\n  @Input() log?: boolean;\n  @Input() reduce?: (accumulated: any, props: any) => void;\n  @Input() map?: (props: any) => any;\n\n  /* Dynamic input */\n  @Input() data: GeoJSON.FeatureCollection<GeoJSON.Point>;\n\n  @Output() load = new EventEmitter<Supercluster<GeoJSON.GeoJsonProperties, GeoJSON.GeoJsonProperties>>();\n\n  @ContentChild(PointDirective, { read: TemplateRef }) pointTpl: TemplateRef<any>;\n  @ContentChild(ClusterPointDirective, { read: TemplateRef }) clusterPointTpl: TemplateRef<any>;\n\n  clusterPoints: GeoJSON.Feature<GeoJSON.Point>[];\n\n  private supercluster: Supercluster<GeoJSON.GeoJsonProperties, GeoJSON.GeoJsonProperties>;\n  private sub = new Subscription();\n\n  constructor(\n    private MapService: MapService,\n    private ChangeDetectorRef: ChangeDetectorRef,\n    private zone: NgZone\n  ) { }\n\n  ngOnInit() {\n    console.warn('[ngx-mapbox-gl] mgl-marker-cluster is deprecated, use mgl-markers-for-clusters instead');\n    const options: Options<GeoJSON.GeoJsonProperties, GeoJSON.GeoJsonProperties> = {\n      radius: this.radius,\n      maxZoom: this.maxZoom,\n      minZoom: this.minZoom,\n      extent: this.extent,\n      nodeSize: this.nodeSize,\n      log: this.log,\n      reduce: this.reduce,\n      map: this.map\n    };\n    Object.keys(options)\n      .forEach((key: string) => {\n        const tkey = <keyof Options<GeoJSON.GeoJsonProperties, GeoJSON.GeoJsonProperties>>key;\n        if (options[tkey] === undefined) {\n          delete options[tkey];\n        }\n      });\n    this.supercluster = new Supercluster<GeoJSON.GeoJsonProperties, GeoJSON.GeoJsonProperties>(options);\n    this.supercluster.load(this.data.features);\n    this.load.emit(this.supercluster);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.data && !changes.data.isFirstChange()) {\n      this.supercluster.load(this.data.features);\n      this.updateCluster();\n    }\n  }\n\n  ngAfterContentInit() {\n    this.MapService.mapCreated$.subscribe(() => {\n      const mapMove$ = merge(\n        fromEvent(<any>this.MapService.mapInstance, 'zoomChange'),\n        fromEvent(<any>this.MapService.mapInstance, 'move')\n      );\n      const sub = mapMove$.pipe(\n        startWith<any>(undefined)\n      ).subscribe(() => {\n        this.zone.run(() => {\n          this.updateCluster();\n        });\n      });\n      this.sub.add(sub);\n    });\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  getLeavesFn = (feature: ClusterFeature<GeoJSON.GeoJsonProperties>) => {\n    return (limit?: number, offset?: number) => (<any>this.supercluster.getLeaves)(feature.properties.cluster_id!, limit, offset);\n  }\n\n  getChildrenFn = (feature: ClusterFeature<GeoJSON.GeoJsonProperties>) => {\n    return () => (<any>this.supercluster.getChildren)(feature.properties.cluster_id!);\n  }\n\n  getClusterExpansionZoomFn = (feature: ClusterFeature<GeoJSON.GeoJsonProperties>) => {\n    return () => (<any>this.supercluster.getClusterExpansionZoom)(feature.properties.cluster_id!);\n  }\n\n  private updateCluster() {\n    const bbox = this.MapService.getCurrentViewportBbox();\n    const currentZoom = Math.round(this.MapService.mapInstance.getZoom());\n    this.clusterPoints = this.supercluster.getClusters(bbox, currentZoom);\n    this.ChangeDetectorRef.markForCheck();\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  ViewChild,\n  EventEmitter,\n  Output\n} from '@angular/core';\nimport { PointLike, Popup, LngLatLike } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\nimport { MarkerComponent } from '../marker/marker.component';\n\n@Component({\n  selector: 'mgl-popup',\n  template: '<div #content><ng-content></ng-content></div>',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PopupComponent implements OnChanges, OnDestroy, AfterViewInit, OnInit {\n  /* Init input */\n  @Input() closeButton?: boolean;\n  @Input() closeOnClick?: boolean;\n  @Input() anchor?: 'top' | 'bottom' | 'left' | 'right' | 'top-left' | 'top-right' | 'bottom-left';\n  @Input() offset?: number | PointLike | { [anchor: string]: [number, number] };\n\n  /* Dynamic input */\n  @Input() feature?: GeoJSON.Feature<GeoJSON.Point>;\n  @Input() lngLat?: LngLatLike;\n  @Input() marker?: MarkerComponent;\n\n  @Output() close = new EventEmitter<void>();\n  @Output() open = new EventEmitter<void>();\n\n  @ViewChild('content') content: ElementRef;\n\n  popupInstance?: Popup;\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngOnInit() {\n    if (this.lngLat && this.marker || this.feature && this.lngLat || this.feature && this.marker) {\n      throw new Error('marker, lngLat, feature input are mutually exclusive');\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (\n      changes.lngLat && !changes.lngLat.isFirstChange() ||\n      changes.feature && !changes.feature.isFirstChange()\n    ) {\n      const newlngLat = changes.lngLat ? this.lngLat! : <[number, number]>this.feature!.geometry!.coordinates!;\n      this.MapService.removePopupFromMap(this.popupInstance!, true);\n      const popupInstanceTmp = this.createPopup();\n      this.MapService.addPopupToMap(popupInstanceTmp, newlngLat, this.popupInstance!.isOpen());\n      this.popupInstance = popupInstanceTmp;\n    }\n    if (changes.marker && !changes.marker.isFirstChange()) {\n      const previousMarker: MarkerComponent = changes.marker.previousValue;\n      if (previousMarker.markerInstance) {\n        this.MapService.removePopupFromMarker(previousMarker.markerInstance);\n      }\n      if (this.marker && this.marker.markerInstance && this.popupInstance) {\n        this.MapService.addPopupToMarker(this.marker.markerInstance, this.popupInstance);\n      }\n    }\n  }\n\n  ngAfterViewInit() {\n    this.popupInstance = this.createPopup();\n    this.addPopup(this.popupInstance);\n  }\n\n  ngOnDestroy() {\n    if (this.popupInstance) {\n      if (this.lngLat) {\n        this.MapService.removePopupFromMap(this.popupInstance);\n      } else if (this.marker && this.marker.markerInstance) {\n        this.MapService.removePopupFromMarker(this.marker.markerInstance);\n      }\n    }\n    this.popupInstance = undefined;\n  }\n\n  private createPopup() {\n    return this.MapService.createPopup({\n      popupOptions: {\n        closeButton: this.closeButton,\n        closeOnClick: this.closeOnClick,\n        anchor: this.anchor,\n        offset: this.offset\n      },\n      popupEvents: {\n        open: this.open,\n        close: this.close\n      }\n    }, this.content.nativeElement);\n  }\n\n  private addPopup(popup: Popup) {\n    this.MapService.mapCreated$.subscribe(() => {\n      if (this.lngLat || this.feature) {\n        this.MapService.addPopupToMap(popup, this.lngLat ? this.lngLat : <[number, number]>this.feature!.geometry!.coordinates!);\n      } else if (this.marker && this.marker.markerInstance) {\n        this.MapService.addPopupToMarker(this.marker.markerInstance, popup);\n      } else {\n        throw new Error('mgl-popup need either lngLat/marker/feature to be set');\n      }\n    });\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { CanvasSourceOptions } from 'mapbox-gl';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { MapService } from '../map/map.service';\n\n@Component({\n  selector: 'mgl-canvas-source',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CanvasSourceComponent implements OnInit, OnDestroy, OnChanges, CanvasSourceOptions {\n  /* Init inputs */\n  @Input() id: string;\n\n  /* Dynamic inputs */\n  @Input() coordinates: number[][];\n  @Input() canvas: string;\n  @Input() animate?: boolean;\n\n  private sourceAdded = false;\n  private sub = new Subscription();\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapLoaded$.subscribe(() => {\n      this.init();\n      const sub = fromEvent(<any>this.MapService.mapInstance, 'styledata').pipe(\n        filter(() => !this.MapService.mapInstance.getSource(this.id))\n      ).subscribe(() => {\n        this.init();\n      });\n      this.sub.add(sub);\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.sourceAdded) {\n      return;\n    }\n    if (\n      changes.coordinates && !changes.coordinates.isFirstChange() ||\n      changes.canvas && !changes.canvas.isFirstChange() ||\n      changes.animate && !changes.animate.isFirstChange()\n    ) {\n      this.ngOnDestroy();\n      this.ngOnInit();\n    }\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n    if (this.sourceAdded) {\n      this.MapService.removeSource(this.id);\n    }\n  }\n\n  private init() {\n    const source = {\n      type: 'canvas',\n      coordinates: this.coordinates,\n      canvas: this.canvas,\n      animate: this.animate,\n    };\n    this.MapService.addSource(this.id, source);\n    this.sourceAdded = true;\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { ImageSourceOptions, ImageSource } from 'mapbox-gl';\nimport { Subscription } from 'rxjs';\nimport { MapService } from '../map/map.service';\n\n@Component({\n  selector: 'mgl-image-source',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ImageSourceComponent implements OnInit, OnDestroy, OnChanges, ImageSourceOptions {\n  /* Init inputs */\n  @Input() id: string;\n\n  /* Dynamic inputs */\n  @Input() url: string;\n  @Input() coordinates: number[][];\n\n  private sub: Subscription;\n  private sourceId?: string;\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngOnInit() {\n    this.sub = this.MapService.mapLoaded$\n      .subscribe(() => this.init());\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.sourceId === undefined) {\n      return;\n    }\n\n    const source = this.MapService.getSource<ImageSource>(this.sourceId);\n    // TODO: we need this cast until mapbox typings are fixed (https://github.com/DefinitelyTyped/DefinitelyTyped/pull/36589).\n    (source as any).updateImage({\n      url: changes.url === undefined ? undefined : this.url,\n      coordinates: changes.coordinates === undefined ? undefined : this.coordinates\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.sub !== undefined) {\n      this.sub.unsubscribe();\n    }\n\n    if (this.sourceId !== undefined) {\n      this.MapService.removeSource(this.sourceId);\n    }\n  }\n\n  private init() {\n    this.MapService.addSource(this.id, {\n      type: 'image',\n      url: this.url,\n      coordinates: this.coordinates\n    });\n    this.sourceId = this.id;\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { RasterSource } from 'mapbox-gl';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { MapService } from '../map/map.service';\n\n@Component({\n  selector: 'mgl-raster-source',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RasterSourceComponent implements OnInit, OnDestroy, OnChanges, RasterSource {\n  /* Init inputs */\n  @Input() id: string;\n\n  /* Dynamic inputs */\n  @Input() url: string;\n  @Input() tiles?: string[];\n  @Input() bounds?: number[];\n  @Input() minzoom?: number;\n  @Input() maxzoom?: number;\n  @Input() tileSize?: number;\n\n  type: 'raster' = 'raster'; // Just to make ts happy\n\n  private sourceAdded = false;\n  private sub = new Subscription();\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapLoaded$.subscribe(() => {\n      this.init();\n      const sub = fromEvent(<any>this.MapService.mapInstance, 'styledata').pipe(\n        filter(() => !this.MapService.mapInstance.getSource(this.id))\n      ).subscribe(() => {\n        this.init();\n      });\n      this.sub.add(sub);\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.sourceAdded) {\n      return;\n    }\n    if (\n      changes.url && !changes.url.isFirstChange() ||\n      changes.tiles && !changes.tiles.isFirstChange() ||\n      changes.bounds && !changes.bounds.isFirstChange() ||\n      changes.minzoom && !changes.minzoom.isFirstChange() ||\n      changes.maxzoom && !changes.maxzoom.isFirstChange() ||\n      changes.tileSize && !changes.tileSize.isFirstChange()\n    ) {\n      this.ngOnDestroy();\n      this.ngOnInit();\n    }\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n    if (this.sourceAdded) {\n      this.MapService.removeSource(this.id);\n    }\n  }\n\n  private init() {\n    const source = {\n      type: this.type,\n      url: this.url,\n      tiles: this.tiles,\n      bounds: this.bounds,\n      minzoom: this.minzoom,\n      maxzoom: this.maxzoom,\n      tileSize: this.tileSize\n    };\n    this.MapService.addSource(this.id, source);\n    this.sourceAdded = true;\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { VectorSource } from 'mapbox-gl';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { MapService } from '../map/map.service';\n\n@Component({\n  selector: 'mgl-vector-source',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VectorSourceComponent implements OnInit, OnDestroy, OnChanges, VectorSource {\n  /* Init inputs */\n  @Input() id: string;\n\n  /* Dynamic inputs */\n  @Input() url?: string;\n  @Input() tiles?: string[];\n  @Input() minzoom?: number;\n  @Input() maxzoom?: number;\n\n  type: 'vector' = 'vector'; // Just to make ts happy\n\n  private sourceAdded = false;\n  private sub = new Subscription();\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapLoaded$.subscribe(() => {\n      this.init();\n      const sub = fromEvent(<any>this.MapService.mapInstance, 'styledata').pipe(\n        filter(() => !this.MapService.mapInstance.getSource(this.id))\n      ).subscribe(() => {\n        this.init();\n      });\n      this.sub.add(sub);\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.sourceAdded) {\n      return;\n    }\n    if (\n      changes.url && !changes.url.isFirstChange() ||\n      changes.tiles && !changes.tiles.isFirstChange() ||\n      changes.minzoom && !changes.minzoom.isFirstChange() ||\n      changes.maxzoom && !changes.maxzoom.isFirstChange()\n    ) {\n      this.ngOnDestroy();\n      this.ngOnInit();\n    }\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n    if (this.sourceAdded) {\n      this.MapService.removeSource(this.id);\n    }\n  }\n\n  private init() {\n    this.MapService.addSource(this.id, {\n      type: this.type,\n      url: this.url,\n      tiles: this.tiles,\n      minzoom: this.minzoom,\n      maxzoom: this.maxzoom,\n    });\n    this.sourceAdded = true;\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { VideoSourceOptions } from 'mapbox-gl';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { MapService } from '../map/map.service';\n\n@Component({\n  selector: 'mgl-video-source',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VideoSourceComponent implements OnInit, OnDestroy, OnChanges, VideoSourceOptions {\n  /* Init inputs */\n  @Input() id: string;\n\n  /* Dynamic inputs */\n  @Input() urls: string[];\n  @Input() coordinates: number[][];\n\n  private sourceAdded = false;\n  private sub = new Subscription();\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapLoaded$.subscribe(() => {\n      this.init();\n      const sub = fromEvent(<any>this.MapService.mapInstance, 'styledata').pipe(\n        filter(() => !this.MapService.mapInstance.getSource(this.id))\n      ).subscribe(() => {\n        this.init();\n      });\n      this.sub.add(sub);\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.sourceAdded) {\n      return;\n    }\n    if (\n      changes.urls && !changes.urls.isFirstChange() ||\n      changes.coordinates && !changes.coordinates.isFirstChange()\n    ) {\n      this.ngOnDestroy();\n      this.ngOnInit();\n    }\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n    if (this.sourceAdded) {\n      this.MapService.removeSource(this.id);\n    }\n  }\n\n  private init() {\n    this.MapService.addSource(this.id, {\n      type: 'video',\n      urls: this.urls,\n      coordinates: this.coordinates\n    });\n    this.sourceAdded = true;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { AttributionControlDirective } from './control/attribution-control.directive';\nimport { ControlComponent } from './control/control.component';\nimport { FullscreenControlDirective } from './control/fullscreen-control.directive';\nimport { GeocoderControlDirective, MAPBOX_GEOCODER_API_KEY } from './control/geocoder-control.directive';\nimport { GeolocateControlDirective } from './control/geolocate-control.directive';\nimport { NavigationControlDirective } from './control/navigation-control.directive';\nimport { ScaleControlDirective } from './control/scale-control.directive';\nimport { DraggableDirective } from './draggable/draggable.directive';\nimport { ImageComponent } from './image/image.component';\nimport { LayerComponent } from './layer/layer.component';\nimport { MapComponent } from './map/map.component';\nimport { MAPBOX_API_KEY } from './map/map.service';\nimport { MarkerClusterComponent } from './marker-cluster/marker-cluster.component';\nimport { MarkerComponent } from './marker/marker.component';\nimport { ClusterPointDirective, PointDirective, MarkersForClustersComponent } from './markers-for-clusters/markers-for-clusters.component';\nimport { PopupComponent } from './popup/popup.component';\nimport { CanvasSourceComponent } from './source/canvas-source.component';\nimport { FeatureComponent } from './source/geojson/feature.component';\nimport { GeoJSONSourceComponent } from './source/geojson/geojson-source.component';\nimport { ImageSourceComponent } from './source/image-source.component';\nimport { RasterSourceComponent } from './source/raster-source.component';\nimport { VectorSourceComponent } from './source/vector-source.component';\nimport { VideoSourceComponent } from './source/video-source.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    MapComponent,\n    LayerComponent,\n    DraggableDirective,\n    ImageComponent,\n    VectorSourceComponent,\n    GeoJSONSourceComponent,\n    RasterSourceComponent,\n    ImageSourceComponent,\n    VideoSourceComponent,\n    CanvasSourceComponent,\n    FeatureComponent,\n    MarkerComponent,\n    PopupComponent,\n    ControlComponent,\n    FullscreenControlDirective,\n    NavigationControlDirective,\n    GeocoderControlDirective,\n    GeolocateControlDirective,\n    AttributionControlDirective,\n    ScaleControlDirective,\n    PointDirective,\n    ClusterPointDirective,\n    MarkerClusterComponent,\n    MarkersForClustersComponent\n  ],\n  exports: [\n    MapComponent,\n    LayerComponent,\n    DraggableDirective,\n    ImageComponent,\n    VectorSourceComponent,\n    GeoJSONSourceComponent,\n    RasterSourceComponent,\n    ImageSourceComponent,\n    VideoSourceComponent,\n    CanvasSourceComponent,\n    FeatureComponent,\n    MarkerComponent,\n    PopupComponent,\n    ControlComponent,\n    FullscreenControlDirective,\n    NavigationControlDirective,\n    GeocoderControlDirective,\n    GeolocateControlDirective,\n    AttributionControlDirective,\n    ScaleControlDirective,\n    PointDirective,\n    ClusterPointDirective,\n    MarkerClusterComponent,\n    MarkersForClustersComponent\n  ]\n})\nexport class NgxMapboxGLModule {\n  static withConfig(config: { accessToken: string, geocoderAccessToken?: string }): ModuleWithProviders {\n    return {\n      ngModule: NgxMapboxGLModule,\n      providers: [\n        {\n          provide: MAPBOX_API_KEY,\n          useValue: config.accessToken\n        },\n        {\n          provide: MAPBOX_GEOCODER_API_KEY,\n          useValue: config.geocoderAccessToken || config.accessToken\n        }\n      ],\n    };\n  }\n}\n"]}