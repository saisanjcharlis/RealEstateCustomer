import { Injectable, ɵɵdefineInjectable, Component, ElementRef, KeyValueDiffers, Input, NgModule } from '@angular/core';
import { Subject } from 'rxjs';
import { CommonModule } from '@angular/common';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class MaphilightService {
    constructor() { }
}
MaphilightService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
/** @nocollapse */
MaphilightService.ctorParameters = () => [];
/** @nocollapse */ MaphilightService.ngInjectableDef = ɵɵdefineInjectable({ factory: function MaphilightService_Factory() { return new MaphilightService(); }, token: MaphilightService, providedIn: "root" });

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class MaphilightComponent {
    /**
     * @param {?} elRef
     * @param {?} differs
     */
    constructor(elRef, differs) {
        this.elRef = elRef;
        this.events = {
            imgLoaded: new Subject(),
            updateMaphilight: new Subject(),
        };
        this.el = this.elRef.nativeElement;
        this.configDiffer = differs.find({}).create();
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        this.img = this.el.querySelector('img');
        this.map = this.el.querySelector('map');
        /** @type {?} */
        const id = this.el.getAttribute('id');
        this.img.setAttribute('usemap', '#' + id + ".map");
        this.map.setAttribute('id', id + ".map");
        this.map.setAttribute('name', id + ".map");
        // Wait until image is loaded. Otherwise the $(img).height() in maphilight.js may return 0,
        // which causes mouseover effect to break.
        // See also  https://stackoverflow.com/questions/16084374/jquery-width-and-height-return-0-for-img-element
        this.img.onload = (/**
         * @return {?}
         */
        () => {
            this.events.imgLoaded.next();
            this.updateMaphilight();
        });
    }
    /**
     * @return {?}
     */
    updateMaphilight() {
        if (!this.img)
            return;
        this.events.updateMaphilight.next();
        window.jQuery(this.img).maphilight(this.configToApply());
    }
    ;
    /**
     * @return {?}
     */
    ngDoCheck() {
        /** @type {?} */
        const changes = this.configDiffer.diff(this.config);
        if (changes) {
            this.updateMaphilight();
        }
    }
    /**
     * @private
     * @return {?}
     */
    configToApply() {
        /** @type {?} */
        const config = Object.assign({}, this.config);
        if (config.strokeColor && config.strokeColor[0] == '#')
            config.strokeColor = config.strokeColor.substr(1);
        if (config.fillColor && config.fillColor[0] == '#')
            config.fillColor = config.fillColor.substr(1);
        if (config.shadowColor && config.shadowColor[0] == '#')
            config.shadowColor = config.shadowColor.substr(1);
        return config;
    }
}
MaphilightComponent.decorators = [
    { type: Component, args: [{
                selector: 'maphilight',
                template: "<ng-content>\n</ng-content>\n",
                styles: [""]
            }] }
];
/** @nocollapse */
MaphilightComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: KeyValueDiffers }
];
MaphilightComponent.propDecorators = {
    config: [{ type: Input }]
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class MaphilightModule {
}
MaphilightModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule
                ],
                declarations: [MaphilightComponent],
                exports: [MaphilightComponent]
            },] }
];

export { MaphilightComponent, MaphilightModule, MaphilightService };
//# sourceMappingURL=ng-maphilight.js.map
